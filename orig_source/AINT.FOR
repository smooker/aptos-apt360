      SUBROUTINE  AINT(ITRY)
C     *** THIS PROGRAM LAST MODIFIED FOR VERSION 4,MODIFICATION 4 ***
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***
C     SPECIAL COMMON FOR 2 DIMENSIONAL PACKAGE-- USES PROTAPE BUFFER
C     READ AREA WHICH IS AVAILABLE AT ARLM2 TIME AS SCRATCH
C***
C     NOTE... VARIABLES IER,VTEM,VNUL ARE NOT THE SAME AS IN THE MAIN
C     STREAM ARITHMETIC ELEMENT
C     ALSO EX,EY,EZ,VNUL
      COMMON/A2CMMN/ADUM(82) ,TAU1(1) ,TAU2(1)   ,AFILLR(516),IDUM(6)  ,
     1ITLON(1)  ,IFILLR(233) ,BFLLR(536) ,IFL2(7) ,IIDS ,ICS ,IICS
      COMMON/A2CMMN/DUMMY( 47) ,CSCF(3) ,DSCF(3) ,CFTEM(3)  ,VTEM(3)   ,
     1PTEM1(3)  ,PTEM2(3)  ,PT(3,6)   ,DOT(6)    ,FPNT(3)   ,TE2D(3)   ,
     2TI2D(3)   ,CR        ,THDS      ,THCS      ,TAUDS     ,TAUCS     ,
     3PERCEN    ,ANS       ,RES       ,PNTTAN(3) ,EX(3)     ,EY(3)     ,
     4EZ(3)     ,VNUL(3)   ,
     5ICSCF     ,IDSCF     ,ITOPT     ,N         ,IDONE     ,NREV      ,
     6ITFAR     ,ITC       ,IOC       ,IPC       ,INTP      ,IER       ,
     7NINT      ,ICASE     ,ITAN
      COMMON/A2DYDP/ KDYNFQ(12), NKFQ
      COMMON/A2FPC / Q15X01,QP9X01    ,QP6X01    ,QP5X01    ,QP4X01    ,
     1QP0001    ,QP001     ,QP01      ,QP1       ,Q1P       ,Q10P      ,
     2Q1000P    ,Q1PE5     ,Q1PE6     ,Q1PE10    ,Q1PE20    ,Q1PE30    ,
     3Q1PE36    ,Q1PE38    ,QP8X01    ,QP7X01    ,
     4QP4X09    ,QP9       ,QP99      ,QP995     ,QP997     ,QP999     ,
     5QP9999    ,QP4X95    ,QP5X95    ,QP6X9     ,QP7X9     ,
     6QP6X05    ,QP5X05    ,QP4X05    ,QP0005    ,QP005     ,QP05      ,
     7QP5       ,Q5P       ,                                 Q4X045    ,
     8QP0002    ,QP0047    ,QP017     ,Q1RAD     ,QP0349    ,QP125     ,
     9QP6       ,QP2       ,QP2499    ,QP25      ,QP3
      COMMON/A2FPC / QP7   ,QP75      ,QP8       ,QP866     ,Q1P01     ,
     1Q1P1      ,Q1P2      ,Q1P25     ,Q1P5      ,Q2P       ,Q2P5      ,
     2Q3P       ,Q3P5      ,Q4P       ,Q8P       ,Q11P      ,Q45P      ,
     3Q90P      ,Q130P     ,Q4500P    ,Q9000P    ,QP02      ,QNUL      ,
     4QPIE       ,QFIL(9)
C     COMPUTES ALL POSSIBLE INTERSECTIONS - STORES THEM IN PT(1,1-6) AND
C     RETURNS NINT AS THE NUMBER FOUND
C      IF TANTO HAS BEEN SPECIFIED, SOLVES DIRECTLY FOR ANSWER
C      AND SETS NINT = -1 FOR SUCCESSFUL COMPUTATION
C
C      SET INDEX FOR DOO LOOPS
      J = 3
      ANS=DMIN1(TAU1(ICS),DABS(TAU2(ICS))) * QP99
      IF(CR .LE. ANS) J=1
C
C      ERROR IS TO OR PAST SPECIFIED IN CASE OF ZERO RADIUS CUTTER
C
      IF((J.EQ.1).AND.((ITOPT.EQ.1).OR.(ITOPT.EQ.3))) ITOPT = 2
C
      NINT =0
      ITAN = 0
      IF((ICSCF.EQ.1).AND.(IDSCF.EQ.1)) ICASE = 1
      IF((ICSCF.EQ.2).AND.(IDSCF.EQ.1)) ICASE = 2
      IF((ICSCF.EQ.1).AND.(IDSCF.EQ.2)) ICASE = 3
      IF((ICSCF.EQ.2).AND.(IDSCF.EQ.2)) ICASE = 4
      IF(ICASE.EQ.0) CALL AERR(713)
      IF(ITOPT.EQ.4) GO TO 100
1     GO TO (10,20,30,40) , ICASE
C
C     LINE DS, LINE CS
   10 CALL AVSTO(CSCF,CFTEM)
      CFTEM(3)= CFTEM(3)+   CR
      DO 11 I=1,J
      CALL ALLINT(DSCF,CFTEM,PTEM1)
      IF(IER.EQ.1) CALL AERR(715)
      NINT =NINT+1
      CALL AVSTO(PTEM1,PT(1,NINT))
   11 CFTEM(3)=CFTEM(3)-CR
      GO TO 46
C
C     DS LINE, CS CIRCLE
   20 CALL AVSTO(CSCF,CFTEM)
      CFTEM(3)=CFTEM(3)+    CR
      DO 26 I=1,J
      IF(CFTEM(3).LE.QNUL) GO TO 25
      CALL ALCINT(DSCF,CFTEM,PTEM1,PTEM2,    TAUCS)
      IF(IER.EQ.0) GO TO  25
      IF(IER.EQ.1) GO TO  23
      IF(IER.EQ.2) GO TO  24
C
C     ONE INTERSECTION
   23 NINT = NINT +1
      CALL AVSTO(PTEM1,PT(1,NINT))
      CALL AVSTO(PTEM1,PNTTAN)
      ITAN = 1
      GO TO 25
C
C
C     TWO INTERSECTIONS
   24 NINT = NINT +1
      CALL AVSTO(PTEM1,PT(1,NINT))
      CALL AVSUB(PTEM1,PTEM2,VTEM)
      CALL AVLENG(VTEM,ANS)
      IF(ANS .LT. TAUDS) GO TO 25
      NINT = NINT+1
      CALL AVSTO (PTEM2,PT(1,NINT))
      GO TO 25
C
   25 CFTEM(3) = CFTEM(3) - CR
   26 CONTINUE
      GO TO 46
C
C     DS CIRCLE,  CS LINE CASE
   30 CALL AVSTO(CSCF,CFTEM)
      CFTEM(3) = CFTEM(3)+ CR
      DO 35  I=1,J
      CALL ALCINT(CFTEM,DSCF,PTEM1,PTEM2,    TAUCS)
      IF(IER.EQ.0) GO TO 35
      IF(IER.EQ.1) GO TO 33
      IF(IER.EQ.2) GO TO 34
C
C     ONE INTERSECTION
   33 NINT = NINT +1
      CALL AVSTO(PTEM1,PT(1,NINT) )
      IF(ITAN .EQ. 0) GO TO 10001
      CALL AVSUB(PTEM1,PNTTAN,VTEM)
      VTEM(3) = QNUL
      CALL AVLENG(VTEM,ANS)
      IF(ANS .GT. (Q2P * TAUCS)) GO TO 10002
      IF(QFIL(9) .LT. ONNESS) GO TO 10001
      GO TO 35
10002 IF(I .NE. 2) GO TO 35
10001 CALL AVSTO(PTEM1,PNTTAN)
      ITAN = 1
      ONNESS = QFIL(9)
      GO TO 35
C
C     TWO INTERSECTIONS
   34 NINT = NINT+1
      CALL AVSTO(PTEM1,PT(1,NINT) )
      CALL AVSUB(PTEM1,PTEM2,VTEM)
      CALL AVLENG(VTEM,ANS)
      IF(ANS .LT. TAUDS) GO TO 35
      NINT = NINT+1
      CALL AVSTO(PTEM2,PT(1,NINT) )
C
   35 CFTEM(3) = CFTEM(3)-CR
C
      GO TO 46
C
C     CIRCLE-CIRCLE CASE
   40 CALL AVSTO(CSCF ,CFTEM)
      CFTEM(3) = CFTEM(3)+CR
      DO 45 I=1,J
      IF(ITOPT .NE. 4) GO TO 41
      IF(DSCF(3) .NE. CSCF(3)) GO TO 41
      ANS = (DSCF(1) - CSCF(1)) ** 2
      BNS = (DSCF(2) - CSCF(2)) ** 2
      CNS = DSQRT(ANS + BNS)
      IF(CNS .GE. DSCF(3)) GO TO 41
      IF(DABS(CNS - CR) .GT. TAUCS) GO TO 41
      IF(I .LT. 3) GO TO 45
   41 IF(CFTEM(3) .LT. TAUCS) GO TO 45
      CALL ACCINT(DSCF,CFTEM,PTEM1,PTEM2,    TAUCS)
C
      IF(IER.EQ.0) GO TO 45
      IF(IER.EQ.1) GO TO 43
      IF(IER.EQ.2) GO TO 44
C
C     1 INTERSECTION
   43 NINT = NINT+1
      CALL AVSTO(PTEM1,PT(1,NINT))
      IF(ITAN .EQ. 0) GO TO 10005
      CALL AVSUB(PTEM1,PNTTAN,VTEM)
      VTEM(3) = QNUL
      CALL AVLENG(VTEM,ANS)
      IF(ANS .GT. (Q2P * TAUCS)) GO TO 10006
      IF(QFIL(9) .LT. ONNESS) GO TO 10005
      GO TO 45
10006 IF(I .NE. 2) GO TO 45
10005 IF((((I-2).EQ.0).AND.(ITLON(IIDS).NE.0)).OR.(((I-2).NE.0).AND.(ITL
     1ON(IIDS).EQ.0))) GO TO 45
      CALL AVSTO(PTEM1,PNTTAN)
      ITAN = 1
      ONNESS = QFIL(9)
      GO TO 45
C
C     TWO  INTERSECTIONS
   44 NINT = NINT+1
      CALL AVSTO(PTEM1,PT(1,NINT))
      CALL AVSUB(PTEM1,PTEM2,VTEM)
      CALL AVLENG(VTEM,ANS)
      IF(ANS .LT. TAUDS) GO TO 45
      NINT = NINT+1
      CALL AVSTO(PTEM2,PT(1,NINT))
      GO TO 45
C
C
   45 CFTEM(3) = CFTEM(3) - CR
C
C
   46 IF(ITOPT .EQ. 4) GO TO 200
      IF(NINT .EQ. 0)  GO TO 47
      ITRY = 0
      RETURN
   47 IF(ITRY .EQ. 3) CALL AERR(714)
      RETURN
  100 CONTINUE
C... WHEN CR < TAUCS, J=1 ... BUT UNDER TANTO MODE(WHICH THIS BRANCH IS)
C... RESET J TO 3 ... SO WILL GO THRU INTERSECTION CALCULATION 3 TIMES
      J = 3
C      IF LINE LINE CASE AND TANTO SPECIFIED, ERROR
      IF(ICASE.EQ.1) CALL AERR(720)
      GO TO 1
  200 IF(ITAN .EQ. 1) GO TO 201
      IF(ITRY .EQ. 3) CALL AERR(721)
      RETURN
  201 ITRY = 0
      NINT = -1
      CALL AVSTO(PNTTAN,PT(1,1))
      RETURN
      END

