      SUBROUTINE ASEC2
C     *** THIS PROGRAM LAST MODIFIED FOR VERSION 4,MODIFICATION 4 ***
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*4 AB
      COMMON/FRD/D1MOD,F1MOD,F1SHOT,D1SHOT,FRATE,IFMOD
      COMMON/A0CON/K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11,K12,IBLANK
      COMMON/ATAPTB/PROTAP,CANTAP,CLTAPE,POCTAP,PLOTAP,SRFTAP,TAPES1,
     1TAPES2,TAPES3,TAPES4,INTAPE,IOUTAP,PUNTAP
      COMMON/ASISTM/IPTNLY,ITRCUT,IWAVEN,KFLAG1,LTVMIT,NCLREC,NOPOST,
     1NOPLOT,NUMPST,NUMPTR,ICLPRT,INDEXX,IPLOTR,KFLAGS(9)
      COMMON/S2FLGS/K2FLGS(10)
C... A2CMMN START
      COMMON/A2CMMN/ SP(3) ,SN(3)     ,TP(3)     ,TN(3)     ,SNK(3)    ,
     1SNL(3)    ,SPK(3)    ,SPL(3)    ,TNK(3)    ,TNL(3)    ,TPK(3)    ,
     2TPL(3)    ,PLNV(3)   ,CC(3)     ,U1(3)     ,CUTH(3)   ,SFVCT(3)  ,
     3VNDIR(3)  ,VMD(3)    ,VT(3)     ,TEE(3)    ,SLX(3)    ,DPLAN(3)  ,
     4S(1)      ,RC(1)     ,PLND(1)   ,TH(1)     ,CSD(1)    ,Z(1)      ,
     5EPS1(1)   ,EPS2(1)   ,EPS3(1)   ,EPS4(1)   ,EPS6(1)   ,EPS8(1)   ,
     6TAU(1)    ,TAU1(1)   ,TAU2(1)   ,STCK(1)   ,STCKN(1)  ,STCK1(1)  ,
     7STCK2(1)  ,COS1(1)   ,DPMX1(1)  ,CPLFL(1)  ,CPTST(1)  ,PLNCS(1)  ,
     8PLND1(1)  ,PLTST(1)  ,PAST(1)   ,SPAST(1)  ,ADCS(1)   ,H(1)      ,
     9CUTR(1) ,AFILLR(500) ,IAFL(1)   ,IPONTR(1) ,IFAR(1)   ,IPL(1)
      COMMON/A2CMMN/IUNFL(1),ISFTYP(1),ITLON(1)  ,ISVFL(1)  ,IFL4(1)   ,
     1IOP(1)    ,IOPSET(1) ,JIOPS(1)  ,NOTAN(1)  ,JENT(1)   ,JU1(1)    ,
     2ISIGCR(1) ,ITSEG(1)  ,JTLFLG(1) ,LOFS(1)   ,LIMFL(1)  ,ICSTR(1)  ,
     3JTN(1)    ,ICHKCT(1) ,J20(1)    ,J21(1)    ,J22(1)    ,J23(1)    ,
     4J24(1)    ,J50(1)    ,J51(1)    ,INDIR(1) ,IFILLR(209),TE(3)     ,
     5TEK(3)    ,TEL(3)    ,TES(3)    ,TA(3)     ,TAK(3)    ,TAL(3)    ,
     6PMOVE(3)  ,TI(3)     ,TIK(3)    ,TIL(3)    ,U2(3)     ,UVEC(3)   ,
     7VTEM(3)   ,CMOVE(3)  ,EX(3)     ,EY(3)     ,EZ(3)     ,VNUL(3)   ,
     8TM(3)     ,DIR(3)    ,AXIS(3)   ,AXIS1(3)  ,AXIS2(3)  ,AXIS3(3)  ,
     9REFPNT(3) ,RGT(3)    ,FWD(3)    ,UP(3)     ,ZLNORM(3) ,ZLPNT(3)
      COMMON/A2CMMN/TNDIR(3), VA(3)   ,TMVCMP(3) ,P1(3)     ,P2(3)     ,
     1PNT(3)    ,PNT1(3)   ,OLDU1(3)  ,OGLE(3)   ,RZERO(3)  ,TANMOT(3) ,
     2TLEND1(3) ,V(3)      ,CEND(3)   ,DELMOT(3) ,D2(3)     ,DNMOT(3)  ,
     3AX4(3)    ,A         ,B         ,C         ,RA        ,HI        ,
     4ALPHA     ,GAMMA     ,CAGL      ,SAGL      ,COM1      ,COM4      ,
     5COSTH     ,CTOCL     ,DIAM      ,DIF       ,DIFOUT    ,DINC      ,
     6DP        ,DPE       ,DPI       ,DPL       ,DPMAX     ,DP1       ,
     7DPCNT     ,DSMOV     ,D1        ,D2A       ,EL1       ,EL2       ,
     8FIPNT     ,FLIPCK    ,HAFDIA    ,HCHORD    ,OFFSET    ,PROD1     ,
     9PROD2     ,PSI       ,RADNO     ,RC1       ,RDRM      ,RDRN
      COMMON/A2CMMN/ RONE  ,RZEROL    ,SAVE1     ,SIUTH     ,TANGL     ,
     1THETA     ,ALP       ,EPS7      ,VAMAX     ,VL        ,ZDOTC     ,
     2ZGAMMA    ,ZIGN      ,ZL        ,ZL1       ,ZL2       ,ZNPTS     ,
     3TOLBND    ,CENDIS    ,CENLEN    ,CHORD     ,ABCD(2)   ,ACARD(2)  ,
     4SAVE(6)   ,CUTDAT(7) ,TEM(10)   ,TEMP(20)  ,TCDAT(260),QEQUIV(20),
     5IS        ,IIS       ,IT        ,IIT       ,IPS       ,IIPS      ,
     6IDS       ,IIDS      ,ICS       ,IICS      ,IGS       ,IIGS      ,
     7ICDEFL    ,ICDEFS    ,IAUTPS    ,IGO       ,ICRDCT    ,ICUT      ,
     8IGTFLG    ,INOPS     ,ISRCH     ,IOFSET    ,ISTRUP    ,I3DFLG    ,
     9MULOUT    ,MULTAX    ,NUMAX     ,NUMSFS    ,NUMSUR    ,IGOUG
      COMMON/A2CMMN/ IPDPL ,NUMDIM    ,IRSTRT    ,ICSCNT    ,I3        ,
     1I31       ,J         ,JA        ,JL        ,JS        ,JT        ,
     2KC        ,KND       ,KR        ,L         ,INCFS     ,NP        ,
     3IBEGIN    ,IFAR1     ,IK        ,INS1      ,ITNFLG    ,IVAMAX    ,
     4IWS       ,IIWS      ,IZ        ,NEXT1     ,NEXT2     ,NPTS      ,
     5NUMPT1    ,JAM       ,JAP       ,JTUSED    ,IFRL      ,N         ,
     6M         ,MDIC      ,JBR       ,JCKR      ,JCPR      ,JCR       ,
     7JDR       ,JGR       ,JMIN      ,JMINR     ,JPR       ,JPXR      ,
     8JTR       ,JCNT1     ,JCNT2     ,JCNT3     ,JSW       ,JTKF      ,
     9LISV      ,LSV       ,IPT       ,JFIND     ,IC        ,ICC
      COMMON/A2CMMN/  IL   ,K         ,NUMPTS    ,IAMDCT    ,IFL2      ,
     1J5        ,J6        ,JW6       ,J10       ,J12       ,J13       ,
     2J40       ,J43       ,J54       ,J103      ,PROBUF(100)          ,
     3CANSTO(2000) , IER   ,INSTR1    ,INSTR2    ,NWDS      ,ICL       ,
     4NREC      ,IRECNO    ,ITRFLG    ,NW        ,IDUMMY
C... A2CMMN END
      COMMON/A2DYDP/ KDYNFQ(12), NKFQ
      COMMON/A2CTDF/        TLHITE(1) ,TANHI(1)  ,TANLO(1)  ,UMAX(1)   ,
     1R1(1)     ,CORRAD(1) ,TCONT(1)  ,TLINC(65)
      DIMENSION  SINL(1), COSL(1), TLLDAT(1)
      EQUIVALENCE(SINL(1),TANHI(1)), (COSL(1),TANLO(1)), (TLLDAT(1),
     1TCONT(1))
      COMMON/A2FPC / Q15X01,QP9X01    ,QP6X01    ,QP5X01    ,QP4X01    ,
     1QP0001    ,QP001     ,QP01      ,QP1       ,Q1P       ,Q10P      ,
     2Q1000P    ,Q1PE5     ,Q1PE6     ,Q1PE10    ,Q1PE20    ,Q1PE30    ,
     3Q1PE36    ,Q1PE38    ,QP8X01    ,QP7X01    ,
     4QP4X09    ,QP9       ,QP99      ,QP995     ,QP997     ,QP999     ,
     5QP9999    ,QP4X95    ,QP5X95    ,QP6X9     ,QP7X9     ,
     6QP6X05    ,QP5X05    ,QP4X05    ,QP0005    ,QP005     ,QP05      ,
     7QP5       ,Q5P       ,                                 Q4X045    ,
     8QP0002    ,QP0047    ,QP017     ,Q1RAD     ,QP0349    ,QP125     ,
     9QP6       ,QP2       ,QP2499    ,QP25      ,QP3
      COMMON/A2FPC / QP7   ,QP75      ,QP8       ,QP866     ,Q1P01     ,
     1Q1P1      ,Q1P2      ,Q1P25     ,Q1P5      ,Q2P       ,Q2P5      ,
     2Q3P       ,Q3P5      ,Q4P       ,Q8P       ,Q11P      ,Q45P      ,
     3Q90P      ,Q130P     ,Q4500P    ,Q9000P    ,QP02      ,QNUL      ,
     4QPIE       ,QFIL(9)
       COMMON /A2BURP/ ADENTC,ADENT,ADUMMY,ANS
       DIMENSION AB(4)
       DATA AB(1),AB(2)/4HASEC,4H2TP /,AB(3),AB(4)/4HASEC,4H201 /
      DIMENSION PDUM(2), IPRO(1)
      DATA PDUM(1),PDUM(2)/4H(IDU,4HMMY)/
      EQUIVALENCE  (IPRO(1),PROBUF(1))
  900 CALL ADYNDP(AB(1),1,111111)
C      INITIALIZE VECTOR PACKAGE
C
C     MXSS IS MAXIMUM SURFACE STORAGE - SET TO 600 CELLS FOR CANON. FORM
      MXSS = 2000
C      SET CELL ADUMMY EQUAL TO BCD WORD IDUMMY  (USED TO DETECT IF NO
C     SURFACE DATA GIVEN IN INDIR OR SRFVCT STATEMENT
C...    *** CHANGE REQUIRED FOR S/360  ****
      ADUMMY = PDUM(1)
      CALL ASTUF(ADUMMY,PDUM(2))
C     ICRDCT IS NO OF CELLS TO STORE THE SEQUENCE FIELD
      ICRDCT = 2
C     NUMSFS IS MAX. NO. OF SURFACES ALLOWED IF THIS NUMBER IS CHANGED,
C     THE DUMMY COMMON EXPANDING THE SURFACE VARIABLE BLOCKS SHOULD BE
C     INCREASED, ALLOWING 100 CELLS FOR EACH SURFA3E IN SURVAR AND 40
C         PER SURFACE IN ISFVAR.
      NUMSFS = 5
C     LSV AND LISV ARE THE BASIC LENGTHS OF THE TWO SURFACE BLOCKS
      LSV = 100
      LISV = 40
      JAM = 0
      INDIR(  1) = 0
      INDIR(101) = 0
      INDIR(201) = 0
      EPS8(  1) = EPS1(  1)
      EPS8(101) = EPS1(101)
      EPS8(201) = EPS1(201)
      EPS8(301) = EPS1(301)
      EPS8(401) = EPS1(401)
C     ICSCNT IS THE NUMBER OF CHECK SURFACES CURRENTLY IN CORE
      ICSCNT=0
C
C     ICDEFL IS FLAG INDICATING WHETHER THE CUTTER HAS BEEN DEFINED
C     FIRST TIME IN THIS WILL BE INITIALIZED TO ZERO, BUT FOR ERROR RE-
C     START WE WISH TO SAVE THE STATUS
      ICDEFS = ICDEFL
      ICDEFL = 0
C     IGTFLG USED IN RESTART MODE TO SEE IF THERE IS A USABLE GO/COMAND.
      IGTFLG  = 0
C     JMINR TELLS THE MINIMUM DISTANCE ROUTINE TO RETURN RATHER THAN CAL
C     L AERR IF FAILURE ENCOUNTERED
      JMINR = 0
      IFRL = 1
C     SEE IF ARE IN RESTART MODE IF SO, IPS WILL HAVE BEEN SET TO 1
      IF(IPS.NE.1) GOTO 1
C     MAY BE IN RESTART MODE, TEST IRSTRT
      IF(IRSTRT.NE.1) GOTO 1
C     YES, ARE IN RESTART, SET MODE FLAG ISRCH, RESET CUTTER DEF. STATUS
C     WIPE OUT NTH INTERSECTION COUNTERS AND GO READ MORE PROTAP
      ISTRUP = 0
      ISRCH = 3
      ICDEFL = ICDEFS
      DO 2 I=3,NUMSFS
      K=1+LISV*(I-1)
C     K SET TO INDEX THROUGH THE INTEGER SURFACE VARIABLE BLOCK
 2    IFAR(K) = 1
      GOTO 200
C     INITIALIZATION BRANCH
    1 RC1 = Q4500P
C     RADIUS OF CURVATURE OF PLANE
      IAUTPS = 0
C     NO AUTOPS/
      INOPS = 0
C     NO NOPS
      IFL2 = 0
C     NO MULTI CS PROCESSING
      MULOUT = 0
C     NO TOOL AXIS OUTPUT TO CLTAPE
      ICUT = 0
C     NO DNTCUT/
      MULTAX = 0
      NUMAX = 3
      JAP = 0
C                FIXED AXIS
      IL = 0
      IFMOD=0
C            CLPRINT CONDITION CODE
      I3 = 0
C              DEBUG OPTION INDICATOR
      IVAMAX = 2
C        SET DUMP OPTION FOR ERROR
      IGOUG = 0
C     NO GOUGE CHECK DESIRED
      IOFSET = 0
C     NOT STARTUP (WILL BE RESET LATER WHEN GET STARTUP)
      I3DFLG = 2
C     2DCALC OR 3DCALC HAS NOT BEEN GIVEN, DETERMINE FROM THE DATA WHETH
C     ER 2-D ROUTE CAN BE USED
      ITRFLG = 0
C     NOT TRANTO MODE
      ADENTC = QNUL
C     BCD NAME OF TRANTO ID
      NUMPTS = 400
C     MAX NO OF POINTS PER ELEMENTARY CUT SEQUENCE.
      CALL AVSTO(VNUL,PMOVE)
C     ZERO OUT LAST MOVE NOT ALONG TOOL AXIS (SENSE OF DIREC)
      CALL AVSTO(EZ,TA)
      CALL AVSTO(EZ,TAK)
C     ALSO TOOL AXIS AT START OF CUT
      DPMAX = Q10P
       JTUSED = 16
C     MAXIMUM ALLOWABLE MOVE EXCEPT WHEN PS+DS PLANES
C     SET UP INDEXES FOR THE SURACE VARIABLE BLOCKS
C     IXX FOR FLOATING POINT VARIABLES
C     IIXX FOR INTEGERS
      IPS = 1
      IIPS = 1
      IDS = LSV + 1
      IIDS = LISV + 1
      ICS = 2*LSV + 1
      IICS = 2*LISV + 1
      IGS = NUMSFS*LSV + 1
      IIGS = NUMSFS*LISV + 1
C     NOW SET UP TOLERANCES FOR ALL SURFACES
      DO 3 I=1,NUMSFS
      K=1+(LSV)*(I-1)
      L=1+(LISV)*(I-1)
C     K TO INDEX FLOATING SURFACE VARIABLES, L TO INDEX INTEGERS
      TAU1(K) = QP0005
      TAU2(K) = QNUL
      TAU(K) = QP0005
      EPS1(K) = QP4X05
      EPS2(K) = QP4X95
      EPS3(K) = Q4X045
      EPS4(K) = QP001
      EPS6(K) = QP5X01
      EPS8(K) = QP4X05
C     NO THICKNESS FOR ANY SURFACE
      TH(K) = QNUL
C     GO TO 1ST INTERSECTION OF CS
      IFAR(L) = 1
      LOFS(L) = 8
      JTLFLG(L) = 0
C     ASSUME CANONICAL FORM IS 8 CELLS LONG
C     SET IPONTR(L) TO FIRST CELL OF CANONICAL FORM OF EACH SURFACE
    3 IPONTR(L) = 1+8*(I-1)
C     SET UP PART SURFACE AS XY PLANE, STORE CANONICAL FORM IN CANSTO
C     CELL1      SURFACE TYPE 3 FOR PLANE
C     CELL 2     6 WORDS TO FOLLOW
C     CELL 3     BCD NAME
C     CELL 4     SUBSCRIPT
C     CELL 5     X COMPONENT 0
C     CELL 6     Y COMPONENT 0
C     CELL 7     Z COMPONENT 1
C     CELL 8     D VALUE     0
      CALL ASTOR(3,4,CANSTO(1),8)
      CALL ASTOR(6,4,CANSTO(2),8)
      CALL ASTOR(12HXYPLAN      ,8,CANSTO(3),8)
      CANSTO(4) = QNUL
      CANSTO(5) = QNUL
      CANSTO(6) = QNUL
      CANSTO(7) = Q1P
      CANSTO(8) = QNUL
      J24(IIPS) = 1
C     NOW MAKE FURTHER ASSUMPTIONS INITIALLY
      ISFTYP(IIPS) = 1
      ISFTYP(IIDS) = 1
C     ISFTYP =1,---(TO) FOR ALL SURFACES
C     NO SURFACE VECTORS GIVEN
      ISVFL(IIPS) = 0
      ISVFL(IIDS) = 0
      ISVFL(IICS) = 0
C     NO INDIR GIVEN
      INDIR(IIPS) = 0
      INDIR(IIDS) = 0
      INDIR(IICS) = 0
C     TOOL NOT ON ANY SURFACE
      ITLON(IIPS) = 1
      ITLON(IIDS) = 1
C     UNIT NORMAL CAN BE CALCULATED FROM OFF SURFACE POINT FOR PS
      IUNFL(IIPS) = 1
C     ASSUME TOOL NORMAL FOR PS IS STRAIGHT DOWN (INITIAL GUESS)
      CALL AVSUB(VNUL,EZ,TN(IPS))
C     ASSUM TOOL NORMAL FOR CS IS ALONG X AXIS
      CALL AVSTO(EX,TN(IDS))
C     ASSUME NOT PAST PS
      PAST(IPS) = Q1P
C     PS IS PLANE
      IPL(IIPS)  = 1
C     SET NORMAL MODE FLAG
      ISRCH  = 1
      LIMFL(IIPS) = 0
C
C
C     READ PROTAP(--FIRST 3 INTEGERS TO NREC, INSTR1, INSTR2. REST TO TH
C     E PROTAP BUFFER AREA PROBUF (100 CELLS LONG)
  200 CALL ATAPRD(PROTAP,IER,NWDS,4,NREC,1,INSTR1,1,INSTR2,1,PROBUF,0)
       CALL ADYNDP(AB(3),1,111111)
C
      IF(IER.GE.0) CALL AERR(10)
C...6000,7(TRANTO/ID) OR 8(MULTI-CS)...GO TO ASEC2B AND MAKE
C   AN ENTRY IN TABID IF FWD TRANSFER.
      IF(INSTR1 .NE. 6000) GO TO 60
      IF((INSTR2 .EQ. 7) .OR. (INSTR2 .EQ. 8)) GO TO 50
      GO TO 60
   50 ISTX1 = 6078
      CALL ASEC2B(ISTX1,ISTX2)
   60 CONTINUE
C...
C     SET UP INS1 FOR BRANCHING
      INS1 = INSTR1/1000
      IF(INS1.LT.1.OR.INS1.GT.14) GO TO 215
      IF (INS1 .EQ. 14) GO TO 14000
C     BRANCH ON MODE FLAG ISRCH=1 NORMAL MODE
C     BRANCH ON MODE FLAG ISRCH=2 TRANTO
C     BRANCH ON MODE FLAG ISRCH=3 RESTART (ERROR ENCOUNTERED)
      IF(ISRCH.EQ.1) GO TO 10
      IF(ISRCH.EQ.2) GO TO 20
      IF(ISRCH.EQ.3) GO TO 30
C     NORMAL MODE BRANCH ON RECORD TYPE
   10 GOTO(1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,11000,
     1 12000,13000,14000), INS1
  215 CALL AERR(41)
C     TRANTO BRANCH
C     IS THIS A 1000 TYPE CODE
20    IF(INS1.NE.1) GOTO 200
C     IS A 1000 TYPE -- PUT BCD ID INTO ADENT
      ADENT = PROBUF(1)
C     SEE IF THIS IS THE ONE WE ARE LOOKING FOR
      IF(ADENT.EQ.ADENTC) ISRCH=1
      GO TO 1000
C     RESTART BRANCH
   30 GOTO(1000,2000,3000,4000,5300,6300,7300,8300,9000,10000,11300,
     1 12000,13000,14000),INS1
 3000  ISTX1=K1
       CALL ASEC2D (ISTX1,ISTX2,MXSS)
  400  IF (ISTX2.EQ.K1) GOTO 200
       GOTO 2000
 5300  ISTX1 =K2
 5900  CALL ASEC2A (ISTX1,ISTX2)
       GO TO 400
 5000  ISTX1= K1
       GO TO 5900
 6000  ISTX1 = K1
 6900  CALL ASEC2B (ISTX1,ISTX2)
       GO TO 400
 6300  ISTX1 =K2
       GO TO 6900
 8300  ISTX1 =K3
       GOTO 6900
 8000  ISTX1 = K4
       GO TO 6900
 7000  ISTX1 = K1
 7900  CALL ASEC2C(ISTX1,ISTX2)
       GO TO 400
 7300  ISTX1 = K2
       GO TO 7900
 9000  ISTX1 =K3
       GO TO 7900
 4000  ISTX1= K4
       GOTO 7900
10000  ISTX1 = K5
       GO TO 7900
11000  ISTX1 = K6
       GO TO 7900
11300  ISTX1 = K7
       GOTO 7900
12000  ISTX1 = K8
       GO TO 7900
13000 IF(INSTR2.EQ.1) GO TO 13100
      IF(INSTR2.EQ.2) GO TO 13200
      IF(INSTR2.EQ.5) GOTO 13500
      IF(INSTR2.NE.4) GO TO 200
C...      STORE CURRENT CLTAPE PRINT CONDITION (ON/OFF)
      CALL ASTOR(PROBUF(1),8,IL,4)
C...       PASS ON RECORD TO CLTAPE
      GO TO 2000
13100 CALL ASTOR(PROBUF(1),8,I3,4)
C...     SET DEBUG FLAG
      GO TO 200
13200 IWAVEN = 2
C...      RESTART IN SECTION 2 CAUSED BY SECTION ONE ERROR HERE
      IRSTRT = 1
C...   OUTPUT WARNING MESSAGE ABOUT RESTART--DO NOT ALLOW ANY DUMP
C*****JJJ = IVAMAX
C*****IVAMAX = 1
C*****CALL AERR(-1)
C*****IVAMAX = JJJ
      GO TO 900
C...      SWITCH TO DAC ARELEM
13500 IF(IPRO(2).NE.1) GOTO 200
      IF(IWAVEN.EQ.0) GOTO 13504
      KFLAGS(4)=1
      KFLAGS(5)=0
13504 K2FLGS(1)=1
      NCLREC=NCLREC+1
      CALL ATAPWT(CLTAPE,IER,4,NCLREC,1,INSTR1,1,INSTR2,1,PROBUF,NWDS)
      IF(IER.GE.0) CALL AERR(11)
      CALL A2CTRL
14000 ISTX1=K9
       GO TO 7900
C
C
C     TYPE 1000, RECORD ID
C     SAVE ID OF CARD
 1000 ADENT = PROBUF(1)
      KND = INSTR2
C     SAVE SEQUENCE
      DO 1001 I=1,2
 1001 ACARD(I) = PROBUF(I+1)
C     INCREMENT CLTAPE RECORD NO + OUT PUT RECORD
      IF(ISRCH .NE. 2) GO TO 99999
      IF(ADENT.NE.ADENTC) GO TO 1002
      ISRCH = 1
      GO TO 99999
 1002 IF(ITRFLG.LE.0) GO TO 200
      CALL AERR(315)
C
C
C     POST PROCESSOR PARAMETERS - PAS ON
 2000 IF(INSTR2 .EQ. 1009) GO TO 2001
 2002 CONTINUE
      IF(INS1 .NE. 3) GO TO 99999
      NRSAVE = NREC + 1
99997 CALL ATAPRD(PROTAP,IER,JUNKNW,3,NREC,1,JUNKMJ,1,JUNKMI,1)
      IF(IER .GE. 0) CALL AERR(10)
      IF(JUNKMJ .EQ. 14000) GO TO 99998
      IF((JUNKMJ .EQ. 7000) .OR. (JUNKMJ .EQ. 8000)) GO TO 99998
      GO TO 99997
99998 CALL ASERCH(PROTAP,NRSAVE,IER)
      IF(JUNKMJ .EQ. 8000) GO TO 99999
      GO TO 200
99999 NCLREC = NCLREC + 1
      CALL ATAPWT(CLTAPE,IER,4,NCLREC,1,INSTR1,1,INSTR2,1,PROBUF,NWDS
     1 ,QNUL,1,QNUL,1)
      IF(IER.GE.0) CALL AERR(11)
      GOTO 200
 2001 CONTINUE
      IF(NWDS.EQ.1) GO TO 2003
      DO 2006  JJJ = 1,NWDS
      IF(IPRO(2*JJJ-1) .EQ. 0) GO TO 2007
 2006 CONTINUE
      IF(NWDS.EQ.2) GO TO 2005
      IF(NWDS.NE.3) GO TO 2002
      FRATE = PROBUF(1)
      D1MOD = PROBUF(2)
      F1MOD = PROBUF(3)
      NWDS  = 1
      IFMOD = 1
      GO TO 2002
 2003 FRATE = PROBUF(1)
 2007 IFMOD = 0
      GO TO 2002
 2005 F1SHOT = PROBUF(2)
      D1SHOT = PROBUF(1)
      IF(IFMOD.EQ.1) IFMOD=2
      IF(IFMOD.EQ.0) IFMOD=-1
      GO TO 200
      END

