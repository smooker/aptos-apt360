      SUBROUTINE ATABCR
C     *** THIS PROGRAM LAST MODIFIED FOR VERSION 4,MODIFICATION 4 ***
C
C.....CONSTRUCT A CIRCLE, OF GIVEN RADIUS, TANGENT TO A LINE AND A
C.....TABULATED CYLINDER IN THE XY-PLANE.   THE LINE AND TABCYL DO NOT
C...  NECESSARILY HAVE TO INTERSECT. THE TANGENT POINT MAY BE
C.....IN EITHER OF THE EXTENSION INTERVALS.
C
      IMPLICIT REAL*8(A-H,O-Z)
       INTEGER PUNTAP
       COMMON/ATAPTB/PROTAP,CANTAP,CLTAPE,POCTAP,PLOTAP,SRFTAP,
     1 TAPES1,TAPES2,TAPES3,TAPES4,INTAPE,IOUTAP,PUNTAP
       COMMON/A1COM/REFSYS,NAME,NAME1,JSUBER,JSV,NAMSUB,KDBUG,INDXPT,
     1 LOOP,IFINI
      COMMON/AVST/VST(7200)
      DIMENSION DEFTAB(1000),VECNRL(11)
      EQUIVALENCE(VST(7200),DEFTAB(1000))
      COMMON/ADFSTO/DEFSTO(85),PARTNO(11)
      DIMENSION DEFANS(82),XN(11),YN(11),XINTRS(11),YINTRS(11)
      EQUIVALENCE(DEFSTO(4),DEFANS(1))
C               *          *          *          *          *
      DIMENSION D( 999),ID(1998)
      EQUIVALENCE (DEFTAB(2),ID(1),D(1))
      DIMENSIONAA(22),R(22),INE(3),VMOD(4,2)
C***********************************************************************
      SQRT(Q) = DSQRT(Q)
      ATAN(Q) = DATAN(Q)
      COS(Q) = DCOS(Q)
      SIN(Q) = DSIN(Q)
      ABS(Q) = DABS(Q)
      SIGN(Q,QQ) = DSIGN(Q,QQ)
C
C.....INITIALIZE
C
      JSUBER=0
      TOLER=0.000025D0
C
C...    INUM=1 IF RADIUS PARALLEL LINE INTERSECTS TABCYL,
C...    2 IF DIA. + TOL. PARALLEL LINE INTERSECTS,
C...    3 IF LINE + TOL. INTERSECTS
C
      INUM=0
C
C...    IBACFG=0 IF DIRECTION OF SEARCH IS FWD,1 IF BACKWARD
C...
      IBACFG=0
C
C...    ICOUNT IS COUNTER ON TABCYL INTERVALS SEARCHED
C
      ICOUNT=1
      ICHECK=0
      IONTST=0
      ITBPNT=0
      VMOD(1,1)= 1.0D0
      VMOD(2,1)=-1.0D0
      VMOD(3,1)= 0.0D0
      VMOD(4,1)= 0.0D0
      VMOD(1,2)= 0.0D0
      VMOD(2,2)= 0.0D0
      VMOD(3,2)= 1.0D0
      VMOD(4,2)=-1.0D0
C
C.....CHECK FOR NEGATIVE (D-TERM) IN LINE CANONICAL FORM.
C
      IF(D(6))920,921,921
C
C.....IF SO, CHANGE SIGNS OF D-, I-, AND J-TERMS IN LINE CANONICAL FORM.
C
  920 D(6)=-D(6)
      D(3)=-D(3)
      D(4)=-D(4)
  921 ER=0.0D0
C
C.....FIND TABCYL INTERVAL WHERE THE POINT OF TANGENCY OF THE CIRCLE
C.....AND TABCYL IS ESTIMATED TO BE.
C
      IHU=9
      ILOUT=0
      LOUT=0
      NT=(ID(18)-1)*7+24
      RAD=D(NT+4)
      RADSQR=RAD*RAD
      EPSILN=0.00002D0*RAD
      DELTA=0.00001D0/RAD
      DIAMT=2.0D0*RAD+TOLER
      ITRY=0
      NTZ=NT-2
      CALLASCHTB(IHU,D(NT),D(NT+1),ER)
      IHUT=IHU
      ITL=NT-4
      ITFR=14
      D6SAVE=D(6)
      IF(ER)1,2,1
C
C.....IF ERROR, SET FLAG AND GO OUT.
C
    1 JSUBER=1005
      GOTO51
C...  THIS TEST CHECKS FOR THE DEFINITION
C     CIRCLE/ON,LN,TANTO,TAB,MOD,NEARPT,RADIUS,R
C...  IF SO SKIP THE CODING TO CONSTRUCT A PARALLEL LINE
   2  IF(ID(2)-71)7001,7000,7001
 7000 SAVD6=D(6)
      IONTST=ID(2)
      GO TO 102
C
C.....EXAMINE MOD 1 AND SET A LINE PARALLEL TO THE GIVEN LINE, ON
C.....WHICH THE CENTER OF THE TANGENT CIRCLE WILL LIE.
C
 7001 IF(ID(14)-31)4,3,4
    3 IMOD=1
      GOTO9
    4 IF(ID(14)-32)6,5,6
    5 IMOD=2
      GOTO9
    6 IF(ID(14)-35)8,7,8
    7 IMOD=3
      GOTO9
    8 IF(ID(14)-36)10,90,10
   90 IMOD=4
    9 XTEST=D(3)*VMOD(IMOD,1)+D(4)*VMOD(IMOD,2)
      IF(ABS(XTEST)-1.0D-7)10,10,12
C
C.....IF MODIFIER 1 IS IN ERROR
C
   10 WRITE (IOUTAP,11)
   11 FORMAT(30H0TABCYL MODIFIER INDETERMINANT)
      GOTO1
   12 IF(XTEST)13,10,14
   13 D(6)=ABS(D(6))-ABS(RAD)
      SAVD6=D(6)
      GO TO 102
   14 D(6)=ABS(D(6))+ABS(RAD)
      SAVD6=D(6)
  102 D3SAVE=D(3)
      INUM=1
   15 ID(2)=27
      ID(4)=IHU
C
C.....IHUINT=INDEX LOCATING INTERVAL IN WHICH INTERSECTION
C.....ACTUALLY OCCURS
      IHUINT=0
C
C.....UINT= X COORD. IN LOCAL SYSTEM OF INTERSECTION POINT
C.....OF PARALLEL LINE AND TABCYL
C
      UINT=0.0D0
   41 IHU=IHUT
      D(3)=D3SAVE
      IZ=1
      ASSIGN 1005 TO IT
      GO TO 1000
 1005 CALL ATRNRO(XAA,YAA,XBB,YBB,RA,IZ)
C
C.....TABCYL MODIFIER ACCEPTANCE CRITERION
      IF(ID(2*NTZ)-31)17,16,17
   16 DPVALU=1.0D0
      GO TO 504
C
C.....THIS AREA COMPUTES ROTATION ANGLE OF INTERVAL AXIS TO BASIC AXIS
C
 1000 XAA=D(IHU+7)-D(IHU)
      YAA=D(IHU+8)-D(IHU+1)
      COSTHA=SQRT(XAA*XAA+YAA*YAA)
      SINTHA=YAA/COSTHA
      COSTHA=XAA/COSTHA
      IF(DABS(COSTHA)-1.0D-6) 1001,1001,1003
 1001  RA = -SIGN(1.5707963D0,SINTHA)
 1002 GO TO IT,( 1005,1006,330,1007,1008)
 1003 RA=-ATAN(SINTHA/COSTHA)
      IF(COSTHA)1004,1001,1002
 1004 RA=RA+3.14159265D0
      GO TO 1002
   17 IF(ID(2*NTZ)-32)19,18,19
   18 DPVALU=-1.0D0
  504 XAXIS=1.0D0
      YAXIS=0.0D0
      GO TO 22
   19 IF(ID(2*NTZ)-35)21,20,21
   20 DPVALU=1.0D0
      GO TO 505
   21 IF(ID(2*NTZ)-36)10,91,10
   91 DPVALU=-1.0D0
  505 XAXIS=0.0D0
      YAXIS= 1.0D0
   22 CONTINUE
   31 CALL CHKRET(IHU,RAD,INTROT,D)
      IF(INTROT)42,42,400
  400 DIS=-(D(3)*D(IHU)+D(4)*D(IHU+1)-SAVD6)
      CALL ATRNRO(D(3),D(4),XF,YF,RA,IZ)
      XIPLIN=XF*DIS
      YIPLIN=YF*DIS
C
C...  CHECK FOR VERTICAL PARALLEL LINE IN LOCAL SYSTEM
C
      IF(DABS(YF)-1.D-7)500,500,501
  500 SLPLIN=9.0D+7
      GO TO 502
  501 SLPLIN=-XF/YF
  502 BPLIN=YIPLIN-SLPLIN*XIPLIN
C.....DELETED CHECK FOR VERTICAL PLANE AND CALCULATION OF Y INTERCEPT
C
      KOUNT=1
      ICHECK=0
C
C.....DIVISION OF TABCYL INTERVAL INTO 10 EQUAL PARTS
C
   64 IF(IBACFG)105,105,106
  106 XSTART=XBB
      XLENTH=-XBB
      GO TO 107
  105 XSTART=0.0D0
      XLENTH=XBB
  107 KOUNT=2
      GO TO 67
  866 ISAVE=I-1
C
C.....SUBDIVISION OF LIKELY DIVISION.
C
   65 IF(KOUNT-2)64,103,103
  103 IF(KOUNT-12)66,66,42
   66 XLENTH=ABS(XN(ISAVE+1)-XN(ISAVE))
  633 XSTART=XN(ISAVE)
      IF(IBACFG)111,111,109
  109 XLENTH=-XLENTH
  111 KOUNT=KOUNT+1
   67 DELTX=XLENTH/10.0D0
C
C.....IF LENGTH OF NORMAL VECTOR FROM TABCYL TO PLINE IS LESS THAN R
C.....RADSQR MORE=0,WHEN ONE IS FOUND GREATER THAN RADSQR MORE=2
C
  671 MORE=0
C
C.....INDEX OF FIRST VECTOR IN PROPER DIRECTION
C
      IFIRST=-1
C
C.....INDEX OF LAST VECTOR IN PROPER DIRECTION
C
      ILAST=-4
C
C.....LESS=5 UNTIL NORMAL VECTOR IS FOUND LESS THAN RADSQR,THEN LESS=1
C
      LESS=5
      ILESS=0
      IMORE=0
      DO 84 I=1,11
      XI=I-1
      XN(I)=XSTART+XI*DELTX
      YN(I)=D(IHU+2)*XN(I)**3+D(IHU+3)*XN(I)**2-(D(IHU+2)*D(IHU+4)+
     1D(IHU+3))*(D(IHU+4)*XN(I))
      SLOPE=3.0D0*D(IHU+2)*XN(I)**2+2.0D0*D(IHU+3)*XN(I)-(D(IHU+2)*
     1D(IHU+4)+D(IHU+3))*D(IHU+4)
C
C.....ALTERED INTERSECTION CALC TO USE LINES IN FORM AX+BY=D
C
      SLOPET=DSQRT(SLOPE*SLOPE+1.0D0)
      XFNOR=1.0D0/SLOPET
      YFNOR=SLOPE/SLOPET
      DNOR=XFNOR*XN(I)+YFNOR*YN(I)
      SIMD=XF*YFNOR-YF*XFNOR
      IF(DABS(SIMD)-1.0D-6)79,79,68
   68 XINTRS(I)=(YFNOR*DIS-YF*DNOR)/SIMD
      YINTRS(I)=(XFNOR*DIS-XF*DNOR)/(XFNOR*YF-XF*YFNOR)
   25 VECNRX=XINTRS(I)-XN(I)
      VECNRY=YINTRS(I)-YN(I)
      CC=IZ
      AXISXV=XAXIS*COS(RA)-CC*YAXIS*SIN(RA)
      AXISYV=CC*XAXIS*SIN(RA)+YAXIS*COS(RA)
C
C.....CHECK TO SEE IF TABCYL MODIFIER IS ACCEPTABLE FOR THIS NORMAL
C
      DOTP=VECNRX*AXISXV+VECNRY*AXISYV
      IF((DPVALU*DOTP)-1.0D-5)79,79,80
C
C.....LENGTH OF NORMAL VECTOR FROM TABCYL POINT TO PLINE
C
   80 VECNRL(I)=VECNRX**2+VECNRY**2
      IF(IFIRST)183,183,184
  183 IFIRST=I
  184 ILAST=I
C
C.....HAVE WE FOUND LOCATION OF CIRCLE CENTER
C
      IF(ABS(VECNRL(I)-RADSQR)-EPSILN)83,83,82
   82 IF(VECNRL(I)-RADSQR)85,83,86
   85 LESS=1
      ILESS=I
      GO TO 876
   86 MORE=2
      IMORE=I
C
C.....DO WE HAVE ONE VECTOR GREATER AND ONE SMALLER THAN RADSQR
C
  876 IF(MORE-LESS)84,84,890
C
C.....YES-ARE THEY ADJACENT
C
  890 IF(IABS(ILESS-IMORE)-1)878,878,84
C
C.....YES-HAVE SUBDIVISIONS BECOME SMALL ENOUGH TO ASSUME
C.....PERPENDICULARITY
C
C 878 IF(ABS(XN(1)-XN(2))-1.0E-7)6070,6070,866
  878 IF(DABS(XN(1)-XN(2))-1.0D-7)5500,5500,866
   79 VECNRL(I)=-1.0D0
   84 CONTINUE
C...  UTILIZE TABPNT SUBROUTINE TO FIND THE INTERSECTION OF THE PARALLEL
C...  LINE AND THE TABCYL.
C
      IF(ITBPNT)867,440,867
  440 CALL ATABPT
      ITBPNT=1
      IF(JSUBER)621,600,621
  600 IHUINT=ID(6)
      UINT=D(1)
      JSUBER=0
      SAUINT=UINT
      SAVXBB=SQRT((D(IHUINT+7)-D(IHUINT))**2+(D(IHUINT+8)-D(IHUINT+1))
     1**2)
      D(3)=D3SAVE
C
C.....IS THIS INTERVAL WITHIN ONE ON EITHER SIDE OF
C.....INTERVAL OF INTERSECTION
C
  867 IF(IABS(IHU-IHUINT)-7)800,800,621
C
C.....IT IS WITHIN ONE-IS IT BEFORE,IN,OR AFTER THE INTERSECTION
C.....INTERVAL
C
  800 IF(IHU-IHUINT)809,801,802
  809 IF(DABS(SAUINT)-0.000001D0)803,803,621
  803 UINT=XBB
      GO TO 602
  801 UINT=SAUINT
      GO TO 602
  802 IF(DABS(SAUINT-SAVXBB)-0.000001D0) 806, 806, 621
  806 UINT=0.0D0
  602 CSLOPE=3.D0*D(IHU+2)*UINT**2+2.D0*D(IHU+3)*UINT-(D(IHU+2)*D(IHU+4)
     1+D(IHU+3))*D(IHU+4)
C
C.....TEST FOR LINE PERPENDICULAR TO TABCYL
C
      SLOPET=DSQRT(CSLOPE*CSLOPE +1.0D0)
      XFNOR=CSLOPE/SLOPET
C
C.....XFNOR AND YFNOR ARE DIR. COSINES OF TANGENT LINE AT UINT
C
      YFNOR=-1.0D0/SLOPET
C
C.....COSTHA IS COSINE OF ANGLE BETWEEN PLINE AND TANGENT LINE
C
      COSTHA=ABS(XFNOR*XF+YFNOR*YF)
      IF(COSTHA-DMIN1(1.0D-3,DELTA))6070,6070,6073
C
C.....LINE NOT PERPENDICULAR TO TABCYL
C
 6073 IF(ICHECK-1)6074,603,6074
 6074 IF(KOUNT-12)180,180,42
C
C.....LINE PERPENDICULAR TO TABCYL
C
 6070 IF(DABS(D(4))-0.0000001D0)651,651,650
  651 XCOMP=0.0D0
      YCOMP=RAD
      CLOPE=9999999.D0
      GO TO 652
  650 CLOPE=-D(3)/D(4)
      XCOMP=DSQRT(RADSQR/(1.0D0+CLOPE**2))
      YCOMP=ABS(CLOPE*XCOMP)
  652 IZ=-1
      ASSIGN 1006 TO IT
      GO TO 1000
 1006  CALL ATRNRO (UINT,0.0D0,PX,PY,RA,IZ)
      IF(ID(2*NTZ)-32)608,609,610
  608 DEFANS(1)=D(IHU)+PX+XCOMP
      DEFANS(2)=D(IHU+1)+PY+SIGN(YCOMP,CLOPE)
      GO TO 613
  609 DEFANS(1)=D(IHU)+PX-XCOMP
      DEFANS(2)=D(IHU+1)+PY-SIGN(YCOMP,CLOPE)
      GO TO 613
  610 IF(ID(2*NTZ)-36)611,612,613
  611 DEFANS(1)=D(IHU)+PX+SIGN(XCOMP,CLOPE)
      DEFANS(2)=D(IHU+1)+PY+YCOMP
      GO TO 613
  612 DEFANS(1)=D(IHU)+PX-SIGN(XCOMP,CLOPE)
      DEFANS(2)=D(IHU+1)+PY-YCOMP
      GO TO 613
C
C...  THIS SECTION IS FOR THE CASE WHERE THE RADIUS OF CURVATURE OF THE
C...  TABCYL IS SMALL,AND THE NORMALS FROM POINTS VERY CLOSE TOGETHER
C...  ON THE TABCYL HIT THE STRAIGHT LINE UPON WHICH THE CIRCLE CENTER
C...  IS TO LIE AT POINTS THAT ARE A SIGNIFICANT DISTANCE APART.
 5500 IF(ABS(XN(1)-D(1))-1.0E-7)6070,6070,5501
 5501 XP=(XN(I)+SLPLIN*(YN(I)-BPLIN))/(SLPLIN**2+1.0D0)
      YP=(SLPLIN*(XN(I)+SLPLIN*YN(I))+BPLIN)/(SLPLIN**2+1.0D0)
      DIST=((XN(I)-XP)**2+(YN(I)-YP)**2)
      DMOVE=RADSQR-DIST
      XMOVE=DSQRT(DMOVE/(1.0D0+SLPLIN**2))
      YMOVE=ABS(SLPLIN*XMOVE)
      IF(IMORE-ILESS)5502,5502,5503
 5502 XLONG=XINTRS(I-1)
      YLONG=YINTRS(I-1)
      GO TO 5505
 5503 XLONG=XINTRS(I)
      YLONG=YINTRS(I)
 5505 IF(XLONG-XP)26,26,27
   26 XINTRS(I)=XP-XMOVE
      GO TO 28
   27 XINTRS(I)=XP+XMOVE
   28 IF(YLONG-YP)29,29,30
   29 YINTRS(I)=YP-YMOVE
      GO TO 83
   30 YINTRS(I)=YP+YMOVE
      GO TO 83
C.....CHECK FOR A HUMP OR VALLEY WHERE THE SUCCESSIVE VECTOR LENGTHS
C.....CHANGE FROM INCREASING TO DECREASING OR VICE VERSA
C
  621 INCRES=0
      IDECRS=0
      JSUBER=0
  199 DO 630 I=1,11
      IF(I-9)622,622,42
  622 IF(VECNRL(I))630,625,625
  625 IF(VECNRL(I+1))630,6251,6251
 6251 IF(VECNRL(I+2))630,6252,6252
 6252 IF(VECNRL(I+1)-VECNRL(I))626,630,627
  626 IDECRS=1
      GO TO 6271
  627 INCRES=1
 6271 IF(VECNRL(I+2)-VECNRL(I+1))628,630,629
  628 IDECRS=1
      GO TO 6291
  629 INCRES=1
 6291 IF(INCRES-IDECRS)630,631,630
  630 CONTINUE
      GO TO 42
  631 IF(KOUNT-12)632,632,42
  632 IF(KOUNT-12)634,196,196
  634 XLENTH=ABS(XN(I+2)-XN(I))
      ISAVE=I
      GO TO 633
C
C.....SUBDIVIDE BETWEEN ADJACENT GOOD AND BAD VECTORS
C
  180 IF(IFIRST)603,603,186
  186 IF(VECNRL(IFIRST)-VECNRL(ILAST))181,193,185
  182 IF(IFIRST-1)196,196,187
  187 IF(IFIRST-11)188,196,196
  188 I=IFIRST-1
      GO TO 632
  185 IF(LESS-1)189,182,189
  189 IF(ILAST-11)190,196,196
  190 I=ILAST-1
      GO TO 632
  181 IF(LESS-1)182,189,182
  193 IF(IFIRST-1)191,191,194
  194 IF(ILAST-11)188,192,192
  191 I=2
  195 IF(KOUNT-12)866,196,196
  196 IF(ICHECK-1)197,42,42
  197 ICHECK=1
      KOUNT=1
      GO TO 64
  192 I=11
      GO TO 195
  618 IF(KOUNT-12)619,619,42
C
C.....SUBDIVIDE AROUND THE INTERSECTION OF PARALLEL LINE AND TABCYL
C
  619 IF(I-2)720,720,721
  720 ISAVE=I-1
  724 XLENTH=ABS(XN(ISAVE+2)-XN(ISAVE))
      GO TO 633
  721 ISAVE=I-2
      IF(I-11)722,724,724
  722 XLENTH=ABS(XN(ISAVE+3)-XN(ISAVE))
      GO TO 633
  603 DO 605 I=2,11
      IF(IBACFG)604,604,606
  604 IF(UINT-0.000001D0-XN(I))618,618,605
  606 IF(UINT+0.000001D0-XN(I))605,618,618
  605 CONTINUE
C
C.....SET-UP RE-TRY IN ANOTHER INTERVAL UNTIL 3 INTERVALS ON EACH SIDE
C.....OF THE ESTIMATED INTERVAL HAVE BEEN TRIED----A TOTAL OF 7
C.....INTERVALS.(EXTENSION INTERVALS ARE INCLUDED)
C
   42 IF(ICOUNT-7)422,43,43
  422 IZ=-1
      ASSIGN 330 TO IT
      GO TO 1000
  330 IF(MOD(ICOUNT,2))300,301,300
  300 IHU=IHUT+7*((ICOUNT+1)/2)
      IBACFG=0
      ICOUNT=ICOUNT+1
      IF(IHU-ITL)72,340,340
  301 IHU=IHUT-7*(ICOUNT/2)
      IBACFG=1
      ICOUNT=ICOUNT+1
      IF(IHU-ITFR)350,350,72
  340 LOUT=1
      GO TO 330
  350 ILOUT=1
      IF(LOUT-ILOUT)330,43,330
   43 WRITE(IOUTAP,44)
   44 FORMAT(32H0TABCYL TANGENT CIRCLE NOT FOUND)
      GO TO 1
   72 IZ=1
      ASSIGN 1007 TO IT
      GO TO 1000
 1007 CALL ATRNRO(XAA,YAA,XBB,YBB,RA,IZ)
      GO TO 31
   83 X11=XINTRS(I)
      Y11=YINTRS(I)
C
C.....CENTER FOUND PUT IT BACK INTO ORIGINAL COORDINATE SYSTEM AND PUT
C.....CANONICAL FORM OF CIRCLE IN DEFANS BLOCK.
C
   50 IZ=-1
      ASSIGN 1008 TO IT
      GO TO 1000
 1008 CALL ATRNRO(X11,Y11,XA,YA,RA,IZ)
      DEFANS(1)=D(IHU)+XA
      DEFANS(2)=D(IHU+1)+YA
  613 DEFANS(3)=0.0D0
      DEFANS(4)=0.0D0
      DEFANS(5)=0.0D0
      DEFANS(6)=1.0D0
      DEFANS(7)=RAD
C
C.....TEST DEBUG FLAG
C
      IF(KDBUG)1009,51,1009
 1009 WRITE (IOUTAP,100)DEFANS(1),DEFANS(2),DEFANS(7)
  100 FORMAT(1H08E14.6)
   51 RETURN
      END

