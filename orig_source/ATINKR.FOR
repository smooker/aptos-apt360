      SUBROUTINE ATINKR
C     *** THIS PROGRAM LAST MODIFIED FOR VERSION 4, MODIFICATION 2 ***
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*4  AB
C... A2CMMN START
      COMMON/A2CMMN/ SP(3) ,SN(3)     ,TP(3)     ,TN(3)     ,SNK(3)    ,
     1SNL(3)    ,SPK(3)    ,SPL(3)    ,TNK(3)    ,TNL(3)    ,TPK(3)    ,
     2TPL(3)    ,PLNV(3)   ,CC(3)     ,U1(3)     ,CUTH(3)   ,SFVCT(3)  ,
     3VNDIR(3)  ,VMD(3)    ,VT(3)     ,TEE(3)    ,SLX(3)    ,DPLAN(3)  ,
     4S(1)      ,RC(1)     ,PLND(1)   ,TH(1)     ,CSD(1)    ,Z(1)      ,
     5EPS1(1)   ,EPS2(1)   ,EPS3(1)   ,EPS4(1)   ,EPS6(1)   ,EPS8(1)   ,
     6TAU(1)    ,TAU1(1)   ,TAU2(1)   ,STCK(1)   ,STCKN(1)  ,STCK1(1)  ,
     7STCK2(1)  ,COS1(1)   ,DPMX1(1)  ,CPLFL(1)  ,CPTST(1)  ,PLNCS(1)  ,
     8PLND1(1)  ,PLTST(1)  ,PAST(1)   ,SPAST(1)  ,ADCS(1)   ,H(1)      ,
     9CUTR(1) ,AFILLR(500) ,IAFL(1)   ,IPONTR(1) ,IFAR(1)   ,IPL(1)
      COMMON/A2CMMN/IUNFL(1),ISFTYP(1),ITLON(1)  ,ISVFL(1)  ,IFL4(1)   ,
     1IOP(1)    ,IOPSET(1) ,JIOPS(1)  ,NOTAN(1)  ,JENT(1)   ,JU1(1)    ,
     2ISIGCR(1) ,ITSEG(1)  ,JTLFLG(1) ,LOFS(1)   ,LIMFL(1)  ,ICSTR(1)  ,
     3JTN(1)    ,ICHKCT(1) ,J20(1)    ,J21(1)    ,J22(1)    ,J23(1)    ,
     4J24(1)    ,J50(1)    ,J51(1)    ,INDIR(1) ,IFILLR(209),TE(3)     ,
     5TEK(3)    ,TEL(3)    ,TES(3)    ,TA(3)     ,TAK(3)    ,TAL(3)    ,
     6PMOVE(3)  ,TI(3)     ,TIK(3)    ,TIL(3)    ,U2(3)     ,UVEC(3)   ,
     7VTEM(3)   ,CMOVE(3)  ,EX(3)     ,EY(3)     ,EZ(3)     ,VNUL(3)   ,
     8TM(3)     ,DIR(3)    ,AXIS(3)   ,AXIS1(3)  ,AXIS2(3)  ,AXIS3(3)  ,
     9REFPNT(3) ,RGT(3)    ,FWD(3)    ,UP(3)     ,ZLNORM(3) ,ZLPNT(3)
      COMMON/A2CMMN/TNDIR(3), VA(3)   ,TMVCMP(3) ,P1(3)     ,P2(3)     ,
     1PNT(3)    ,PNT1(3)   ,OLDU1(3)  ,OGLE(3)   ,RZERO(3)  ,TANMOT(3) ,
     2TLEND1(3) ,V(3)      ,CEND(3)   ,DELMOT(3) ,D2(3)     ,DNMOT(3)  ,
     3AX4(3)    ,A         ,B         ,C         ,RA        ,HI        ,
     4ALPHA     ,GAMMA     ,CAGL      ,SAGL      ,COM1      ,COM4      ,
     5COSTH     ,CTOCL     ,DIAM      ,DIF       ,DIFOUT    ,DINC      ,
     6DP        ,DPE       ,DPI       ,DPL       ,DPMAX     ,DP1       ,
     7DPCNT     ,DSMOV     ,D1        ,D2A       ,EL1       ,EL2       ,
     8FIPNT     ,FLIPCK    ,HAFDIA    ,HCHORD    ,OFFSET    ,PROD1     ,
     9PROD2     ,PSI       ,RADNO     ,RC1       ,RDRM      ,RDRN
      COMMON/A2CMMN/ RONE  ,RZEROL    ,SAVE1     ,SIUTH     ,TANGL     ,
     1THETA     ,ALP       ,EPS7      ,VAMAX     ,VL        ,ZDOTC     ,
     2ZGAMMA    ,ZIGN      ,ZL        ,ZL1       ,ZL2       ,ZNPTS     ,
     3TOLBND    ,CENDIS    ,CENLEN    ,CHORD     ,ABCD(2)   ,ACARD(2)  ,
     4SAVE(6)   ,CUTDAT(7) ,TEM(10)   ,TEMP(20)  ,TCDAT(260),QEQUIV(20),
     5IS        ,IIS       ,IT        ,IIT       ,IPS       ,IIPS      ,
     6IDS       ,IIDS      ,ICS       ,IICS      ,IGS       ,IIGS      ,
     7ICDEFL    ,ICDEFS    ,IAUTPS    ,IGO       ,ICRDCT    ,ICUT      ,
     8IGTFLG    ,INOPS     ,ISRCH     ,IOFSET    ,ISTRUP    ,I3DFLG    ,
     9MULOUT    ,MULTAX    ,NUMAX     ,NUMSFS    ,NUMSUR    ,IGOUG
      COMMON/A2CMMN/ IPDPL ,NUMDIM    ,IRSTRT    ,ICSCNT    ,I3        ,
     1I31       ,J         ,JA        ,JL        ,JS        ,JT        ,
     2KC        ,KND       ,KR        ,L         ,INCFS     ,NP        ,
     3IBEGIN    ,IFAR1     ,IK        ,INS1      ,ITNFLG    ,IVAMAX    ,
     4IWS       ,IIWS      ,IZ        ,NEXT1     ,NEXT2     ,NPTS      ,
     5NUMPT1    ,JAM       ,JAP       ,JTUSED    ,IFRL      ,N         ,
     6M         ,MDIC      ,JBR       ,JCKR      ,JCPR      ,JCR       ,
     7JDR       ,JGR       ,JMIN      ,JMINR     ,JPR       ,JPXR      ,
     8JTR       ,JCNT1     ,JCNT2     ,JCNT3     ,JSW       ,JTKF      ,
     9LISV      ,LSV       ,IPT       ,JFIND     ,IC        ,ICC
      COMMON/A2CMMN/  IL   ,K         ,NUMPTS    ,IAMDCT    ,IFL2      ,
     1J5        ,J6        ,JW6       ,J10       ,J12       ,J13       ,
     2J40       ,J43       ,J54       ,J103      ,PROBUF(100)          ,
     3CANSTO(2000) , IER   ,INSTR1    ,INSTR2    ,NWDS      ,ICL       ,
     4NREC      ,IRECNO    ,ITRFLG    ,NW        ,IDUMMY
C... A2CMMN END
      COMMON/A2FPC / Q15X01,QP9X01    ,QP6X01    ,QP5X01    ,QP4X01    ,
     1QP0001    ,QP001     ,QP01      ,QP1       ,Q1P       ,Q10P      ,
     2Q1000P    ,Q1PE5     ,Q1PE6     ,Q1PE10    ,Q1PE20    ,Q1PE30    ,
     3Q1PE36    ,Q1PE38    ,QP8X01    ,QP7X01    ,
     4QP4X09    ,QP9       ,QP99      ,QP995     ,QP997     ,QP999     ,
     5QP9999    ,QP4X95    ,QP5X95    ,QP6X9     ,QP7X9     ,
     6QP6X05    ,QP5X05    ,QP4X05    ,QP0005    ,QP005     ,QP05      ,
     7QP5       ,Q5P       ,                                 Q4X045    ,
     8QP0002    ,QP0047    ,QP017     ,Q1RAD     ,QP0349    ,QP125     ,
     9QP6       ,QP2       ,QP2499    ,QP25      ,QP3
      COMMON/A2FPC / QP7   ,QP75      ,QP8       ,QP866     ,Q1P01     ,
     1Q1P1      ,Q1P2      ,Q1P25     ,Q1P5      ,Q2P       ,Q2P5      ,
     2Q3P       ,Q3P5      ,Q4P       ,Q8P       ,Q11P      ,Q45P      ,
     3Q90P      ,Q130P     ,Q4500P    ,Q9000P    ,QP02      ,QNUL      ,
     4QPIE       ,QFIL(9)
      DIMENSION SLX1(3),SLX2(3),V1(3),V2(3),VC(3),VNC(3)
      DIMENSION TPSAV(3),TNSAV(3),SPSAV(3),SNSAV(3),SNPSSV(3),SNDSSV(3)
      EQUIVALENCE (PROBUF(41),SLX1(1))
      EQUIVALENCE (PROBUF(44),SLX2(1))
      EQUIVALENCE (PROBUF(47),V1(1))
      EQUIVALENCE (PROBUF(50),V2(1))
      EQUIVALENCE (PROBUF(53),VC(1))
      EQUIVALENCE (PROBUF(56),VNC(1))
      EQUIVALENCE(PROBUF(20),ANS)
      EQUIVALENCE(PROBUF(21),ANS1)
      EQUIVALENCE(PROBUF(22),ANS2)
      EQUIVALENCE(PROBUF(23),COSBTA)
      EQUIVALENCE(PROBUF(24),COSALP)
      EQUIVALENCE(PROBUF(25),COSTHE)
      EQUIVALENCE(PROBUF(26),SINTHE)
      EQUIVALENCE (PROBUF(27),AII)
      EQUIVALENCE (PROBUF(28),AIII)
      EQUIVALENCE (PROBUF(59),TPSAV(1))
      EQUIVALENCE (PROBUF(62),TNSAV(1))
      EQUIVALENCE (PROBUF(65),SPSAV(1))
      EQUIVALENCE (PROBUF(68),SNSAV(1))
      EQUIVALENCE (PROBUF(71),SNPSSV(1))
      EQUIVALENCE (PROBUF(74),SNDSSV(1))
C...
      DIMENSION AB(2)
      DATA AB(1),AB(2)/4HATIN,4HKR  /
C      PROCESS MULTI AXIS PART PROGRAMS
C      INPUT VALUES
C     NUMAX = 3      3AXIS
C     NUMAX = 4      4AXIS
C     NUMAX = 5      5AXIS
C     MULTAX = 1     NORMPS OR NORMDS
C     MULTAX = 2     PARALLEL TO RULINGS OF RULED SURFACE
C     MULTAX = 3     GENERSL FOUR OR FIVE AXIS CASE
C      ICC   = 1 IF PS CONTROL, =2 IF DS CONTROL
C.......
      CALL ADYNDP(AB(1),10,111111)
C
C...  TEST INPUT FLAGS AND BRANCH TO APPROPRIATE AREA
C
      JTNPS=JTN(IIPS)
      JTNDS = JTN(IIDS)
      CALL AVSTO(SN(IPS),SNPSSV)
      CALL AVSTO(SN(IDS),SNDSSV)
      IF(ITLON(IIPS).NE.0) GO TO 1
      CALL AVDOT(SN(IPS),TA,ANS)
      IF(ANS.LT.QNUL) CALL AVSUB(VNUL,SN(IPS),SN(IPS))
      JTN(IIPS) = 0
    1 IF(ITLON(IIDS).NE.0) GO TO 2
      CALL AVDOT(SN(IDS),TA,ANS)
      IF(ANS.LT.QNUL) CALL AVSUB(VNUL,SN(IDS),SN(IDS))
      JTN(IIDS) = 0
    2 CONTINUE
C      SET SWITCH TO INDICATE NO TROUBLE WITH SIGN CONVENTION
      KSCONV = 0
      IF((NUMAX.EQ.5).AND.(MULTAX.EQ.1)) GO TO 100
C      (100 FOR NORMPS OR DS)
C...
      IF((NUMAX.EQ.5).AND.(MULTAX.EQ.2)) GO TO 200
C      (200 FOR PARALLEL TO RULED SURFACE)
      IF((NUMAX.EQ.4).AND.(MULTAX.EQ.3)) GO TO 400
C      (400 FOR GENERAL FOUR AXIS.... USED ALSO FOR FIVE XXIS)
      IF((NUMAX.EQ.5).AND.(MULTAX.EQ.3)) GO TO 500
C      (500 FOR FIVE AXIS)
C      IF HAVE NOT TAKEN ANY BRANCH, INVALIS CASE
      CALL AERR(850)
  100 CONTINUE
C...
C      NORMPS OR NORMDS... SET UP II AS INDEX OF CONTROLLING SURFACE
C      TEST FOR VALID ICSUR
      IF((ICC.EQ.1).OR.(ICC.EQ.2)) GO TO 120
  110 CALL AERR(851)
  120 CONTINUE
      II = IPS
      AII = Q1P
      IF(JTN(IIPS).EQ.1) AII = -Q1P
      IF(ICC.NE.2)  GO TO 121
      II = IDS
      AII = Q1P
      IF(JTN(IIDS).EQ.1) AII = -Q1P
  121 CALL AVMULT(SN(II),AII,SLX)
      CALL AVSTO(SLX,SLX1)
      ISSAV=IS
      IISSAV = IIS
      IS = II
      IIS = IIPS
      IF(ICC.EQ.2) IIS = IIDS
      CALL AVSTO(TP(IS),TPSAV)
      CALL AVSTO(TN(IS),TNSAV)
      CALL AVSTO(SP(IS),SPSAV)
      CALL AVSTO(SN(IS),SNSAV)
      SSAV = S(IS)
      IOPSAV = IOP(IIS)
      IOP(IIS) = 0
      CALL AVSTO(TE,TP(IS))
      CALL AVSTO(TA,TN(IS))
      CALL ADDST
      IF(IER.EQ.1) GO TO 140
      CALL AVMULT(TN(IS),S(IS),VTEM)
      CALL AVADD(TE,VTEM,SP(IS))
      CALL ANRMAL
      IF(IER.EQ.1) GO TO 140
      CALL AVDOT(SN(IS),SLX1,ANS)
      CALL AVSTO(SN(IS),SLX)
      IF(ANS.LT.QNUL) CALL AVSUB(VNUL,SLX,SLX)
  140 CALL AVSTO(TPSAV,TP(IS))
      CALL AVSTO(TNSAV,TN(IS))
      CALL AVSTO(SPSAV,SP(IS))
      CALL AVSTO(SNSAV,SN(IS))
      S(IS) = SSAV
      IOP(IIS) = IOPSAV
      IS = ISSAV
      IIS = IISSAV
C      GO TO TESTING AREA
C...
      GO TO 1000
  200 CONTINUE
C...
C      PARALLEL TO THE RULINGS OF A RULED SURFACE...
C      TEST FOR AVALID ICSUR
      IF((ICC.NE.1).AND.(ICC.NE.2)) GO TO 110
C      NOW BE SURE THAT IT IS A RULED SURFACE
      II = IPONTR(IIPS)
      IF(ICC.EQ.2) II = IPONTR(IIDS)
      IF(ICC.EQ.2) CALL AVSTO(SLX(IDS),SLX(IPS))
      CALL ASTOR (CANSTO(II),8,II1,4)
      IF(II1.NE.53) CALL AERR(852)
C      MAKE SLX DOT POSITIVELY ON TA TO ENSURE THE MINIMUM AXIS CHANGE
C      WHICH WILL GIVE A LINE UP
      CALL AVDOT(TA,SLX,ANS)
      IF(ANS.LT.QNUL) CALL AVSUB(VNUL,SLX,SLX)
C      GO TO TESTING AREA
C...
      GO TO 1000
  500 CONTINUE
C...
C      GENERAL FIVE AXIS CASE... REDUCES TO 4 AXIS CASE, EXCEPT THAT
C      TI HAS TO BE SET PROPERLY IN STARTUP CSSE
C      IF NOT STARTUP, GO TO 400 AND SET UP CONTROLLING AND NON CONT-
C      ROLLING SURFACE VECTORS JUST AS IN 4 AXIS CASE
      IF(ISTRUP.NE.1) GO TO 400
C...
C      ESTABLISH TI
      CALL AFWDSL(1)
      CALL ATISEL(1)
C      NOW GO SET UP CONTROLLING AND NON CONTROLLING VECTORS
      GO TO 400
  400 CONTINUE
C...
C      FOR BOTH 4 AXIS AND 5 AXIS CASES, SET UP VC = SURFACE NORMAL
C      OF CONTROLLING SURFACE AND VNC = SURFACE NORMAL OF NON CONTROLLIN
C      SURFACE... ALSO TEST FOR VALID ICSUR
      IF((ICC.NE.1).AND.(ICC.NE.2)) GO TO 110
      II = IPS
      III = IDS
      AII = Q1P
      AIII = Q1P
      IF(JTN(IIPS).EQ.1) AII = -Q1P
      IF(JTN(IIDS).EQ.1) AIII= -Q1P
      IF(ICC.EQ.1) GO TO 410
      II = IDS
      III = IPS
      ANS = AIII
      AIII = AII
      AII = ANS
  410 CALL AVMULT(SN(II),AII,VC)
       CALL AVMULT(SN(III),AIII,VNC)
C...
C     BRANCH ON FOUR OR FIVE AXIS CASE
      IF(NUMAX.EQ.5) GO TO 510
C
C      FIVE AXIS CASE WILL REJOIN RIGHT HERE AFTER COMPUTING AX4,THE PLA
C      PLANE VECTOR
  450 CONTINUE
C...
CC
C      BE SURE THAT AX4 DOTS POSITIVELY WITH VC... REDUNDANT IN 5 AXIS C
      CALL AVDOT(VC,AX4,ANS)
      IF(ANS.LT.QNUL) CALL AVSUB(VNUL,AX4,AX4)
C      SET UP SINE AND COSINE OF BETA
      COSBTA = DSQRT(Q1P - ANS*ANS)
      COSALP = DCOS(DABS(ALP))
C      TEST FAOR IMPOSSIBLE SPECIFICATION
      IF(COSBTA.LT.COSALP) CALL AERR(853)
C      NOW SET UP ANGLE THETA, ANGLE TA MAKES IN PLANE AX4 WITH PROJ
C      ECTION OF SNC
      COSTHE = COSALP/COSBTA
      SINTHE = DSQRT(Q1P - COSTHE*COSTHE)
C...
C      NOW CONSTRUCH UNIT VECTORS TO USE IN SETTING SLX
      CALL AVCROS(VC,AX4,V1)
      CALL AVNORM(V1,V1,IER)
      IF(IER.EQ.1) CALL AERR(854)
C      IF NORM ERROR, PLANE IS NORMAL TO CONTROLLING SURFACE NORMAL
C      WHICH CANT BE
      CALL AVCROS(AX4,V1,V2)
      CALL AVNORM(V2,V2,IER)
      IF(IER.EQ.1) CALL AERR (855)
C      SHOULD NEVER GER ERROR
C      V1,V2,AND AX4 NOW FORM AN ORTHOGONAL COORDINETE SYSTEM
C      CONSTRUCT THE TWO CANDIDATE VECTORS
      CALL AVMULT(V2,COSTHE,SLX1)
      CALL AVMULT(V1,SINTHE,VTEM)
      CALL AVSUB(SLX1,VTEM,SLX2)
      CALL AVADD(SLX1,VTEM,SLX1)
C      V1=V2*COSTHE + V1*SINTHE
C      SLX2 = V2*COSTHE - V1*SINTHE
      CALL        AVNORM(SLX1,SLX1,IER)
      IF(IER.EQ.1) CALL AERR (856)
      CALL AVNORM(SLX2,SLX2,IER)
      IF(IER.EQ.1) CALL AERR (856)
C      NOW SELECT RPOPER VECTOR ON BASIS OF ALPHA SIGN
C
C....    IF THE SIGN CONVENTION BRAAKS DOWN , THAT IS,THE
C      NON CONTROLLING SURFACE NORMAL IS NORMAL TO THE PLANE OF THE TWO
C      TWO VECTORS, OF DOTS EQUALLY ON THEM, THE PROGRAM WILL REENTER HE
C      HERE USING TI INSTEAD OF VNC
C...
  455 CONTINUE
      CALL AVDOT(SLX1,VNC,ANS1)
      CALL AVDOT(SLX2,VNC,ANS2)
C...
C      SELECT PROPER VECTOR BASED ON SIGN OF ALPHA
C      IF ALPHA +,  SELECT LARGEST + DOT PRODUCT
C      IF ALPHA -, SELECT SMALLEST (LARGEST NEGATIVE) DOT PRODUCT
C      IF ALPHA IS ZERO,  AND IT IS A 4AXIS CASE, OUTPUT A WARNING
      IF(ALP  ) 460,470,480
  470 IF(NUMAX.EQ.5) GO TO 480
      CALL AERR(-857)
      ALP  = QP001
C      THIS WILL CAUSE THIS MESSAGE TO BE OUTPUT ONLY ONCE,
C      WITHOUT SIGNIFICANTLY CHANGING THE CALCULATION
      GO TO 480
  460 IF(ANS1.GT.ANS2) GO TO 485
C...
      GO TO 490
  480 IF( ANS1.GT.ANS2) GO TO 490
C...
      GO TO 485
  490 CONTINUE
C...
      CALL AVSTO(SLX1,SLX)
      GO TO 495
  485 CONTINUE
C...
      CALL AVSTO(SLX2,SLX)
C
  495 CONTINUE
C...
C      SEE IF THE SIGN CONVENTION BROKE DOUWN
      ANS= DABS(ANS1)-DABS(ANS2)
      IF(DABS(ANS).LT.QP0001) GO TO 496
C...
C      GO TO TESTING AREA
      GO TO 1000
  496 CONTINUE
C      SEE IF SIGN OF DOT PRODUCT VECTORS IS ALSO THE SAME
      IF((ANS1*ANS2).LT.QNUL) GO TO 1000
      IF((KSCONV.EQ.1).AND.(DABS(ALP).LT.QP01)) GO TO 1000
      IF(KSCONV.EQ.1) CALL AERR(861)
      KSCONV = 1
      CALL AERR(-858)
C      USE TI INSTEAD OV VNC
      CALL AVSTO(TI,VNC)
      GO TO 455
C...
C      5 AXIS CASE, SET UP AX4 PLANE WHICH MAY THEN BE SUSED IN 4 AXIX C
  510 IF(DABS(GAMMA).LE.DABS(ALP  )) GO TO 5111
      CALL AERR(859)
 5111 IF((DABS(GAMMA).GT.QP0001).OR.(DABS(ALP).GT.QP0001)) GO TO 511
C...    SPECIAL CASE--REALLY NORMAL TO CONTROLLING SURFACE
      MULTAX = 1
      GO TO 100
C
  511 CONTINUE
      CALL AVCROS (SN(IPS),SN(IDS),VTEM)
      CALL AVDOT(VTEM,TI,ANS)
      CALL AVNORM(VTEM,TI,IER)
      IF(ANS.LT.QNUL) CALL AVSUB(VNUL,TI,TI)
C...
      ANS1 = DCOS(DABS(ALP))
      ANS2= DSIN(DABS(GAMMA))
      CALL AVMULT(TI,ANS1,VTEM)
      CALL AVMULT(VC,ANS2,TEMP)
C      SET UP PLANE
      IF(GAMMA.GT.QNUL) GO TO 516
      CALL AVADD(VTEM,TEMP,AX4)
      GO TO 517
  516 CONTINUE
      CALL AVSUB(TEMP,VTEM,AX4)
  517 CALL AVNORM(AX4,AX4,IER)
      IF(IER.EQ.1) CALL AVSTO(TI,AX4)
C      REJOIN 4 AXIS CALCULATION
      GO TO 450
C
C
C...
C      TESTING AREA
C
C
 1000 CONTINUE
      CALL AVDOT(TA,SLX,ANS)
C...
      IF(JW6 .EQ. 0) GO TO 1010
      IF(ANS.LT.QP4X95) GO TO 1010
 1001 JTR = 1
      GO TO 1020
 1010 KK = IIPS
      IF(ICC.EQ.2) KK = IIDS
      IF((ITLON(KK).EQ.0).OR.(CUTDAT(1).EQ.QNUL)) GO TO 1030
      GO TO 1040
 1030 IF(ANS.LT.QNUL) CALL AVSUB(VNUL,SLX,SLX)
      IF(JW6 .EQ. 0) GO TO 1040
      IF(DABS(ANS) .GE. QP4X95) GO TO 1001
 1040 IF(JCNT3.GT.10) GO TO 1011
      CALL AVADD(TA,SLX,SLX)
      CALL AVNORM(SLX,SLX,IER)
 1011 CALL AVSTO(SLX,TA)
      JTR=0
1020  CONTINUE
C...
      JTN(IIPS) = JTNPS
      JTN(IIDS) = JTNDS
      CALL AVSTO(SNPSSV,SN(IPS))
      CALL AVSTO(SNDSSV,SN(IDS))
      RETURN
      END

