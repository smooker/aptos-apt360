      SUBROUTINE AOBTAN
C     *** THIS PROGRAM LAST MODIFIED FOR VERSION 4, MODIFICATION 3 ***
      IMPLICIT REAL*8(A-H,O-Z)
       REAL*8 NAME,KRFSYS
       INTEGER DEBUG,SUM
       INTEGER*2 ITYPE,IPUNCT
       INTEGER ICOMMA/Z00000904/
       LOGICAL*1 LCLAS1(2400),ITYPE1(4)
C     PROCESSES THE OBTAIN STATEMENT
C     OUTPUT- PTPP TABLE CLASS 9 DATA, 1 ENTRY FOR EACH PARAMETER
C     NN - POSITION OF PARAMETER IN CANONICAL FORM
C     NT - NO. OF 8-BYTE WORDS MINUS 1 FOR PTPP ENTRY
      COMMON/A1COM/NAME,KRFSYS,SUM,JSUBER,NAMSUB,DEBUG,INDXPT,LOOP,IFINI
      COMMON/AMXTAB/MAXTAB,MAXVS1,MAXVS2,MAXPTP,MAXSCL,MAXVS,MAXVST,MXPT
     1PP,MXCAN,MXSRCN,MAXSLR,MAXELM,MAXPOT
       COMMON/AILMTB/ELMENT(600),ICLASS(600),JLMENT
      COMMON/AVST/VST(2750),PTPP(2225),CANON(2225)
      COMMON/APTPP/PT(300),INPTP,NW,JMODE,KLASS,KLASTP,IRECN,NPT,NPR
       COMMON/ABREAK/NEXTNW,NRELCN,KANLCN,LOCSEQ,NEXTCN,NWONRD,LPLOCN
     1 ,JSW4,ISN,K,MXLOOP,JSW2,JSAV,JSW1,MAXMV,MXNEST,INILL,KF
       COMMON/APRTAB/ISTARP,IENDP,NMOVE,NL,ITSQ,LINDX
       DIMENSION IPT(600),LMENT(600),IVST(5500)
       EQUIVALENCE (PT(1),IPT(1))
       EQUIVALENCE (ICLASS(1),LCLAS1(1))
       EQUIVALENCE (IPUNCT,ITYPE1(1)),(ITYPE,ITYPE1(3))
       EQUIVALENCE (ELMENT(1),LMENT(1)),(VST(1),IVST(1))
C
       ITYPE = 0
       IPUNCT = 0
       ILOC = 4*(INILL+2) - 3
C...     WORD FOLLOWING OBTAIN MUST BE VOCABULARY, A SURFACE TYPE
       ITYPE1(4) = LCLAS1(ILOC+3)
            IF(ITYPE.NE.2) GO TO 4
       ITYPE1(4) = LCLAS1(ILOC+2)
            IF(ITYPE.EQ.24) GO TO 6
    4  JSUBER = 153
       GO TO 999
C...     SAVE SURFACE TYPE IN PT FOR RECORDS TO BE BUILT
    6  JTEMP1 = 2*INILL - 1
       IPT(17) = LMENT(JTEMP1+5)
C
C...     SURFACE MUST BE EITHER A VARIABLE SYMBOL OR NESTED
       ITYPE1(4) = LCLAS1(ILOC+11)
            IF(ITYPE.EQ.1) GO TO 10
            IF(ITYPE.EQ.6) GO TO 10
C...     IT IS NOT
       JSUBER = 156
       GO TO 999
C
C...     IT IS - CONSTRUCT PTPP ENTRY FOR IT
   10  ISTARP = INILL + 4
       INPTP = 10
       CALL APTLOD
C
C     PARAMETER VARIABLE
   70  NN = 3
C     ALL PARAMETER DONE
   80       IF(ISTARP.GT.JLMENT) GO TO 999
C     NO
C     IS PARAMETER A COMMA
            IF(ICLASS(ISTARP).NE.ICOMMA) GO TO 100
C
C     PARAMETER IS A COMMA
       NN = NN + 1
   90  ISTARP = ISTARP + 1
      GO TO 80
C
C     PARAMETER IS NO COMMA
C     PTPP ITEM  3
  100  IPT(18) = NN
C...     MAKE SURE PARAMETER IS A VARIABLE SYMBOL
       ILOC = 4*ISTARP - 3
       ITYPE1(4) = LCLAS1(ILOC+3)
            IF(ITYPE.EQ.1) GO TO 110
C     PARAMETER NOT A VARIABLE SYMBOL
      JSUBER=156
      GO TO 999
C
C...     PARAMETER IS A VARIABLE SYMBOL
  110  LOC = ISTARP
C...     CONSTRUCT PTPP ENTRY FOR SYMBOL
       INPTP = 2
       CALL APTLOD
C
       NAME = ELMENT(LOC)
      CALL AVS1CK(JX)
       JTEMP1 = 2*NAMSUB - 1
      GOTO(111,111,112,111,115,114,111,115,111),JX
  111 JSUBER = 1002
       SUM = 1
      GO TO 999
C     UPDATE VST
  112  MAXSCL = MAXSCL + 1
       IVST(JTEMP1+2) = 2
       IVST(JTEMP1+3) = MAXSCL
  113 IF(MAXSCL.LE.MAXSLR) GO TO 115
C     TOO MANY SCALAR VARIABLES
      JSUBER=15
      GOTO 999
  114  CALL APRFIX(1,IDUM)
C     UPDATE MAXSCL
       MAXSCL = MAXSCL + IABS(IVST(JTEMP1+3))
      GO TO 113
C
C...     MOVE SURFACE ENTRY TO PROPER POSITION IN PTPP
  115  PT(INPTP) = PT(9)
       PT(INPTP+1) = PT(10)
       PT(INPTP+2) = PT(11)
       PT(INPTP+3) = PT(12)
C     PTPP ITEM  1
       INPTP = INPTP + 2
            IF(IPT(20).NE.1) GO TO 160
       INPTP = INPTP + 1
  160  IPT(1) = 9
       IPT(2) = INPTP - 1
C...     PUT RECORD INTO PTPP
       JMODE = 5
      CALL APTPUT
       GO TO 80
C
C     EXIT
  999 RETURN
      END

