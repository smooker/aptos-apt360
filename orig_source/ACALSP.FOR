      SUBROUTINE ACALSP
C     *** THIS PROGRAM LAST MODIFIED FOR VERSION 4, MODIFICATION 3 ***
C*    THIS ROUTINE SETS UP THE SPECIAL PROGRAM PARAMETERS
C*    THE PARAMETERS ARE STORED IN THE PROTP ARRAY AND ARE OUTPUT AS A
C*    PROTAP RECORD IF THE SEC2 MODIFIER HAS BEEN GIVEN
C*    IF THE SEC1 MODIFIER HAS BEEN GIVEN, SUBROUTINE AGETSP IS CALLED
      IMPLICIT REAL*8(A-H,O-Z)
       DIMENSION IPTPP(14400)
       DIMENSION PTPP(7200),CANON(7200)
       DIMENSION JPROTP(200),IDFSTO(170)
       COMMON/A1COM/REFSYS,NAME,NAME1,JSUBER,JSV,NAMSUB,KDBUG,INDXPT,
     1 LOOP,IFINI
       COMMON/ADFSTO/DEFSTO(85),PARTNO(11)
      COMMON/AVST/VST(7200)
      EQUIVALENCE(VST(1),PTPP(1),CANON(1))
       EQUIVALENCE (PTPP(1),IPTPP(1))
      COMMON/A2CLS7/PPSEQ1,PPSEQ2,ENAME,EINAME,IEREC,ISN
      COMMON/A1PAS2/I,J,K,L,MOVLGE,KANMAX,ICANST,IOVREC,KANPTR,MDFTAB,
     1KANCNT,KAUX,KDFCNT,IDEFP,KPRCNT,MDFPRE,IPREP,KOVFLP,KSRFCT,KOVCNT,
     2LSCAN,IOVFLO,MAXCAN,IREF,ICANSC,NAMSTA,KANGO,LASPTP,ISUB,
     3LCOMP,LGEREC,IRECN,JREC,JNUM,KANCUR,KANCOT,KDFENT,KANPAR,LGELOC,
     4IDTMOV,ISPPRG,INDEXS,KPTP,KPTPCT,KLASTP,KLASCT,KPRNT
       COMMON/APROTP/PROTP(102),PROSAV(102),NOWCLT,LSTPSV,INCORE
     1 ,JGORIT,SAVMOT
      COMMON/ADEBUG/IDEBUG(3),KCANDF
       EQUIVALENCE (PROTP(1),JPROTP(1)),(DEFSTO(1),IDFSTO(1))
       DATA A /8HACALLSPG/
C     SET END OF PTPP DATA
      INDEND=INDXPT+KLASCT
C     SET END OF PROTP INDEX
      IPEND=100
C     CHECK DEBUG FLAG - IF ON PRINT PTPP
      IF(KDBUG.EQ.0) GOTO 10
       IDEBUG(1) = 7
      IDEBUG(2) = INDXPT
      IDEBUG(3) = KLASCT
       CALL ADPRNT(A)
C     SET UP PROTP TABLE FOR INPUT TO SPECIAL PROGRAM
C     SET SPECIAL PROGRAM NAME IN PROTP TABLE
 10   PROTP(3)=PTPP(INDXPT)
       INDXPT = INDXPT + 1
       JTEMP1 = 2*INDXPT - 1
C     SET PARAMETER TYPE INDICATOR CODE AND PROTAP CLASS
       JPROTP(3) = 12000
       JPROTP(4) = IPTPP(JTEMP1+1)
C     SET CODE FOR SEC1 OR SEC2 EXECUTION
       KSEC = IPTPP(JTEMP1)
C     SET INDXPT TO FIRST PARAMETER IN PTPP
       INDXPT = INDXPT + 1
C     SET INDEX TO BEGINNING OF PROTP STORAGE
       IPIND = 4
C     CHECK PARAMETER LIST AND MOVE TO PROTP ARRAY
C     ANY MORE PARAMETERS
 20   IF(INDXPT.GE.INDEND) GOTO 50
C     DO PARAMETERS HAVE NAMES ASSOCIATED WITH THEM
            IF(JPROTP(4).EQ.1) GO TO 30
C     YES - STORE NAME IN PROTP ARRAY FIRST - CHECK PROTP LIMITS
      IF(IPIND.GT.IPEND) GOTO 80
      PROTP(IPIND)=PTPP(INDXPT)
C     INCREMENT INDXPT TO PARAMETER
       INDXPT = INDXPT + 1
       IPIND = IPIND + 1
 30   IF(IPIND.GT.IPEND) GOTO 80
C...     OBTAIN AND IDENTIFY TYPE OF PARAMETER
       CALL AGTARG(PROTP(IPIND+1),IPEND-IPIND,KRET)
C...     BRANCH ON PARAMETER TYPE
            IF(KRET-6)  32, 40, 40
   32  GO TO (38,34,100,80,38),KRET
C...     PARAMETER IS A SURFACE - PUT ITS TYPE CODE INTO PROTP RECORD
   34  JTEMP1 = 2*IPIND - 1
       JPROTP(JTEMP1+1) = IDFSTO(1)
       JPROTP(JTEMP1) = 0
C...     INCREMENT PROTP STORING INDEX PAST SURFACE
       IPIND = IPIND + IDFSTO(2) - 2
       GO TO 20
C...     PARAMETER IS A SCALAR OR A VOCABULARY WORD - MOVE
C...     IT INTO WORD SKIPPED FOR POSSIBLE SURFACE TYPE CODE
   38  PROTP(IPIND) = PROTP(IPIND+1)
       IPIND = IPIND + 1
      GOTO 20
 40   JSUBER=83
      GOTO 100
C     SET NO. OF WORDS IN PROTP RECORD
   50  JPROTP(1) = 0
       JPROTP(2) = IPIND - 2
C     ALL PARAMETERS STORED - CHECK DEBUG FOR PRINTING OF PROTP TABLE
      IF(KDBUG.EQ.0) GOTO 60
      IDEBUG(1)=13
      IDEBUG(2)=IPIND
       CALL ADPRNT(0)
C     DO WE EXECUTE NOW OR LATER
   60       IF(KSEC.EQ.2) GO TO 70
C     NOW - GO TO AGETSP TO CHECK LIST AND EXECUTE
C     SET ENAME IN CASE NOT THERE
      ENAME=PROTP(3)
      CALL AGETSP
C     SPECIAL PROGRAM MAY RETURN HERE
      GOTO 100
C     WRITE PROTAP RECORD CONTAINING PARAMETERS FOR SEC2 SPECIAL PROGRAM
 70   CALL ARITAP
      GOTO 100
C     TOO MANY PARAMETERS
 80   JSUBER=205
 100  RETURN
      END

