      SUBROUTINE AMONTR
C     *** THIS PROGRAM LAST MODIFIED FOR VERSION 4,MODIFICATION 4 ***
      IMPLICIT REAL*8(A-H,O-Z)
       REAL*8 INWORD,NAME,IDIS,MACNAM,KRFSYS
       INTEGER DEBUG,SUM,AEXTRA
      INTEGER CHAR,IPT*4(600)
         INTEGER LMENT4*4(1200),VST4*4(1400)
       LOGICAL*1 GLASS(4),GLASTP(4),LCLAS1(2400)
       INTEGER ISLASH/Z00000304/
C     THIS PROGRAM IS THE MAIN CONTROL FOR SECTION ONE, PASS ONE
C     IT TAKES A PART PROGRAM FROM THE INPUT FILE AND PRODUCES THE PTPP
C     META-LANGUAGE FOR PASS TWO. IT FURTHER IS RESPONSIBLE FOR MAKING
C     LANGUAGE CHECKS WHENEVER THE CONTEXT CAN BE ESTABLISHED.
C               *          *          *          *          *
C                DEFINITION OF PROGRAM VARIABLE NAMES
C               *          *          *          *          *
C     CANLCN  -    POINTER IN CANON
C     CANLTH  -    LENGTH OF ENTRY IN CANON
C     DWORK   -    SCRATCH ARRAY USED WHEN WORKING WITH ELMENT TABLE
C     ELMENT  -    ARRAY CONTAINING PART PROGRAM STATEMENT BROKEN UP
C                  INTO INDIVIDUAL LANGUAGE COMPONENTS
C     IATYPE  -    ARRAY CONTAINING CODE FOR TYPE OF ENTRY IN ELMENT
C                   1 - VARIABLE SYMBOL
C                   2 - VOCABULARY
C                   3 - FLOATING POINT NUMBER
C                   4 - PUNCTUATION
C                   5 - VARIABLE IN WORKING STORAGE (SCALR ARRAY)
C                   6 - SURFACE IN WORKING STORAGE  (SURFTB ARRAY)
C                   7 - SUBSCRIPT WHICH IS A VARIABLE SYMBOL
C                   8 - SUBSCRIPT WHICH IS A FLOATING POINT NUMBER
C                   9 - SUBSCRIPT WHICH IS AN EXPRESSION
C     IBCLAS  -    ARRAY CONTAINING CLASSIFICATIONS OF VOCABULARY WORDS
C     IDFRST  -    VST ENTRY FOR FIRST MACRO ID
C     IDIS    -    STATEMENT ID FOR CURRENT PART PROGRAM STATEMENT
C     IDVST   -    VST ENTRY FOR CURRENT STATEMENT ID
C     IDM      -    NUMBER OF IDS IN CURRENT MACRO
C     IENDP   -    FINAL LOCATION OF NEST TO BE PROCESSED
C     IFIRST  -    INITIALIZE MONITOR FLAGS IF IFIRST = 0(FIRST ENTRY)
C     IISN    -    SAME AS ISN
C     ILP     -    SAME AS IPAREA
C     INDXPT  -    PTPP INDEX
C     INILL   -    INDEX TO ITEM BEING PROCESSED IN ELMENT TABLE
C     INP     -    TOTAL NUMBER OF ITEMS IN POTTY ARRAY
C     INPOT   -    TOTAL NUMBER OF ITEMS IN IPOTTY ARRAY
C     INPTP   -    TOTAL NUMBER OF ITEMS IN PTPP (WORDS,NOT ENTRIES)
C     INWORD  -    INPUT ARRAY TO SCAN PROGRAM
C     IPAREA  -    INDEX OF LEFT PARENTHESIS IN ELMENT ARRAY
C     IPAREB  -    INDEX OF RIGHT PARENTHESIS IN ELMENT ARRAY
C     IPAREC  -    NESTING LEVEL IN ELMENT ARRAY
C     IPT     -    INPUT ARRAY FOR PTPPUT SUBROUTINE
C     IRP     -    SAME AS IPAREB
C     ISN      -    INTERNAL STATEMENT NUMBER ASSIGNED BY MONITOR
C     LMDW    -    NUMBER OF LOCATIONS USED TO STORE MACRO VARIABLE INF.
C     ISTARP  -    STARTING LOCATION OF NEST TO BE PROCESSED
C     JLMENT  -    TOTAL NUMBER OF ENTRIES IN ELMENT TABLE
C     JSW1    -    SET = 1 IF THERE WERE MACRO VARIABLES IN STATEMENT
C     JSW2    -    SET = 1 WHEN A TERMAC IS FOUND AT MACRO DEFN. TIME
C     JSW3    -    =1 IF VARIABLE IS SUBSCRIPTED, OTHERWISE = 2
C     LASTCN   -    LAST LOCATION USED IN CANON FOR MACROS (IF NEGATIVE,
C                   IT IS A RECORD NUMBER OVERFLOW FILE)
C     LEV     -    SAME AS IPAREC
C     LIMCAN  -    CURRENT UPPER LIMIT BEING USED IN CANON
C     LOCSEQ  -    INDEX OF FIRST WORD OF SEQUENCE FIELD
C     LOOP     -    FLAG INDICATING MACRO OR LOOP MODE(= 0 MEANS OFF)
C     LPLOCN  -    POINTER IN NEWONE ARRAY
C     LPLNGT  -    LENGTH OF ENTRY IN NEWONE ARRAY
C     MACCUR  -    CURRENT MACRO NUMBER BEING PROCESSED (LEVEL COUNT)
C     MACLCN  -    LOCATION IN MACRO WHERE PROCESSING IS TO RESUME
C     MACNAM  -    MACRO NAMES IN NEST
C     MACRD   -  MACRO MODE FLAG
C           .LT.0  READING FROM INWORD INTO NEWONE (MACRO DEFINITION)
C           .EQ.0  NOT IN MACRO MODE
C           .GT.0  READING FROM CANON INTO INWORD (PROCESS A MACRO CALL)
C     MACSTR  -    STARTING LOCATION IN CANON FOR CURRENT MACRO
C     MORPOT  -  FLAG SET IF MORE INF. IS NEEDED IN POTTY ARRAY
C     MXLOOP  -    MAXIMUM LENGTH OF LOOP IN NEWONE ARRAY
C     NEWONE  -    ARRAY FOR TEMP. STORAGE OF SQUEEZED LOOPS AND MACROS
C     NEXTCN   -    NEXT LOCATION IN CANON
C     NEXTNW   -    NEXT LOCATION IN NEWONE
C     NID     -    COUNT OF STATEMENT IDS
C     NMACRO  -    NUMBER OF MACROS IN PART PROGRAM
C     NMACVR  -    NUMBER OF MACRO VARIABLES
C     NOLIBR  -  =0, LIBRY/LIST STATEMENT REQUIRED FOR SYSTEM MACROS
C                =1, NO LIBRY/LIST STATEMENT REQUIRED FOR SYSTEM MACROS
C     NWONRD  -  LOOP MODE FLAG CONTROLLING USE OF NEWONE ARRAY
C           .LT.0 READING FROM INWORD INTO NEWONE (SQUEEZE, STORE LOOP)
C           .EQ.0  NOT IN LOOP MODE
C           .GT.0  READING FROM NEWONE INTO INWORD (PROCESSING LOOP)
C     PPSEQ1  -    FIRST 6 CHARACTERS OF SEQUENCE NO. (LEFT JUSTIFIED)
C     PPSEQ2  -    LAST 2 CHARACTERS OF SEQUENCE NO.  (LEFT JUSTIFIED)
C     PT      -    TEMPORARY ARRAY FOR PTPP
C     NRELCN  -    RELATIVE LOCN. MACRO COUNTER
C     ISCWS   -    SCALR TABLE INDEX
C     MAXSCL  -    NUMBER OF SCALAR VARIABLES
C     JSW4    -    LOOPST FLAG
C     NSURF   -    NESTED SURFACE TABLE INDEX
C     KDUM    -    TERMAC PATTERN WORD
C     MORE    -    SET TO NON-ZERO WHEN CONTINUATION CARDS REQUIRED
C     JSUBER  -    ERROR FLAG
C     NAMSUB  -    VST INDEX
C     KDMY    -    LOOPND PATTERN WORD
C     NODEFX  -  BCD WORD NODEFX
C     MAXMV   -  MAXIMUM NO. OF MACRO VARIABLES
C     MXNEST  -   MAXIMUM ALLOWABLE LEVEL OF MACRO NESTS
C     LOC     -  VST LOCATION COUNTER
C     LIMLEV  -  HIGHEST LEVEL OF NEST IN PART PGM. STATEMENT
C     INDX    -  NESTING POINTER
C     INDXY   -  NESTING POINTER
C     LINDX   -  NESTING POINTER
C     ITSQ    -  FLAG FOR ASQILT
C     ISTRT   -  ELMENT TABLE INDEX
C     MAXSLR  -  MAX. NO. OF SCALAR VARIABLES
C     KLASS   -  VOCABULARY CLASS
C     KLASTP  -  VOCABULARY SUBCLASS
C     MAXVS2  -    MAX. SIZE OF VST2
C     INSYN   -    NO. OF ENTRIES IN THE SYN TABLE
C     MAXSYN  -    MAX. NO. OF ENTRIES IN THE SYN TABLE
C     JGORIT  -    IMPLICIT CHECK SURFACE FLAG
C               *          *          *          *          *
C               *          *          *          *          *
C        SUBROUTINES CALLED BY THE PASS ONE MONITOR
C               *          *          *          *          *
C               *          *          *          *          *
C     AEXPRS  -    PROCESSES ARITH. EXPRESSION FROM ELMENT TABLE
C     ACCALL  -    PREPARES PTPP CLASS 17 ENTRIES (SPECIAL PROGRAM CALL)
C     ADCLAR  -    SETS UP PTPP POINTER FOR STATEMENT ID
C     ADFPRO  -    PREPARES PTPP CLASS 3 (GEOMETRIC SURFAC DEFINITIONS)
C     ADIAGP  -    SETS UP PTPP CLASS 2  (DIAGNOSTIC PR2NT)
C     ADTEST  -    UPDATES PTPP POINTERS FOR STATEMENT ID
C     AFINI   -    COMPUTES TABLE SIZES, WRITES PTPP CLASS 8, CLOSES
C                  FILES, ETC.
C     AIFUN8  -    CONVERTS FLOATING PT. NUMBER TO BCD
C     AINOUT  -    PROCESSES INPUT/OUTPUT AND PREPARES PTPP CLASS E
C     AMATMV  -    MOVES A MACRO FROM NEWONE TO CANON
C     AMOTIN  -    PREPARES PTPP CLASS 6 FOR MOTION COMMANDS (GOUP,
C                  GORGT,ETC.) AND ARELEM PARAMETERS (CUTTER,TOLER,--)
C     ANEST   -    SETS UP PROCESSING FOR NESTED DEFINITIONS
C     AOBTAN  -    SETS UP PTPP CLASS 9  (OBTAIN)
C     APAREN  -    DETERMINES NESTING LEVELS FROM ELMENT TABLE
C     APOCK   -    PROCESSES POCKET AND PSIS (SETS UP PTPP CLASS 6)
C     APARAM  -    PROCESSES POST PROCESSOR WORDS (SETS UP PTPP CLASS 6)
C     APOTLD  -    PREPARES IPOTTY AND POTTY ARRAYS FROM ELMENT TABLE
C     APTLD1  -    MAKES ONE ENTRY IN POTTY AND IPOTTY FROM ELMENT TABLE
C     APTPUT  -    TRANSFERS AN ARRAY TO THE PTPP TABLE
C     AREAD   -    READS CANONICAL FORMS IN TO CORE
C     ARFSOS  -    PREPARES PTPP CLASS 4 (REFSYS)
C     ASCAN   -    SETS UP ELMENT TABLE FROM INPUT PART PGM. STATEMENT
C     ASQEEZ  -    REMOVES BLANKS FROM INPUT PART PROGRAM STATEMENT
C     ASQILT  -    REMOVES NESTED DEFINITIONS AND SQUEEZES ELMENT TABLE
C     ASWICH  -    MOVES ONE ENTRY FROM POTTY AND IPOTTY TO PTPP TABLE
C     AVS1CK  -    CHECKS VST AGAINST THE BCD WORD STORED IN NAME
C     AVS1PT  -    ENTERS THE VARIABLE STORED IN NAME IN THE VST
C     AZSRF   -    PREPARES PTPP CLASS 16 (ZSURF)
C     APRFIX  -    STORES AND ADJUSTS PREFIX IN VST
C     APRINT  -    DYNDMP UTILITY TASK SUPERVISOR AND SEQ. SCHEDULER
C     ACLAS7  -    PREPARES PTPP CLASS 7  (SEQUENCE NO. AND ID INF.)
C     ATABLM  -    CLASSIFIES A WORD
C     ANSRF   -    CHECKS FOR EXISTANCE OF A NESTED SURFACE DEFINITION
C     AREGPR  -    PROCESSES REGION STATEMENTS
C     ADIAGP  -    PREPARES PTPP CLASS 2  (DIAGNOSTICS)
C          COMMON  STORAGE
C               *          *          *          *          *
      COMMON/ATAPTB/PROTAP,CANTAP,CLTAPE,POCTAP,PLOTAP,SRFTAP,TAPES1,
     1TAPES2,TAPES3,TAPES4,INTAPE,IOUTAP,PUNTAP
      COMMON/A0CON/K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11,K12,IBLANK
      COMMON/AMXTAB/MAXTAB,MAXVS1,MAXVS2,MAXPTP,MAXSCL,MAXVS,MAXVST,MXPT
     1PP,MXCAN,MXSRCN,MAXSLR,MAXELM,MAXPOT
      COMMON/AILMTB/ELMENT(600),ICLASS(600),JLMENT
      COMMON/AINPOT/INWORD(14),MORE,IFIRST
      COMMON/ASCALR/SCALR(180),ISCWS,NSURF,LOCTEM,IARGTP
      COMMON/APARTB/ILPCNT,IRPCNT,ILVCNT
      COMMON/APRTAB/ISTARP,IENDP,NMOVE,NL,ITSQ,LINDX
      COMMON/AVST/VST(7200)
      COMMON/ABREAK/NEXTNW,NRELCN,KANLCN,LOCSEQ,NEXTCN,NWONRD,LPLOCN,
     1 JSW4,ISN,K,MXLOOP,JSW2,JSAV,JSW1,MAXMV,MXNEST,INILL,KF
      COMMON/AMACRO/LIMCAN,LMDW,NITEMS,JWHAT,MACREC,MACVST,MACERR
      COMMON/APTPP/PT(300),INPTP,NW,JMODE,KLASS,KLASTP,IRECN,NPT,NPR
      COMMON/ADATA1/ANODEF,BLANX,BLANKS,SYN,TLAXIS,DUMMY,PLENT,LOOPST
     1 ,LOOPND,MACRO,NTRMAC,NCALL,LAPTH,JAPTH,IPLUS,NCOMMA,IFF,IC(10),
     2 LLASS
      COMMON/A1COM/NAME,KRFSYS,SUM,JSUBER,NAMSUB,DEBUG,INDXPT,LOOP,IFINI
      COMMON/AMCSTF/MACNAM(5),MACCUR,MACLCN(5),MACRD,MACSTR(5),NMACVR
     1 ,NUMIDS,IDLOCN,MACIDS(5),ISVID
      COMMON/ASYNTB/SYNB(100),INSYN,MAXSYN
      COMMON/AMOTCM/PINT(30),IFURST,JPTIND,NOW,JSUB,KRESLT,KRSLT2
     1,NWDS,ITS,NEXT,MULTAX
      COMMON/AKLAS7/PPSEQ1,PPSEQ2,IDIS,IISN,IDVST,KFK
       COMMON/ASCANC/CHAR,N72,NF,ICHAR,NUMCOL,MDOLAR,JSKIP
       EQUIVALENCE (GLASS(1),KLASS),(GLASTP(1),KLASTP)
         EQUIVALENCE (ELMENT(1),LMENT4(1)),(VST(1),VST4(1))
         EQUIVALENCE (IPT(1),PT(1)),(ICLASS(1),LCLAS1(1))
      COMMON/ALIBRY/AMACVR(50),AMACVL(50),MACICL(50),DEFNAM,SEGNAM
     1 ,IVARCT,ISYSMC,IRDMOD,LUUP,NWUNRD,NOLIBR
      IF(IFIRST.NE.K0)GO TO 60
C...  FIRST ENTRY FOR THIS PART PROGRAM  - INITIALIZE
   50 NMACRO=K0
      MAXVST = 2750
      MAXVS1 = K1
      MXPTPP = 2225
      MULTAX=0
      MAXPTP = 0
      MAXVS2 = K1
      MXCAN  = 2225
      MXSRCN =  100
      MAXSLR = 5000
      MAXELM = 600
      DO 55  I = 1,MAXVST
   55 VST(I) = 0.0D0
      IRDMOD=0
      ITERMF = 0
      NOLIBR = 0
      ISYSMC = 0
      ISN = K0
      JSKIP = K0
      IDLOCN = K0
      NWONRD=K0
      MACRD = 0
      SUM = 0
      NEXTNW = MAXVST + 1
      MXLOOP = 600
      DEBUG  = K0
      INSYN  =  K0
      IRECN  =  K0
      JSUBER  =  K0
      LIMCAN = MAXVST + MXPTPP
      MAXSYN = 100
      MAXTAB  =  7200
      NMACRO = K0
      NRELCN = MAXVST + 1
      NW = K0
      MACREC = 1
      JSAV = K0
      ISCWS=K1
      MAXSCL = K0
      MAXMV = 50
      MXNEST = K5
      NEXTCN=K1
      LOOP=K0
      INDXPT = MAXVST + 2
      MACCUR=K0
       LPLOCN = 0
      JSW2=K0
      JSW4=K1
C
  60  NSURF = 1
       ISCWS = 1
      ISCWSL = 1
C...  GO GET A CARD
      CALL AMON1
            IF(JSUBER.NE.0) GO TO 998
C
C...  BREAK UP CARD AND PUT IN ELMENT TABLE
  220 CALL ASCAN
C...     TEST FOR CONTINUATION
            IF(MORE.GT.0) GO TO 235
C...     NEXT CARD NOT CONTINUATION - THIS IS LAST CARD OF STATEMENT
       NMORE = 0
C...     IF NO MATERIAL FOUND ON CARD, GO TO GET NEXT ONE
            IF(JLMENT.EQ.0) GO TO 228
C...     TEST FOR **FINI** RECOGNITION
       GO TO 5000
  225       IF(JSKIP.EQ.0) GO TO 230
C...  THERE WAS AN ELMENT TABLE OVERFLOW - DELETE PROCESSING
  228  JSKIP = 0
      GO TO 60
  230 IF(JSUBER) 998, 260, 998
C
C...     STATEMENT CONTINUED ON FOLLOWING CARD(S)
  235       IF(JSAV.NE.0) GO TO 60
            IF(NMORE.NE.0) GO TO 240
C...     FIRST CARD OF CONTINUED STATEMENT
       NMORE = 1
      MITEBE = NEXTNW
            IF(MACRD)  610, 250, 250
C
  240       IF(JSKIP.EQ.0) GO TO 245
C...  ELMENT TABLE OVERFLOW
       NEXTNW = MITEBE
       GO TO 255
C
  245       IF(MACRD)  630, 250, 250
C
  250       IF(NWONRD.LT.0) GO TO 630
  255       IF(JSUBER)  998, 60, 998
C
C...     PRINT OUT ICLASS AND ELMENT ARRAYS IF DEBUG FLAG SET
  260  CALL APRINT(1)
C...     TEST FOR STATEMENT ENDING IN PUNCTUATION
      IF (IATYPE(JLMENT).NE.K4)GO TO 280
C...    YES - ONLY ) AND / PERMITTED TO TERMINATE STATEMENT
      IF (IBCLAS(JLMENT).EQ.K7)GO TO 280
      IF(IBCLAS(JLMENT).EQ.K3) GO TO 280
C...     ILLEGAL PUNCTUATION TERMINATING STATEMENT
  270 JSUBER=11
      GO TO 998
  280       IF(LOOP.EQ.0) GO TO 320
  290       IF(MACRD)  460, 300, 740
  300       IF(NWONRD)  460, 310, 320
C.. PROCESSING ERROR, FORCE END OF PASS1 PROCESSING
  310 JSUBER = 6102
      CALL ADIAGP
      GO TO 5050
C...
C...  PROCESS STATEMENT ID, IF ANY
  320 CALL AMON2
      IF (JSUBER.NE.0) GO TO 998
      IF ((K+1).EQ.JLMENT) GO TO 270
      GO TO 1010
  460 CALL AMON3
      IF ((K+1).EQ.JLMENT) GO TO 270
      IF(JSUBER.EQ.0) GO TO 610
      CALL ADIAGP
C
C...     TEST FOR 'TERMAC' AT TIME MACRO IS DEFINED
  610 IF(IBCLAS(K).NE.NTRMAC) GO TO 630
C...     'TERMAC' FOUND - MAKE SURE A MACRO IS BEING
C...     DEFINED - OTHERWISE ERROR
      ITERMF = 1
            IF(MACRD.LT.0) GO TO 620
      ITERMF = 0
      JSUBER = 209
      GO TO 998
C...     SET FLAG FOR TERMAC FOUND
  620 JSW2 = 1
C...  PROCESS TERMAC
  630 CALL AMON4
C...  BRANCH IF READING FROM SYSTEM MACRO LIBRARY
      IF (ITERMF.NE.1) GO TO 635
      ITERMF = 0
            IF(IRDMOD+1)  650, 640, 635
  635 IF (JSUBER) 998,60,998
  640 IRDMOD = 0
      IF (JSUBER.EQ.0) GO TO 645
      CALL ADIAGP
  645 CALL AMON7
      IF (JSUBER) 998,60,998
C
C...     INCREMENT SYSTEM MACRO NAME SCANNING INDEX
  650  MAXPOT = MAXPOT + 2
C...     TEST FOR ALL SYSTEM MACROS READ IN FROM LIBRARY
            IF(MAXPOT.GT.MAXVS) GO TO 660
C...     NO - PICK UP NAME OF NEXT TO BE READ
       SEGNAM = VST(MAXPOT)
       VST(MAXPOT) = BLANKS
       GO TO 60
C...     ALL MACROS READ IN - CANCEL FLAG FOR OPERATION
  660  IRDMOD = 0
       GO TO 60
C
C...     MACRO BEING EXECUTED...
C...     SUBSTITUTE VALUES FOR MACRO VARIABLES
  740  CALL AMON5(KRET)
            IF(JSUBER.NE.0) GO TO 998
C...     IF TERMAC JUST PROCESSED, GO TO GET NEXT STATEMENT
            IF(KRET.EQ.1) GO TO 60
C
C...     MUST HAVE AT LEAST 3 CODES IF STATEMENT IS 'SYM = MACRO...'
 1010       IF(JLMENT.LT.(K+2)) GO TO 1020
C...     TEST FOR START OF MACRO
      IF(IBCLAS(K+2 ).EQ. MACRO)  GO TO 1080
C...     TEST FOR START OF LOOP
 1020 IF(IBCLAS(K).NE.LOOPST)   GO TO 1310
C
C...     LOOPST FOUND - ARE WE ALREADY PROCESSING (NOT DEFINING) A LOOP
 1030       IF(JSW4.NE.0) GO TO 1050
C...     YES - ERROR
 1040 JSUBER=206
      GO TO 998
C...     IF IN NORMAL MODE, SET UP TO DEFINE A LOOP
 1050       IF(LOOP.EQ.1) GO TO 1070
C
C...  SET UP TO READ IN LOOP
 1060  NWONRD = -1
       NUMIDS = 0
       IDLOCN = MAXVS1 + 2
       LOOP = 1
 1065  JMODE = 6
      CALL APTPUT
      IF(JSUBER.NE.0) GOTO 998
C.. SET LOOP FLAG FOR PASS TWO
         IPT(1) = 19
         IPT(2) = 1
         IPT(3) = 0
         IPT(4) = 1
      INPTP = 2
      JMODE = 5
      CALL APTPUT
      IF(JSUBER.NE.0) GO TO 998
      GO TO 460
C
 1070  KFK = 2
      CALL ACLAS7
      GO TO 60
C
C...  PROCESS MACRO DEFINITION STATEMENT (A=MACRO/ ETC.)
 1080 CALL AMON6
      IF(JSUBER) 998, 60, 998
C
 1310 IF(IBCLAS(K).NE.NCALL)   GO TO 1750
C
C...  PROCESSING A CALL
 1320 IF(IATYPE(K+ 1).EQ.K4)GO TO 1340
C...  MUST BE A /
 1330 JSUBER=227
      GO TO 998
 1340 IF(IBCLAS(K+ 1).NE.K3)GO TO 1330
 1350       IF((K+4).GT.JLMENT) GO TO 1370
      KAT = IATYPE(K+4)
 1360 GO TO(1370,1730,1740,1740),KAT
C
C...     PROCESS A MACRO CALL
 1370 CALL AMON7
      IF(JSUBER) 998, 60, 998
C
C...  SPECIAL PROGRAM CALL - PROCESS LATER
C...     TEST FOR VOCAB. WORDS 'SEC1', 'SEC2' - NOT
C...     PERMITTED AT THIS TIME
 1730 IF(AEXTRA(IBCLAS(K+4),K2) .EQ. 31)  GO TO 1750
C
 1740 JSUBER=226
      GO TO 998
C
C...  OUTPUT A PTPP CLASS 7 FOR THIS STATEMENT
 1750 KF=K
      INILL=K
      ISTARP = K
       JINILL = 4*ISTARP - 3
      IENDP = JLMENT
C...     STATEMENT MUST START WITH VARIABLE SYMBOL OR VOCAB. WORD
            IF(ICLASS(INILL).EQ.1) GO TO 1751
       KLASS = 0
       GLASS(4) = LCLAS1(JINILL+3)
            IF(KLASS.EQ.2) GO TO 1753
C...     IT DID NOT - ERROR
       JSUBER = 5
      GO TO 998
C
C...     STATEMENT STARTS WITH VOCABULARY WORD - EXTRACT TYPE CODE
 1753 KLASS = AEXTRA(IBCLAS(INILL),K2)
            IF(KLASS.NE.7) GO TO 1754
      IISN = - IISN
 1754 GO TO (2450,1752,1752,1751,1751,1751,1752,1751,1751,1751,1751,1752
     1,1752,1759,1759,1751,1751,1752,1759,1752,1752,1752,1752,1759,1759
     2,1752,1752,1759,1759,1759,1759,1752,1759,1759,1785),KLASS
 1751  KFK = 1
      GO TO 1755
 1752  KFK = 2
 1755 CALL ACLAS7
C
C...  CHECK FOR PARENTHESIS
 1759 CALL APAREN
      IF (ILPCNT-IRPCNT) 1780,1760,1770
 1770 JSUBER=10
      GO TO 998
 1780 JSUBER=9
      GO TO 998
 1785 KLMENT = 0
      GO TO 2500
C
C...     TEST TYPE OF FIRST ENTRY IN STATEMENT TO DETERMINE WHETHER
C...     OR NOT IT IS AN ASSIGNMENT STATEMENT
 1760       IF(ICLASS(INILL).EQ.1) GO TO 1800
C...     NOT AN ASSIGNMENT - TEST FOR NESTS IN THE STATEMENT
            IF(ILPCNT.EQ.0) GO TO 1980
C...     PROCESS NESTS AND ASSIGNMENT STATEMENTS
 1800  CALL AMON8
            IF(JSUBER.NE.0) GO TO 998
C...     IF FIRST WORD OF STATEMENT IS VOCAB., IT IS NOT YET PROCESSED
 1980  KLASS = 0
       GLASS(4) = LCLAS1(JINILL+3)
            IF(KLASS.NE.2) GO TO 60
C
 2450  K = INILL
       KLMENT = JLMENT
 2460  ISTARP = INILL
C
C...     EXTRACT ICLASS TYPE AND SUBTYPE CODES FROM VOCAB. ENTRY
       KLASS = 0
       KLASTP = 0
       GLASS(4) = LCLAS1(JINILL+2)
       GLASTP(4) = LCLAS1(JINILL+1)
       CALL APRINT(8)
C
C...     BRANCH ON VOCABULARY CLASS CODE TO AMON10 OR AMON11 -
C...     THESE 2 ROUTINES CALL APPROPRIATE PROGRAMS TO PROCESS
C...     THE VARIOUS TYPES OF STATEMENTS
            IF(KLASS.EQ.3) GO TO 2470
      IF(KLASS.EQ.23) GO TO 2470
      IF(KLASS.EQ.25) GO TO 2470
      IF(KLASS.NE.27) GO TO 2480
 2470 IF(KLMENT.EQ.  K   ) GO TO 2480
      IF(ICLASS(K+1).NE.NCOMMA) GO TO 2480
      JLMENT = K
            IF(DEBUG.EQ.0) GO TO 2490
       WRITE (IOUTAP,2478) ICLASS(K),ELMENT(K)
 2478  FORMAT (1H0,10X,Z12,Z20)
      GO TO 2490
 2480  KLMENT = 0
C...  CHECK FOR OBTAIN STATEMENT
 2490 IF(KLASS.EQ.5) GO TO 2495
C...  NOT OBTAIN - CHECK FOR FIXED FIELD WORDS
      IF(KLASS.EQ.1) GO TO 2495
C...   NOT FIXED FIELD -   CHECK FOR MORE THAN ONE ENTRY
      IF(INILL.EQ.JLMENT)  GO TO 2494
C...  MORE THAN ONE ENTRY - BRANCH OUT IF IT IS AN IF STATEMENT
      IF(KLASS .EQ. 9) GO TO 2495
C...     NOT 'IF' STATEMENT - VERIFY THAT SLASH FOLLOWS IF A MAJOR WORD
            IF(KLASS.EQ.29) GO TO 2492
            IF(ICLASS(INILL+1).EQ.ISLASH) GO TO 2492
C...  ILLEGAL STATEMENT FORMAT  -  PUNCTUATION ERROR
 2491  JSUBER = 155
      GO TO 998
 2492       IF(INILL+2.GE.JLMENT) GO TO 2494
C...     CHECK FOR TYPE CODE OF INDIRV, INDIRP, AND SRFVCT STATEMENTS
            IF(KLASS.NE.26) GO TO 2493
C...     IT IS THE RIGHT TYPE - CHECK FOR INDIVIDUAL SUBTYPES
            IF(KLASTP.EQ.9) GO TO 2500
C...     NOT INDIRP - TRY INDIRV...
            IF(KLASTP.EQ.10) GO TO 2500
C...     ...AND SRFVCT
            IF(KLASTP.EQ.14) GO TO 2500
C...     MAKE SURE A COMMA IS THE ONLY PUNCTUATION USED AS A SEPARATOR
 2493  CALL ADCLAR(INILL,JLMENT)
            IF(JSUBER.NE.0) GO TO 998
 2494       IF(KLASS.GT.10) GO TO 2500
 2495  CALL AMON10
       GO TO 2510
C
 2500  CALL AMON11
 2510       IF(JSUBER.NE.0) GO TO 998
            IF(KLMENT.LE.0) GO TO 60
       INILL = INILL + 2
       JINILL = JINILL + 8
       K = INILL
      IF(IATYPE(K) .NE. 2) GO TO 997
       JLMENT = KLMENT
      GO TO 2460
C
 997  JSUBER = 81
  998 CALL ADIAGP
      GO TO 60
C
C..
C... TEST FOR FINI, CAN NOT RECOGNIZE IF MISSPELLED
 5000 KEND = 4*JLMENT
C..
      DO 5010 LCLS=3,KEND,4
         IF (LCLAS1(LCLS).EQ.18) GO TO 5020
C..
 5010 CONTINUE
      GO TO 225
C.. IS THIS  A VOCABULARY WORD
 5020 IF(LCLAS1(LCLS+1).NE.2) GO TO 5010
C.. THIS IS A FINI    ,, IT MAY HAVE A STMT. I.D.
      CALL AMON2
      IF(JSUBER.EQ.0) GO TO 5045
      CALL ADIAGP
C.. DEFINING A LOOP OR MACRO
 5045 IF(MACRD.EQ.0) GO TO 5050
      JSUBER = 16
      CALL ADIAGP
C.. IS FINI THE ONLY ENTRY FOR THIS STATEMENT
 5050 IF (JLMENT.EQ.1) GOTO 5060
      IF (JLMENT.NE.3) GOTO 5070
      IF (LCLAS1(7).NE.7) GOTO 5070
      IF (LCLAS1(8).NE.4) GOTO 5070
 5060 CALL AFINI
C..
C..    ILLEGAL   F I N I  FORMAT
 5070 JSUBER = 23
      CALL ADIAGP
      GOTO 5060
      END

