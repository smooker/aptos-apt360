      SUBROUTINE COMPU2
C     *** THIS PROGRAM LAST MODIFIED FOR VERSION 4,MODIFICATION 4 ***
C********************************************************************
C
C...    COMPU2 COMPUTES THE TOOL POSITIONS FOR CORNER CLEAN-OUT
C...    (WCORN).
      IMPLICIT REAL*8 (A-H,O-Z)
C***********************************************************************
       DOUBLE PRECISION   APOSTP,ATAPTB
       REAL*8 PROTAP,CANTAP,CLTAPE,POCTAP,PLOTAP,SRFTAP,TAPES1,TAPES2,
     1 TAPES3,TAPES4,PPNAME
       INTEGER PUNTAP
       COMMON/A0CON/K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11,K12,IBLANK
       COMMON/ATAPTB/PROTAP,CANTAP,CLTAPE,POCTAP,PLOTAP,SRFTAP,
     1 TAPES1,TAPES2,TAPES3,TAPES4,INTAPE,IOUTAP,PUNTAP
       COMMON/ASISTM/IPTNLY,ITRCUT,IWAVEN,KFLAG1,LTVMIT,NCLREC,NOPOST,
     1 NOPLOT,NUMPST,NUMPTR,ICLPRT,INDEXX,IPLOTR,KFLAGS(9)
       COMMON/APOSTP/PPNAME(20)
      COMMON/A3FXD1/AMATI1(4,4),AMATI2(4,4),AMATI3(4,4),AMATRX(3,4),
     1AMTR(36),AN1,AN2,ANAME,AX,AX0,AXVEC(3),AY,AY0,CNTM(36),CNTMAT(3,4)
     2,CONT(3),COUNT(3),CSEQNO(1),DELX,DELY,DX,DY,F0,ORIGIN(3),PARRAY
     3(20),PARTNO(12),PNT(3),PPRINT(12),PPT(6),PT0(3),PTT(6),PTU(3),
     4SEQNO(1),SUB(5),SUB4(6),TAPSTO(250),TITL(8),TL,TMATRX(3,4),
     5TNTM(36),TOOLNG,TRAMAT(3,4),VEC(3),WORD,X0,X1,X2,X3,XNEW,
     6Y0,Y1,Y2,Y3,YNEW
       DIMENSION  IRR(1),ARR(1)
       EQUIVALENCE(IARROW,IRR(1))
       EQUIVALENCE(AMATI1(1,1),ARR(1))
      REAL*8 MOTION
      COMMON/A3FXD2/MOTION(8)
      COMMON/A3FXI1/IARROW,I1,I2,ICLWAS,ICOPY,IDPLOT,IDPLSQ,IFIRST,
     1IGODLT,INDN,INSTR1,INSTR2,IND2TB(160),INDOFF,INDTAB(160),
     2INDXNO(3),IPERSP,IPL5AX,IPLOTI,IPLOTX,IPLWAS,IPX,IPY,IRECNI(3),
     3IRECNO,IRECTP,IRET,IRETVR,ISUBSC,ISWMAC,ISWNOC,IT,
     4ITHPNT,ITRAFL,ITRUNC,JARROW,JCLPRT,JCOPY,JPTSW,
     5JSW,JTYPSW,JVECTR,KCLPRT,KCOPY,MAXCOP,MULTAX,
     6NCAMRA,NK,NNTAB,NRECNO,NTAB,NUMWDS,NURCNO,NX,NX0,
     7NX1,NX2,NX4,NX5,NXP,NY,NY0,NY1,NY2,NY4,NY5,NYP,
     8IFALMS,IWARMS,INTSEQ
       REAL*8 NUCLTP
      EQUIVALENCE   (NUCLTP,TAPES2)
       EQUIVALENCE(ITRCUT,LCLPRT)
      REAL*8 A5AXIS
      COMMON/A5AXIS/
     1ZP1   ,YP1   ,XP1   ,ZP2   ,YP2   ,XP2   ,ZP3   ,YP3   ,
     2XP3   ,ZP1B  ,YP1B  ,XP1B  ,ZP1F  ,YP1F  ,XP1F  ,ZP3F  ,
     3YP3F  ,XP3F  ,ZP3B  ,YP3B  ,XP3B  ,ZLM   ,YLM   ,XLM   ,
     4ZTA1  ,YTA1  ,XTA1  ,ZTA2  ,YTA2  ,XTA2  ,ZTA3  ,YTA3  ,
     5XTA3  ,ZDTA  ,YDTA  ,XDTA  ,ZTA2I ,YTA2I ,XTA2I ,ZCV1  ,
     6YCV1  ,XCV1  ,ZCV3  ,YCV3  ,XCV3  ,ZCV1P ,YCV1P ,XCV1P ,
     7ZCV3P ,YCV3P ,XCV3P ,ZCV1I ,YCV1I ,XCV1I ,ZCV3I ,YCV3I ,
     8XCV3I ,ZDCV  ,YDCV  ,XDCV  ,ZCP   ,YCP   ,XCP   ,ZCP1B ,
     9YCP1B ,XCP1B ,ZCP1F ,YCP1F ,XCP1F ,ZCP3B ,YCP3B ,XCP3B
      REAL*8 B5AXIS
      COMMON/B5AXIS/
     1ZCP3F ,YCP3F ,XCP3F ,ZDP   ,YDP   ,XDP   ,ZD01  ,YD01  ,
     2XD01  ,ZD03  ,YD03  ,XD03  ,ZPL1  ,YPL1  ,XPL1  ,ZPL3  ,
     3YPL3  ,XPL3  ,WCORN5,WCORN7,WCORN8,WTLXS6,TLNTH1,TLNTH2,
     4AI    ,ALPHA ,CSIGMA,CPHI  ,SH    ,CLAMDA,S1    ,S2    ,
     5S3    ,TS    ,GAMMA ,BETA  ,DELTA ,WCORN9,THETA ,S     ,
     6ZP2I  ,YP2I  ,XP2I
      REAL*4 A5FXIS
      COMMON/A5FXIS/
     1IP1   ,IP1I  ,IP2   ,IP2I  ,IP3   ,IP3I  ,IP1B  ,IP1BI ,
     2IP1F  ,IP1FI ,IP3F  ,IP3FI ,IP3B  ,IP3BI ,ILM   ,ILMI  ,IPS   ,
     3ICORN1,ICORN9,IFLAG ,IFLAG1,ICM   ,ICMI  ,II    ,IIII  ,IFG   ,
     4ITCONT,ITC1
      REAL*8 C5AXIS
      COMMON/C5AXIS/
     1Z1                  ,Z2                  ,ZSTART,YSTART,
     2XSTART,ZD    ,YD    ,XD    ,ZCV   ,YCV   ,XCV   ,ZDO   ,
     3YDO   ,XDO   ,ZCC   ,YCC   ,XCC   ,ZUN   ,YUN   ,XUN   ,
     4ZTR   ,YTR   ,XTR   ,ZTA   ,YTA   ,XTA   ,Z     ,STANG ,
     5ENDANG,DANG  ,CANG  ,DLNGTH,TLNGTH,CUTTER,TEST  ,CRADUS
      REAL*4 C5FXIS
      COMMON/C5FXIS/
     1IS    ,IR    ,IL    ,IE    ,JSUBER,IABOVE
      COMMON/TACHCK/XXXXTA,YYYYTA,ZZZZTA,CHINGX,CHINGY,CHINGZ
C********************************************************************
C...
C...     OBTAIN CORNER CLEAN-OUT BEGIN POSITION             ***** 1*****
      DLNGTH = TLNGTH
      XCV = XCV1
      YCV = YCV1
      ZCV = ZCV1
      X2 = XP1
      Y2 = YP1
      Z2 = ZP1
      CALL COMPU1
      IF(JSUBER)   440,  10, 440
   10 XTA1 = XTA
      YTA1 = YTA
      ZTA1 = ZTA
      ZTR = 0.0D0
      CALL AVNORM(ZTR,ZTR,IER)
      IF(IER) 11,12,11
   11 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 440
   12 CONTINUE
      TEST = CUTTER/DCOS(DABS(CANG))-CUTTER
      XP1A = XP1 - TEST*XTR
      YP1A = YP1 - TEST*YTR
      ZP1A = ZP1 - TEST*ZTR
C...
C...     OBTAIN CORNER CLEAN-OUT ENDING POSITION            ***** 2*****
      X2 = XP3
      Y2 = YP3
      Z2 = ZP3
      STANG = WCORN7
      DLNGTH = 0.0D0
      XCV = XCV3
      YCV = YCV3
      ZCV = ZCV3
      XXXXTA=0.D0
      YYYYTA=0.D0
      ZZZZTA=0.D0
      CHINGX=0.D0
      CHINGY=0.D0
      CHINGZ=0.D0
      CALL COMPU1
      IF(JSUBER)   440, 20, 440
   20 XTA3 = XTA
      YTA3 = YTA
      ZTA3 = ZTA
      ZTR = 0.0D0
      CALL AVNORM(ZTR,ZTR,IER)
      IF(IER) 21,22,21
   21 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 440
   22 CONTINUE
      TEST = CUTTER/DCOS(DABS(CANG)) - CUTTER
      XP3A = XP3 - TEST*XTR
      YP3A = YP3 - TEST*YTR
      ZP3A = ZP3 - TEST*ZTR
C...
C...     OBTAIN TLAXIS IN CORNER (TA2 = PL3 X PL1)          ***** 3*****
      CALL AVCROS(ZTA1,ZCV1,ZPL1)
      CALL AVNORM(ZPL1,ZPL1,IER)
      IF(IER) 23,24,23
   23 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 440
   24 CONTINUE
      CALL AVCROS(ZTA3,ZCV3,ZPL3)
      CALL AVNORM(ZPL3,ZPL3,IER)
      IF(IER) 25,26,25
   25 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 440
   26 CONTINUE
      CALL AVCROS(ZPL3,ZPL1,ZTA2)
      CALL AVNORM(ZTA2,ZTA2,IER)
      IF (IER) 27,28,27
   27 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 440
   28 CONTINUE
C...     MAKE TA2 POSZ
      IF(ZTA2)    30, 40, 40
   30 XTA2 = -XTA2
      YTA2 = -YTA2
      ZTA2 = -ZTA2
C...
C...    OBTAIN CUTTER LOCATION IN CORNER                    ***** 4*****
   40 IF(DABS(ZCV1)-.0001D0) 35, 35, 31
   31 S1 =  YCV1/XCV1
      IF(DABS(XCV3)-.0001D0) 32, 32, 33
   32 XP2A = XP3A
      GOTO  34
   33 S3 = YCV3/XCV3
      XP2A = (YP3A-YP1A+S1*XP1A-S3*XP3A)/(S1-S3)
   34 YP2A = S1*(XP2A-XP1A) + YP1A
      GOTO 36
   35 XP2A = XP1A
      S3 = YCV3/XCV3
      YP2A = S3*(XP2A-XP3A) + YP3A
   36 ZP2A = ZP1A
C...
C...
C...    BEGIN MOVE INTO CORNER                              ***** 5*****
   38 AI = 0.0D0
      XP2I = XP2A - XP1A
      YP2I = YP2A - YP1A
      ZP2I = ZP2A - ZP1A
      XTA2I = XTA2 - XTA1
      YTA2I = YTA2 - YTA1
      ZTA2I = ZTA2 - ZTA1
C...
C...    IF VERY SMALL CHANGE,GO DIRECTLY TO CORNER POSITION
      IF(DABS(XP2I)-.0005D0) 41, 41, 47
   41 IF(DABS(YP2I)-.0005D0) 42, 42, 47
   42 IF(DABS(ZP2I)-.0005D0) 43, 43, 47
   43 IF(DABS(XTA2I)-.0005D0) 44, 44, 47
   44 IF(DABS(YTA2I)-.0005D0) 45, 45, 47
   45 IF(DABS(ZTA2I)-.0005D0) 46, 46, 47
   46 AI = WCORN9 + 1.0D0
      XP2I = XP2A
      YP2I = YP2A
      ZP2I = ZP2A
      XTA2I= XTA2
      YTA2I= YTA2
      ZTA2I= ZTA2
      GOTO 140
C...
C...    ITERATE INTO CORNER
   47 WCORN = WCORN9
   48 TEST = 1.0D0/WCORN
      XDP = TEST*XP2I
      YDP = TEST*YP2I
      ZDP = TEST*ZP2I
      XDTA = TEST*XTA2I
      YDTA = TEST*YTA2I
      ZDTA = TEST*ZTA2I
C...    WHEN CHANGE IS SMALL, GO DIRECTLY INTO CORNER
      IF(DABS(XDP )-.0005D0) 50, 56, 56
   50 IF(DABS(YDP )-.0005D0) 51, 56, 56
   51 IF(DABS(ZDP )-.0005D0) 52, 56, 56
   52 IF(DABS(XDTA)-.0005D0) 53, 56, 56
   53 IF(DABS(YDTA)-.0005D0) 54, 56, 56
   54 IF(DABS(ZDTA)-.0005D0) 55, 56, 56
   55 WCORN = WCORN -1.0D0
      IF(WCORN - .1D0)     46, 46, 48
   56 XP2I =XP1A+AI*XDP
      YP2I =YP1A+AI*YDP
      ZP2I =ZP1A+AI*ZDP
  130 XTA2I = XTA1  + AI*XDTA
      YTA2I = YTA1  + AI*YDTA
      ZTA2I = ZTA1  + AI*ZDTA
      CALL AVNORM(ZTA2I,ZTA2I,IER)
      IF(IER) 131,132,131
  131 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 440
  132 CONTINUE
C...    OBTAIN ITERATIVE CUTTER POSITION
  140 CALL CORNER
      IF(JSUBER)    440, 150, 440
  150 AI = AI + 1.0D0
      IRECNO=NURCNO
      TAPSTO(3) = XCC
      TAPSTO(4) = YCC
      TAPSTO(5) = ZCC
      TAPSTO(6) = XTA
      TAPSTO(7) = YTA
      TAPSTO(8) = ZTA
C...    CHECK FOR TRACUT AND COPY
      CALL TRCPM(3)
      IF(JSUBER) 440,151,440
  151 CONTINUE
C...    OUTPUT NUCLTP RECORD
      CALL TAPEWT(NUCLTP,IRETVR,4,IRECNO,1,INSTR1,1,INSTR2,1,TAPSTO,NUMW
     1DS)
      IF(IRETVR)   180, 160, 170
  160 JSUBER = 36
C...    ERROR 36  - MACHINE ERROR.
      GOTO 440
  170 JSUBER = 36
C...    ERROR 36  - MACHINE ERROR.
      GOTO 440
  180 CALL CLPRNT
      NURCNO = NURCNO + 1
      IF(AI-.9D0-WCORN)   56, 181, 181
C...
C...
C...    CORNER POSITION ATTAINED.                           ***** 6*****
C...    PRINT INFO ABOUT IT
  181 AI = DATAN(XTA2/ZTA2)*57.2957795131D0
      TEST = DATAN(YTA2/ZTA2)*57.2957795131D0
      WRITE (IOUTAP,182)AI
  182 FORMAT(39H0**************************************/,
     154H TOOL AXIS TILT ANGLE AT CORNER VERTEX IN X-Z PLANE = ,F12.6,
     28H DEGREES)
  187 WRITE (IOUTAP,188)TEST
  188 FORMAT(54H TOOL AXIS TILT ANGLE AT CORNER VERTEX IN Y-Z PLANE = ,
     2F12.6,8H DEGREES)
  190 WRITE (IOUTAP,191)
  191 FORMAT(39H **************************************)
C...
C...
C...    COPY NON-MOTION CLTAPE RECORDS UP TO ONE            ***** 7*****
C...    CONTAINING ENDING POSITION.
  196 CALL TAPERD(CLTAPE,IRETVR,NUMWDS,4,IRECNO,1,INSTR1,1,INSTR2,1,TAPS
     1TO,0)
      CALL ASTORE(TAPSTO(1),8,I1,4)
      CALL ASTORE(TAPSTO(2),8,I2,4)
      IF(IRETVR)  210, 200, 200
  200 JSUBER = 35
C...    ERROR 35  - MACHINE ERROR.
      GOTO 440
  210 IF(IRECNO -IP3B) 240, 220, 220
 220   CALL ASERCH(CLTAPE,IP3B  ,IRETVR)
      IF(IRETVR)   290, 230, 230
  230 JSUBER = 35
C...    ERROR 35  - MACHINE ERROR.
      GOTO 440
  240 IF(INSTR1 -5000) 250,196,250
 250   IRECNO=NURCNO
      CALL TAPEWT(NUCLTP,IRETVR,4,IRECNO,1,INSTR1,1,INSTR2,1,TAPSTO,NUMW
     1DS)
      IF(IRETVR)  280, 270, 260
  260 JSUBER = 36
C...    ERROR 36  - MACHINE ERROR.
      GOTO 440
  270 JSUBER = 36
C...    ERROR 36  - MACHINE ERROR.
      GOTO 440
  280 CALL CLPRNT
      NURCNO = NURCNO + 1
      GOTO 196
C...
C...
C...    START CLIMB OUT.                                    ***** 8*****
  290 AI = 1.0D0
      NUMWDS = 8
      XP2I = XP3A - XP2A
      YP2I = YP3A - YP2A
      ZP2I = ZP3A - ZP2A
      XTA2I = XTA3 - XTA2
      YTA2I = YTA3 - YTA2
      ZTA2I = ZTA3 - ZTA2
C...    IF VERY SMALL CHANGE, GO TO ENDING POSITION DIRECTLY
      IF(DABS(XP2I )-.0005D0) 291, 296, 296
  291 IF(DABS(YP2I )-.0005D0) 292, 296, 296
  292 IF(DABS(ZP2I )-.0005D0) 293, 296, 296
  293 IF(DABS(XTA2I)-.0005D0) 294, 296, 296
  294 IF(DABS(YTA2I)-.0005D0) 295, 296, 296
  295 IF(DABS(ZTA2I)-.0005D0) 350, 296, 296
C...
C...    ITERATE TO ENDING POSITION
  296 WCORN = WCORN9
  297 TEST = 1.0D0/WCORN
      XDP = TEST*XP2I
      YDP = TEST*YP2I
      ZDP = TEST*ZP2I
      XDTA = TEST*XTA2I
      YDTA = TEST*YTA2I
      ZDTA = TEST*ZTA2I
C...    WHEN CHANGE IS SMALL, GO DIRECTLY TO ENDING POSITION
      IF(DABS(XDP )-.0005D0) 301, 308, 308
  301 IF(DABS(YDP )-.0005D0) 302, 308, 308
  302 IF(DABS(ZDP )-.0005D0) 303, 308, 308
  303 IF(DABS(XDTA)-.0005D0) 304, 308, 308
  304 IF(DABS(YDTA)-.0005D0) 305, 308, 308
  305 IF(DABS(ZDTA)-.0005D0) 306, 308, 308
  306 WCORN = WCORN - 1.0D0
      IF(WCORN - .1D0)     350, 350, 297
  308 XTA2I = XTA2 + AI*XDTA
      YTA2I = YTA2 + AI*YDTA
      ZTA2I = ZTA2 + AI*ZDTA
      XP2I = XP2A+ AI*XDP
      YP2I = YP2A+ AI*YDP
      ZP2I = ZP2A+ AI*ZDP
      CALL AVNORM(ZTA2I,ZTA2I,IER)
      IF(IER) 311,312,311
  311 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 440
  312 CONTINUE
C...    OBTAIN ITERATIVE CUTTER POSITION
      CALL CORNER
      IF(JSUBER)   440, 310, 440
  310 AI = AI + 1.0D0
       IRECNO=NURCNO
      TAPSTO(3) = XCC
      TAPSTO(4) = YCC
      TAPSTO(5) = ZCC
      TAPSTO(6) = XTA
      TAPSTO(7) = YTA
      TAPSTO(8) = ZTA
C...    CHECK FOR TRACUT AND COPY
      CALL TRCPM(3)
      IF(JSUBER) 440,319,440
  319 CONTINUE
C...    OUTPUT NUCLTP RECORD
      CALL TAPEWT(NUCLTP,IRETVR,4,IRECNO,1,INSTR1,1,INSTR2,1,TAPSTO,NUMW
     1DS)
      IF(IRETVR)  340, 320, 330
  320 JSUBER = 36
C...    ERROR 36  - MACHINE ERROR.
      GOTO 440
  330 JSUBER = 36
C...    ERROR 36  - MACHINE ERROR.
      GOTO 440
  340 CALL CLPRNT
      NURCNO = NURCNO + 1
      IF(AI-WCORN-.01D0)   308, 308, 350
C...
C...
C...    CLEAN-OUT FINISHED.                                 ***** 9*****
C...    RESET COMMON VARIABLES
  350 X1 = XP3
      Y1 = YP3
      Z1 = ZP3
      STANG = WCORN7
      DLNGTH = 0.0D0
      TLNGTH = TLNTH2
      DANG = WTLXS6-STANG
      CALL TAPERD(CLTAPE,IRETVR,NUMWDS,4,IRECNO,1,INSTR1,1,INSTR2,1,TAPS
     1TO,0)
      CALL ASTORE(TAPSTO(1),8,I1,4)
      CALL ASTORE(TAPSTO(2),8,I2,4)
      IF(IRETVR)   370,360,360
  360 JSUBER = 35
C...    ERROR 35  - MACHINE ERROR.
      GOTO 440
  370 IF(DABS(XP3-XP3B)-.05D0) 380, 380, 430
  380 IF(DABS(YP3-YP3B)-.05D0) 390, 390, 430
  390 IF(DABS(ZP3-ZP3B)-.05D0) 400, 400, 430
  400 IP3BI= IP3BI+ 6
      IF(IP3BI-NUMWDS)  430, 420, 420
  420  IRECNO=0
      GOTO 440
  430 IIII = IP3BI
       IRECNO=-1
  440 CONTINUE
      RETURN
      END

