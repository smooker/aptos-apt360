      SUBROUTINE ASCAN
C     *** THIS PROGRAM LAST MODIFIED FOR VERSION 4,MODIFICATION 4 ***
C
      IMPLICIT REAL*8(A-H,O-Z)
      REAL*8 INWORD,NEWONE,NAME,IDIS,MACNAM,KRFSYS
      REAL*8 JOE,INTRY
       INTEGER*2 KCLASS(1200)
       INTEGER DEBUG,SUM,CHAR
       INTEGER ICLERR/2564/
C     THIS PROGRAM BREAKS A PART PROGRAM STATEMENT (ONE OR MORE CARDS)
C     INTO THE VARIOUS LANGUAGE ELEMENTS - I.E., VARIABLE SYMBOLS,
C     VOCABULARY WORDS, FLOATING POINT NUMBERS, AND PUNCTUATION.
C     THE RESULTANT INFORMATION IS STORED IN THE ELMENT AND ICLASS
C     ARRAYS IN COMMON.
      COMMON/A1COM/NAME,KRFSYS,SUM,JSUBER,NAMSUB,DEBUG,INDXPT,LOOP,IFINI
      COMMON/AINPOT/INWORD(14),MORE,IFIRST
      COMMON/AILMTB/ELMENT(600),ICLASS(600),JLMENT
      COMMON/AMXTAB/MAXTAB,MAXVS1,MAXVS2,MAXPTP,MAXSCL,MAXVS,
     1MAXVST,MXPTPP,MXCAN,MXSRCN,MAXSLR,MAXELM,MAXPOT
      COMMON/ADATA1/ANODEF,BLANX,BLANKS,SYN,TLAXIS,DUMMY,PLENT,LOOPST
     1 ,LOOPND,MACRO,NTRMAC,NCALL,LAPTH,JAPTH,IPLUS,NCOMMA,IFF,IC(10),
     2 LLASS
       COMMON/ASCANC/CHAR,N72,NF,ICHAR,NUMCOL,MDOLAR,JSKIP
       EQUIVALENCE (ICLASS(1),KCLASS(1))
      COMMON/APTPP/PT(300),INPTP,NW,JMODE,KLASS,KLASTP,IRECN,NPT,NPR
      DATA ENT/8H ENTRY  /
C.....                                                               D39
C..
C               *     DEFINITION OF VARIABLE NAMES          *
C     MORE    ON ENTRY  LESS THAN, EQUAL ZERO INDICATES NEW STATEMENT
C                       GREATER THAN ZERO INDICATES CONTINUATION
C             ON EXIT   0  INDICATES END OF LOGICAL STATEMENT FOUND
C                       +1 INDICATES A CONTINUATION ($) CARD
C     ILMENT     TABLE FOR STORING NEW STATEMENT WORDS
C     JLMENT     NUMBER OF ENTRIES IN THE  ILMENT  TABLE
C     ATYPE      ARRAY INDICATING TYPE OF WORD IN ILMENT  - AS FOLLOWS
C                    = 1  VARIABLE SYMBOL
C                    = 2  VOCABULARY
C                    = 3  NUMBER
C                    = 4  PUNCTUATION
C     BCLAS      CLASSIFICATION WORD, BASED ON ATYPE
C       ATYPE = 1  LEAVE BLANK
C             = 2  DOUBLE-ENTRY WORD  (CLASS,,SUBCLASS)
C             = 3  ACTUAL FLOATING POINT NUMBER
C             = 4  PUNCTUATION CODE 1 IS +, 2 IS -, 3 IS /, 4 IS *
C                  5 IS **, 6 IS (, 7 IS), 8 IS =, 9 IS ,
C     CCODE      PROTAPE CODE (FROM XTABL) WHEN APPLICABLE
C     JSUBER     APT ERROR FLAG (SEE PART PROGRAMMING MANUAL)
C     INWORD     ARRAY CONTAINING ORIGINAL CARD IMAGE (STORED AS 14A6)
C     NCARDW     SUBSC. OF WORD IN INWORD WHICH IS BEING PROCESSED
C     JOE        WORD BEING PROCESSED     = INWORD(NCARDW)
C     NCINWD     SUBSC. OF CHARACTER IN INWORD(NCARDW) BEING PROCESSED
C     CHAR       ACTUAL CHARACTER (BCD) BEING PROCESSED
C     A          WORD BEING BUILT UP FOR THE ILMENT TABLE
C     NCPW       NUMBER OF CHARACTERS CURRENTLY IN  A
C     MAYBEV     =1 IF CURRENT WORD COULD BE A NO. OR VARIABLE SO FAR
C     NUMB       FLAG INDICATING A NUMBER IS BENG FORMED (IF SO, = 1)
C     MEXP       FLAG INDICATING AN EXPONENT IS BEING FORMED
C     ITSPNC     FLAG INDICATING PREVIOUS CHARACTER WAS PUNCTUATION
C     NF         FLAG SET BY SUBROUTINE TESTCH  (SEE BELOW)
C     LASTNF     PREVIOUS VALUE OF NF (NEEDED TO BUILD UP A ** )
C     MDOLAR     INDICATES A $ WAS FOUND  - NOW CHECK FOR $$
C     IFIRST     = 0  ON INITIAL ENTRY TO THE SCAN ROUTINE
C     NREMRK  = 1 IF A REMARK CARD WAS FOUND, OTHERWISE  NREMRK = 0
C     ITSPL      FLAG INDICATING SIGN OF EXPONENT FOR FLOAT. PT. NO.
C     ITSADP     FLAG INDICATING DECIMAL PT. IN FLOAT. PT. NO.
C     NOE        NO. OF PLACES TO THE RIGHT OF THE DECIMAL POINT
C     NOEL       NO. OF PLACES TO THE LEFT OF THE DECIMAL POINT
C     NVD        NO. OF SIGNIFICANT DIGITS RIGHT OF THE DECIMAL POINT
C     NVDL       NO. OF SIGNIFICANT DIGITS LEFT OF THE DECIMAL POINT
C     NONUM      = 0 IF NOTHING BUT ZEROES FOUND IN THE INPUT NUMBER
C     NUMONE     CHAR. COUNT IN THE NUMBER (OR POSSIBLE VARIABLE) MODE
C     NOTANX     =1 IF NO. ALREADY PUT IN ELMENT TABLE, =0 IF NOT
C     NEXP       VALUE OF EXPONENT USED IN BUILDING UP NUMBER
C     NOUT       =1 IF FINISHED A CARD WHILE BUILDING UP A NUMBER
C               *          *          *          *          *
C             FUNCTIONS AND NAMES OF REQUIRED SUBROUTINES
C               *          *          *          *          *
C     EXTRCT(A,B)  EXTRACTS LEFT MOST CHARACTER FROM A AND STORES IT IN
C                  B. THE NEW LEFT-JUSTIFIED WORD IS STORED BACK IN A
C     BUILD(A,B)   SHIFTS A LEFT 6 BITS AND PUTS B IN LOCATIONS 30-35
C     FIXFLD(A,B)  SETS FLAG ON COLS. 1-6  AS FOLLOWS
C                     -1  INDICATES A REMARK  - CARD IS THEN DELETED
C                      0  INDICATES THERE WAS NO FIXED FIELD WORD
C                     +1  INDICATES TITLES, PARTNO, PPRINT, OR INSERT
C     TBLKUP(W,B,C) SEARCHES XTABLE FOR W  - IF NOT IN XTABLE, B = 0
C                   IF IN XTABLE, THEN B = CLASS,,SUB-CLASS.AND C IS THE
C                   PROTAP CODE (IF APPLICABLE)
C          IF    A = 0    , NF = 0          IF    A = 1-9  , NF = 1
C          IF    A = $    , NF = 2          IF    A = BLANK, NF = 3
C          IF    A = +    , NF = 4          IF    A = -    , NF = 5
C          IF    A = *    , NF = 6          IF    A = .    , NF = 7
C          IF    A = ,    , NF = 8          IF    A = (    , NF = 9
C          IF    A = )    , NF = 10         IF    A = =    , NF = 11
C          IF    A = /    , NF = 12         IF    A = E    , NF = 13
C          IF    A = A THRU D   OR  F    THRU  Z  ,  THEN    NF = 14
C     TABLEM     MAIN ROUTINE FOR CONSTRUCTING ATYPE, BCLAS, AND CCODE
C     SYNLKR     SEARCHES THE SYN TABLETO SEE IF VARIABLE NAME APPEARS
C               *          *          *          *          *
C         END OF PROSE  -  START OF CON
C               *          *          *          *          *
      IF(IFIRST .NE. 0) GO TO 20
C...  FIRST ENTRY FOR THIS PART PROGRAM
      IFIRST = 1
      GO TO 30
   20 IF(MORE .GT.0) GO TO 40
C
C...  FIRST ENTRY FOR THIS STATEMENT (NOT A CONTINUATION CARD)
   30 ITSPL = 1
      DO 31 I = 1,MAXELM
   31 ICLASS(I) = 0
      ITSADP= 0
      NREMRK = 0
       KSUBER = 0
      NF4 = 0
      NOE   = 0
      NOEL = 0
      FLP1 = 0.0D0
       IFLP2 = 0
      MDOLAR= 0
      NONUM = 0
      NVD   = 0
      NVDL  = 0
      LASTNF= 0
      MAYBEV = 0
      NUMONE = 0
      NUMB  = 0
      NOTANX = 0
      JLMENT= 0
      NCPW  = 0
       ITSPNC = 1
      A     = BLANKS
      AA = BLANKS
      MEXP  = 0
      NEXP = 0
      N72 = 0
      NUMCOL = 0
C
C...     DOES STATEMENT START WITH FIXED FIELD WORD
      INTRY = INWORD(1)
       CALL ATBLKP(INTRY,N,1)
            IF(N.EQ.0) GO TO 50
       ICLASS(1) = N + 2
            IF(KCLASS(1).NE.2) GO TO 34
C
C...  FIX. FIELD WORD - REMARK
C...     SET FLAG REQUESTING NEW STATEMENT
   32 MORE =-1
      NREMRK = 1
      GO TO 160
C
C...  FIX. FIELD WORD - PARTNO,INSERT,TITLES,PPRINT
   34 DO 36 I = 2,12
       ELMENT(I) = INWORD(I)
   36 ICLASS(I) = 3
       ELMENT(1) = INWORD(1)
       JLMENT = 12
       MORE = 0
       GO TO 160
C
C...     IF ELMENT TABLE OVERFLOW OCCURRED ON PREVIOUS LINE, RESET
C...     STORING INDEX AND ADJUST OVERFLOW FLAG
   40       IF(JSKIP.LE.0) GO TO 50
       JLMENT = 0
       JSKIP = -1
C
C...     NOT A FIXED FIELD WORD - PROCESS NORMALLY
   50  NUMCOL = 0
      N72 = 0
            IF(NREMRK.NE.0) GO TO 30
   60 CONTINUE
C
C...     GET NEXT NON-BLANK CHARACTER
       CALL AEXTRC
C...     TEST FOR END OF CARD FOUND (NF NEGATIVE)
      IF(NF.GE.0) GOTO 170
C...     YES
C...     TEST FOR CONTINUATION SIGN FOUND
   90 IF(MDOLAR.EQ.1) GO TO 100
C...  NO - NORMAL EXIT
      MORE = 0
      GO TO 110
C
C...  YES - CONTINUATION MODE. RETURN FOR MORE DATA
  100 MDOLAR = 0
      MORE   = 1
      GO TO 160
C
  110 NOUT = 1
C...  BRANCH IF FLOATING POINT NUMBER TO BE OUTPUT
      IF(NUMB.EQ.1)  GO TO 420
C...     IF LAST CHARACTER NOT PUNCTUATION, SYMBOL STILL TO
C...     BE ADDED TO ELMENT TABLE
      IF(ITSPNC.EQ.1)  GO TO 111
C
C...  OUTPUT LAST ENTRY
      JLMENT = JLMENT + 1
C...     TEST FOR ROOM IN TABLE
      IF(JLMENT.GT.MAXELM) GO TO 999
C...     YES - PUT LAST SYMBOL INTO IT
       ICLASS(JLMENT) = 1
       CALL ATBLKP(A,N,0)
       ELMENT(JLMENT) = A
            IF(N.EQ.0) GO TO 111
       ICLASS(JLMENT) = N + 2
  111  NOUT = 0
  160 JSUBER = KSUBER
      RETURN
C
C...     NOT END OF CARD - TEST CHARACTER FOR CONTINUATION
  170 CONTINUE
      IF(NF.NE.2)  GO TO 210
C...    $  FOUND
  180 IF(MDOLAR.EQ.1) GO TO 200
C...  FIRST  $ FOUND - POSSIBLE CONTINUATION
  190 MDOLAR = 1
      GO TO 60
C
C...     SECOND $ FOUND - END OF STATEMENT - IGNORE ANY
C...     FURTHER MATERIAL ON THIS CARD
  200 MORE = 0
      GO TO 110
C
C...     IF $ FOUND PREVIOUSLY, CONTINUATION - IGNORE
C...     ANY FURTHER MATERIAL ON THIS CARD
  210 IF (MDOLAR.EQ.1) GO TO 100
C
      IF(MAYBEV.NE.1) GO TO 215
C...  ENTRY COULD BE A VARIABLE NAME OR A NUMBER
  211 NUMONE = NUMONE + 1
      IF(NUMONE.LE.6) GO TO 212
C...  TOO MANY SYMBOLS - MUST BE A NUMBER OR AN ERROR
      MAYBEV = 0
      AA = BLANKS
      GO TO 215
C
C...  BUILD UP WORD
  212 CALL ABUILD(AA,CHAR)
C...  ALLOW AN E IN A NUMBER FOR BUILDING UP AN EXPONENT - JUST ONCE
      IF(MEXP.EQ.0) GO TO 213
C...     ONE 'E' ALREADY FOUND - ALLOW NO MORE
      IF(NF.LT.13) GO TO 215
      GO TO 214
C...     NO 'E' YET - ALLOW ONE IN THE NUMBER (NF = 13 FOR AN E)
  213 IF(NF.LT.14) GO TO 215
C...  ILLEGAL NUMBER STRUCTURE - MUST BE A VARIABLE NAME OR VOCABULARY
  214 NUMB = 0
      NOE = 0
      NOEL = 0
      NVDL = 0
      NVD  = 0
      A = AA
      NCPW = NUMONE
      NONUM = 0
      NF4 = 1
      ITSPL = 1
      FLP1 = 0.0D0
      ITSADP = 0
      MEXP = 0
      NEXP = 0
       IFLP2 = 0
C.. IF A DECIMAL IS ENCOUNTERED AND IS EXPECTED BUILD UP A NUMBER
C.. IF PUNCTUATION IS NEITHER DECIMAL NOR EXPONENTIATION, OUTPUT
C.. THE PREVIOUS VAR. SYMBOL (IF APPLICABLE) AND SET FLAG INDICATING
C.. PUNC. CHAR. WAS THE TERMINATION OF PREV. ENTRY BEING BUILT UPOUTPUT
C..   THE PUNCTUATION TO ICLASS/ELMENT TABLE
  215 IF(NF.NE.7) GO TO 220
C.. DOES DE. BELONG TO A NUMBER BEING BUILT
      IF(NUMB.NE.0) GO TO 340
C..  COULD THIS BE A NUMBER COMMENCING WITH A DECIMAL
      IF(ITSPNC.EQ.1) GO TO 280
C...     DECIMAL IS ALONE - WILL BE CHANGED TO AN ERROR CODE
       GO TO 900
C..
C...     SET UP POSSIBLE PUNCTUATION CODE FOR ICLASS TABLE ENTRY
  220  ICLENT = IC(NF-2)
C...     SEE IF CHARACTER JUST READ IS PUNCTUATION
  222       IF(NF.LT.3) GO TO 270
            IF(NF.GE.13) GO TO 270
C
C...     YES - TEST FOR NUMBER ALREADY BEING BUILT
  225       IF(NUMB.NE.1) GO TO 230
C...     NUMBER BEING BUILT - MAKE SURE SOME DIGITS WERE GIVEN - IF
C...     NOT, ERROR
            IF(IFLP2.NE.0) GO TO 270
C
C...     NO DIGITS - OUTPUT AN ERROR CODE HERE...
C...     INCREMENT ELMENT TABLE INDEX, AND TEST FOR ENOUGH SPACE
       JLMENT = JLMENT + 1
            IF(JLMENT.GT.MAXELM) GO TO 999
C...     OUTPUT THE ERROR CODE
       ELMENT(JLMENT) = 0.0D0
       ICLASS(JLMENT) = ICLERR
       ITSPNC = 1
       ITSADP = 0
       NUMB = 0
C...     GO TO OUTPUT ERROR DIAGNOSTIC
       GO TO 900
C
C...     NUMBER NOT BEING BUILT
  230  AA = BLANKS
C...     SEE IF PREVIOUS CHARACTER WAS PUNCTUATION
  240       IF(ITSPNC.EQ.1) GO TO 252
C...     IF ERROR FLAG SET, PRINT DIAGNOSTIC
  250       IF(JSUBER.EQ.0) GO TO 251
      CALL ADIAGP
      KSUBER = JSUBER
       JSUBER = 0
C..  SET FLAG TO INDICATE TERMINATING PUNCT. CHAR. JUST FOUND
  251  ITSPNC = 1
C...     IF NUMBER ALREADY PUT INTO ELMENT TABLE, GO TO
C...     OUTPUT PUNCTUATION
      IF(NOTANX.EQ.1)  GO TO 260
C
C..      OUTPUT PREVIOUS VARIABLE SYMBOL TO ICLASS/ELMENT TABLE
      JLMENT = JLMENT + 1
      IF(JLMENT.GT.MAXELM) GO TO 999
       ICLASS(JLMENT) = 1
       CALL ATBLKP(A,N,0)
       ELMENT(JLMENT) = A
            IF(N.EQ.0) GO TO 260
       ICLASS(JLMENT) = N + 2
      GO TO 260
C
C...     LAST ENTRY WAS PUNCTUATION
  252 IF(LASTNF.NE.6) GO TO 260
      IF(NF.NE.6) GO TO 260
C...  OUTPUT A **
       ICLENT = IC(5)
      LASTNF = 0
      GO TO 265
C
C...     OUTPUT THE PUNCTUATION
  260 JLMENT = JLMENT + 1
      IF(JLMENT.GT.MAXELM) GO TO 999
      NOTANX = 0
      A = BLANKS
      CALL ABUILD(A,CHAR)
       LASTNF = NF
  265  ELMENT(JLMENT) = 0.0D0
       A = BLANKS
C...     ENTER THE PUNCTUATION TYPE CODE
       ICLASS(JLMENT) = ICLENT
      NCPW = 0
      NUMONE = 0
       MAYBEV = 0
      GO TO 60
C
C...     CHARACTER JUST FOUND IS NOT PUNCTUATION - IF PREVIOUS
C...     CHARACTER PUNCTUATION, INITIALIZE FOR SYMBOL BUILD-UP
  270 IF( ITSPNC .NE. 1 ) GO TO 300
C...     INITIALIZE TO BEGIN NUMBER MODE
  280 LASTNF = 0
      NUMB  =  0
      NCPW  =  0
      ITSPNC = 0
C...  IS IT A DECIMAL POINT
      IF(NF-7)  285, 290, 285
  285 IF(NF.GT.1) GO TO 300
C...  CHARACTER WAS A NUMBER
      MAYBEV = 1
      CALL ABUILD(AA,CHAR)
  290 NUMB = 1
      NUMONE = 1
C...  TRANSFER FOR NUMBER MODE
  300 IF (NUMB .EQ. 1) GO TO 340
      IF(NF4.EQ.0) GO TO 310
      NF4 = 0
      NCPW = NUMONE
      GO TO 60
C
  310 IF (NCPW .LT. 6) GO TO 330
C...  TOO MANY CHARACTERS IN A VARIABLE NAME.
  320 JSUBER = 1
      KSUBER = JSUBER
      GO TO 60
C
  330 NCPW = NCPW + 1
  335 CALL ABUILD(A,CHAR)
      GO TO 60
C
C...  BUILD UP NUMBER HERE
C...     IF NUMERIC CHARACTER, SET FLAG TO INDICATE ONE READ
  340       IF(NF.GT.1) GO TO 342
       IFLP2 = 1
C...     SEE IF ANYTHING OTHER THAN ZEROES HAS BEEN PROCESSED
  342       IF(NONUM.NE.0) GO TO 345
C...  NO - TRANSFER IF THIS ENTRY IS A DECIMAL POINT
      IF(NF.EQ.7)  GO TO 485
      IF(NF.NE.0)  GO TO 344
      IF(ITSADP.NE.1)  GO TO 60
C...     ANOTHER ZERO TO RIGHT OF DECIMAL POINT - INCREMENT
C...     VALUE OF NEGATIVE EXPONENT
      NOE = NOE + 1
       GO TO 60
C
C...  SOMETHING OTHER THAN ZERO FOUND
  344 NONUM = 1
  345 IF(MEXP)  350, 440, 390
C...  PROCESS EXPONENTS
  350 MEXP = 1
      IF(NF.EQ.5) GO TO 370
      IF(NF -  4) 390, 60, 390
  370 ITSPL = 0
      GO TO 60
  390 IF( NF.GT.1) GO TO 420
      NEXP = NEXP*10 + ICHAR
      GO TO 60
C
C...  CONVERT TO PROPER FLOATING POINT NUMBER
 420  IF(NONUM.NE.0) GO TO 425
      A =0.0D0
      GO TO 435
  425 A = FLP1
C...     IF AN 'E' EXPONENT GIVEN, INCORPORATE IT IN NUMBER
      IF( MEXP.EQ.0 ) GO TO 435
C...     YES - ADJUST EXPONENT SIGN, IF NECESSARY
      IF( ITSPL.EQ.1) GO TO 430
      NEXP = - NEXP
 430  A = A*10.D0**(NEXP)
C
C...  OUTPUT NUMBER, RESET FLAGS
  435 NOE = 0
      NOEL = 0
      NVDL = 0
      NVD  = 0
      NONUM= 0
      ITSPL = 1
      ITSADP = 0
      MEXP = 0
      NEXP = 0
  625 JLMENT = JLMENT + 1
      IF(JLMENT.GT.MAXELM) GO TO 999
  630 FLP1 = 0.0D0
       IFLP2 = 0
      ELMENT(JLMENT) = A
      ICLASS(JLMENT) = 3
      NUMONE = 0
      NCPW = 0
      A = BLANKS
      AA = BLANKS
      NOTANX = 1
      NUMB = 0
      IF(NF.EQ.7) GO TO 436
      IF(NF.LT.13) GO TO 438
C...  BAD NUMBER FORMAT
  436 JSUBER = 4
      KSUBER = JSUBER
  438 IF(NOUT.EQ.1) GO TO 111
       GO TO 222
C
  440 IF(NF.GT.1) GO TO 480
C...  PROCESS NUMERIC CHARACTER
  450 IF (ITSADP .NE. 0) GO TO 460
C...  ADD CHARACTER LEFT OF DECIAML POINT (INTEGER PART OF NUMBER)
      NOEL = NOEL + 1
      IF(NOEL.GE.17) GO TO 505
      FLCHAR = ICHAR
      FLP1 = FLP1*10.0D0+FLCHAR
      GO TO 60
C
C...  ADD CHARACTER RIGHT OF DECIMAL POINT (FRACTIONAL PART OF NUMBER)
 460  NOEL = NOEL +1
      NOE = NOE + 1
      IF(NOEL.GE.17) GO TO 505
      FLCHAR = ICHAR
      FLP1 = FLP1 + FLCHAR/(10.0D0**NOE)
      GO TO 60
C
  480  IF (NF.NE.7) GO TO 500
  485       IF(ITSADP.EQ.1) GO TO 900
C...  PROCESS DECIAML POINT
      ITSADP = 1
      MAYBEV = 0
C..  GET NEXT  NON-BLANK CHARACTER
      GO TO 60
C
  500  IF (NF.NE.13) GO TO 420
C...  SET EXPONENT FLAG
C.. AN 'E' IS FOUND IF NO PREVIOUS DECIMAL THEN OUTPUT AS VAR.SYMB.
      IF(ITSADP.EQ.0) GO TO 214
      MEXP = -1
      GO TO 60
C
 505  JSUBER = 2
  515 KSUBER = JSUBER
      GOTO 60
C..
C..  OUTPUT THE ERROR ELEMENT LOC. AS THE SUBSC. VAL OF  ENTRY
C...     ILLEGAL ENTRY - A DECIMAL FOUND OUT OF CONTEXT - CHANGE TO
C...     AN ERROR CODE
  900  JSUBER = 20
      NAME = ENT
      PT(7) = JLMENT
      SUM = 9
      CALL ADIAGP
      JSUBER = 0
       ICLENT = ICLERR
       LASTNF = NF
C...     CHANGE NF CODE TO COMMA
       NF = 8
       GO TO 225
C...     ELMENT TABLE OVERFLOW
  999 JSUBER = 13
       JSKIP = 1
       RETURN
       END

