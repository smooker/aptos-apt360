      SUBROUTINE AORDP
C     *** THIS PROGRAM LAST MODIFIED FOR VERSION 4, MODIFICATION 2 ***
      IMPLICIT REAL*8 (A-H,O-Z)
C***
C     SPECIAL COMMON FOR 2 DIMENSIONAL PACKAGE-- USES PROTAPE BUFFER
C     READ AREA WHICH IS AVAILABLE AT ARLM2 TIME AS SCRATCH
C***
C     NOTE... VARIABLES IER,VTEM,VNUL ARE NOT THE SAME AS IN THE MAIN
C     STREAM ARITHMETIC ELEMENT
C     ALSO EX,EY,EZ,VNUL
      COMMON/A2CMMN/DUMMY(1308) ,CSCF(3) ,DSCF(3) ,CFTEM(3) , VTEM(3) ,
     1PTEM1(3)  ,PTEM2(3)  ,PT(3,6)   ,DOT(6)    ,FPNT(3)   ,TE2D(3)   ,
     2TI2D(3)   ,CR        ,THDS      ,THCS      ,TAUDS     ,TAUCS     ,
     3PERCEN    ,ANS       ,RES       ,PNTTAN(3) ,EX(3)     ,EY(3)     ,
     4EZ(3)     ,VNUL(3)   ,
     5ICSCF     ,IDSCF     ,ITOPT     ,N         ,IDONE     ,NREV      ,
     6ITFAR     ,ITC       ,IOC       ,IPC       ,INTP      ,IER       ,
     7NINT      ,ICASE     ,ITAN
C
      QNUL = 0.D0
C     TO ORDER  POINTS IN THE DIRECTION OF TRAVEL
C
      IBMCT = 0
      LIMIT = IABS(NINT)
      DO 10 I=1,LIMIT
      CALL AVSUB(PT(1,I),TE2D,VTEM)
      CALL AVLENG(VTEM,RES)
      VTEM(3) = QNUL
      IF(IDSCF.NE.2) GO TO 5
C     CIRCLE DS, NORMALIZE  SORTING VECTORS
      CALL AVLENG(VTEM,DOT(I))
      CALL AVNORM(VTEM,VTEM,IER)
      IF((IER.NE.1).AND.(DOT(I).GE.TAUDS)) GO TO 5
      DOT(I)=-1.0D0
      GO TO 10
    5 VTEM(3) = QNUL
      CALL AVDOT(TI2D,VTEM,DOT(I))
      IF((IDSCF.EQ.1).AND.(NINT.EQ.-1).AND.(DOT(1).LT.QNUL))
     1 CALL AERR (724)
      IF((IDSCF.EQ.1).AND.(     RES .LT.TAUDS)) DOT(I) =-DABS(RES)
   10 CONTINUE
C
C
C     NOW HAVE DOT PRODUCTS- SORT FROM LARGEST + TO SMALLEST NEG IN CIR-
C     CLE DS CASE - FROM LARGEST -TO+  IN LINE  CASE  (EFFECTIVELY THE
C     ORDER IN WHICH THE POINTS WILL BE ENCOUNTERED,ALTHO IN THE LINE CA
C     SE YOU HAVE ALREADY PASSED ANY ONE WITH NEGATIVE POT
C
C     TEST FOR SPECIAL CASE
      IF (LIMIT.EQ.1) RETURN
      NLIMIT = NINT - 1
   20 DO 50 I = 1,NLIMIT
      ILL = I
   30 CONTINUE
      II = I+1
      DO 40 K=II,NINT
      KLL = K
      GO TO (31,32 ),IDSCF
C
C     LINE
   31 IF(DOT(ILL).GT.DOT(KLL)) GO TO 35
      GO TO 40
C
C     CIRCLE
   32 CONTINUE
      IF(DOT(I) - DOT(K))35,40,40
C
C     REVERSE POINTS ANDOT VALUES AND  RESTART INNERMOST LOOP
   35 CALL AVSTO(PT(1,I),VTEM)
      CALL AVSTO(PT(1,K),PT(1,I))
      CALL AVSTO( VTEM,PT(1,K))
      ANS = DOT(I)
      DOT(I)=DOT(K)
      DOT(K) = ANS
      IBMCT = IBMCT + 1
      IF(IBMCT.GT.100) CALL AERR(740)
      GO TO 30
   40 CONTINUE
   50 CONTINUE
      RETURN
      END

