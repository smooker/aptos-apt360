      SUBROUTINE ATABPT
C     *** THIS PROGRAM LAST MODIFIED FOR VERSION 4,MODIFICATION 4 ***
C
C
C.....CONSTRUCT A POINT AS THE INTERSECTION OF A LINE AND A
C.....TABULATED CYLINDER IN THE XY-PLANE
C
C..   ADD PROVISIONS TO ENABLE PRTPRGRMR TO GET THE INTER OF A CIRCLE
C..   AND A TABCYL POINT/INTOF,SYMCIR,SYMTAB,SYMPNT
C..   IF ICRPT IS NOT EQUAL ZERO WE LOOK FOR CIRCLE/TABCYL INTER.
C...
      IMPLICIT REAL*8(A-H,O-Z)
      INTEGER PUNTAB
       COMMON/ATAPTB/PROTAP,CANTAP,CLTAPE,POCTAP,PLOTAP,SRFTAP,
     1 TAPES1,TAPES2,TAPES3,TAPES4,INTAPE,IOUTAP,PUNTAP
       COMMON/A1COM/REFSYS,NAME,NAME1,JSUBER,JSV,NAMSUB,KDBUG,INDXPT,
     1 LOOP,IFINI
      COMMON/AVST/VST(7200)
      DIMENSION DEFTAB(1000)
      EQUIVALENCE(VST(7200),DEFTAB(1000))
      COMMON/ADFSTO/DEFSTO(85),PARTNO(11)
       DIMENSION DEFANS(82)
      EQUIVALENCE(DEFSTO(4),DEFANS(1))
C               *          *          *          *          *
      DIMENSION D( 999),ID(1998)
      EQUIVALENCE (DEFTAB(2),ID(1),D(1))
      DIMENSION AA(22),R(22),INE(6),ROOTS(6)
C***********************************************************************
      SQRT(Q) = DSQRT(Q)
      ATAN(Q) = DATAN(Q)
      ABS(Q) = DABS(Q)
      SIGN(Q,QQ) = DSIGN(Q,QQ)
C
C.....SAVE CONDITION OF SENSE LIGHT 1
C
      ISENSE=0
      CALL SLITET(1,K000FX)
       GO TO(160,161),K000FX
  160 ISENSE=1
C
C.....SET UP FOR FIRST TRY
C
  161 ER=0.0D0
      ICOUNT=1
      ICIRPT = 0
      LOUT=0
      ILOUT=0
      JSUBER=0
C
C.....TEST TO DETERMINE IF TABPNT IS BEING USED AS A SUBROUTINE OF TABCI
C
      IF(ID(2)-27)149,151,149
C
C.....YES, SET UP UPPER AND LOWER BOUNDARIES FOR RE-TRY PROCEDURE
C
  151 IHU=ID(4)
      IHUT=IHU
      ITE=(ID(18)-1)*7+20
      IZT=14
      GO TO 51
C
C.....NO, SEARCH FOR THE ESTIMATED INTERVAL IN WHICH THE INTERSECTION IS
C.....EXPECTED.    IF FOUND, SET UP UPPER AND LOWER BOUNDARIES FOR
C.....RE-TRY PROCEDURE.
C
  149 IF (ID(4).EQ.3002)GO TO 150
      ICIRPT=1
      IHU=11
      NT=7*(ID(22)-1)+25
      GO TO 2333
  150 IHU=8
      NT=(ID(16)-1)*7+22
 2333 CALL ASCHTB(IHU,D(NT),D(NT+1),ER)
      IF(ER)3,1510,3
 1510 IHUT=IHU
      ITE=NT-3
      IZT=18
      IF(ICIRPT.NE.0)GO TO 1234
  400 RAD=0.0D0
      CALL CHKRET(IHU,RAD,INTROT,D)
      IF(INTROT)31,31,51
 1234 IZT=21
      GO TO 51
    1 JSUBER=1005
      GOTO29
C
C.....TRANSLATE AND ROTATE INTO THE COORDINATE SYSTEM OF THE TABCYL
C.....INTERVAL.
C
    3 IF(ID(2)-27)5,1,5
    5 WRITE(IOUTAP,4)
    4 FORMAT(36H0TABCYL INTERSECTION POINT NOT FOUND)
      GOTO1
C..   THIS AREA COMPUTES ROTATION ANGLE OF INTERVAL AXIS TO BASIC AXIS.
 1000 XA=D(IHU+7)-D(IHU)
      YA=D(IHU+8)-D(IHU+1)
      COSTHA=SQRT(XA*XA+YA*YA)
      SINTHA=YA/COSTHA
      COSTHA=XA/COSTHA
      IF(ABS(COSTHA)-1.0D-6)1001,1001,1003
 1001 RA=-SIGN(1.5707963D0,SINTHA)
 1002 GO TO IT,(1005,1006,1007)
 1003 RA=-ATAN(SINTHA/COSTHA)
      IF(COSTHA)1004,1001,1002
 1004 RA=RA+3.14159265D0
      GO TO 1002
   52 IF(ICIRPT .EQ.0)GO TO 400
   51 IZ=1
      ASSIGN 1005 TO IT
      GO TO 1000
 1005 CALL ATRNRO(XA,YA,XB,YB,RA,IZ)
      IF(ICIRPT.NE.0)GO TO 210
      DIS=-(D(3)*D(IHU)+D(4)*D(IHU+1)-D(6))
      CALL ATRNRO(D(3),D(4),XF,YF,RA,IZ)
      IF(ABS(YF)-1.D-7)60,60,61
C.....CASE WHERE TRANSFORMED LINE IS VERTICAL
   60 XD=DIS/XF
      IF(XD+5.0D-7)17,17,18
   18 IF(ABS(XD-XB)-5.0D-7)27,27,697
  697 IF((XD+5.0D-7)*(XB+5.0D-7-XD))17,27,27
   61 BA=-(XF/YF)
      YF=DIS/YF
      GO TO 7
C
C..   CALCULATE COEFFICIENTS OF POLYNOMIAL FOR APOLYR--CIRCLE/TABCYL
C
  210 XA=D(3)-D(IHU)
      YA=D(4)-D(IHU+1)
      CALL ATRNRO(XA,YA,XF,YF,RA,IZ)
      AA(7)=XF*XF+YF*YF-D(9)*D(9)
      C=-(D(IHU+2)*D(IHU+4)+D(IHU+3))*D(IHU+4)
      AA(1)=D(IHU+2)*D(IHU+2)
 1235 IF(ABS(AA(1))-1.0D-14)1236,1237,1237
 1236 AA(1)=DSIGN(1.0D-14,AA(1))
 1237 IF(ICIRPT.EQ.0)GO TO 1238
      AA(2)=D(IHU+2)*D(IHU+3)*2.0D0
      AA(3)=2.0D0*D(IHU+2)*C+D(IHU+3)*D(IHU+3)
      AA(4)=2.0D0*D(IHU+3)*C-2.0D0*YF*D(IHU+2)
      AA(5)=C*C-2.0D0*YF*D(IHU+3)+1.0D0
      AA(6)=-2.0D0*(YF*C+XF)
      II=6
      GO TO 33
C
C.....CALCULATE COEFFICIENTS OF CUBIC EQUATION AND SOLVE FOR THE POINTS
C.....OF INTERSECTION OF THE GIVEN LINE AND THE SELECTED TABCYL SEGMENT.
C
    7 AA(1)=D(IHU+2)
      GO TO 1235
 1238 AA(2)=D(IHU+3)
      AA(4)=-YF
   30 AA(3)=-(D(IHU+2)*D(IHU+4)+D(IHU+3))*D(IHU+4)-BA
      II=3
   33 DO6I=1,22
    6 R(I)=0.0D0
      IFALL=0
      NN=7
      CALLAPOLYR(AA,II,NN,R,IFALL)
C
C.....TEST DEBUG FLAG
C
      IF(KDBUG)99,11,99
   99 WRITE (IOUTAP,100)XA,YA,XB,YB,DIS,XD,XF,YF
  100 FORMAT(1H08E14.6)
      WRITE (IOUTAP,100)R(1),R(2),R(3),                      R(4),R(5),R
     1(6)
C
C.....WAS THERE AN ERROR IN SOLVING FOR THE INTERSECTIONS
C
   11 IF(IFALL-1)10,12,12
C
C.....YES, WRITE COMMENT AND GO OUT ERROR EXIT.
C
   12 WRITE (IOUTAP,13)
   13 FORMAT(34H0TABCYL INTERSECTION POINT FAILURE)
      GOTO1
C
C.....NO, TEST WHETHER POINTS ARE IN THE TABCYL SEGMENT
C
   10 KIT=-1
      IDO=3
      IF(ICIRPT.NE.0)IDO=6
      LUCK=0
      DO15I=1,IDO
      INE(I)=0
      KIT=KIT+2
      IF(R(KIT+1))15,14,15
   14       IF(R(KIT)*(XB+1.0D-7-R(KIT)))  15, 16, 16
   16 LUCK=LUCK+1
      INE(I)=KIT
      ROOTS(LUCK)=R(KIT)
   15 CONTINUE
      IF(LUCK-1)17,24,111
C... MORE THAN ONE POINT IN INTERVAL, TEST FOR MORE THAN 2 POINTS
  111 IF(LUCK-2)112,112,19
C... TWO POINTS IN INTERVAL, TEST THEIR CLOSENESS
  112 IF(DABS((ROOTS(1)-ROOTS(2))/D(IHU+4)).GT.5.D-6) GO TO 19
C... ROOTS ARE CLOSE, TEST FURTHER FOR CIRCLE CASE
      IF(IDO.NE.6) GO TO 113
      IF(DABS((ROOTS(1)-ROOTS(2))/D(9)).GT.5.D-6) GO TO 19
C... TAKE AVERAGE OF ROOTS
  113 R1=(ROOTS(1)+ROOTS(2))/2.D0
      GO TO 28
C... MORE THAN 1 POINT IN INTERVAL, PRINT THEM OUT AND
C.....GO OUT THE ERROR EXIT.
C
   19 WRITE (IOUTAP,20)
   20 FORMAT(41H0MORE THAN 1 INTERSECTION POINT ON TABCYL)
      IF(ID(2)-27)40,41,40
   41 WRITE(IOUTAP,42)
   42 FORMAT(55H0CHECK THIS CIRCLE IT MAY OR MAY NOT BE THE DESIRED ONE)
   40 IZ=-1
      KIT=-1
      ASSIGN 1006 TO IT
      GO TO 1000
 1006 DO301I=1,IDO
      KIT=KIT+2
      IF(INE(I))299,301,299
  299 R1=R(KIT)
      RY=D(IHU+2)*(R1**3)+D(IHU+3)*(R1**2)-(D(IHU+2)*D(IHU+4)+D(IHU+3))
     1*(D(IHU+4)*R1)
      CALLATRNRO(R1,RY,XA,YA,RA,IZ)
      R1=XA+D(IHU)
      RY=YA+D(IHU+1)
      WRITE (IOUTAP,300)R1,RY
  301 CONTINUE
  300 FORMAT(1H 2F14.6)
      IF(ID(2)-27)1,29,1
C
C..   IF NO INTERSECTIONS FOUND IN INTERVAL USE THIS RETRY PROCEDURE----
C..   IF ATABPT IS USED AS A TABCIR SUBROUTINE CONSIDER ALL INTERVALS,--
C..   OTHERWISE CONSIDER ANOTHER INTERVAL UNTIL 3 INTERVALS ON EITHER
C..   SIDE OF THE ESTIMATED INTERVAL HAVE BEEN TRIED-- A TOTAL OF SEVEN
C..   INTERVALS CONSIDERED HERE.
C..   (EXTENSION INTERVALS ARE INCLUDED IN BOTH CASES
C
   17 CONTINUE
   31 IF(ID(2).EQ.27)GO TO 32
      IF(ICOUNT-7)32,32,3
   32 IF(MOD(ICOUNT,2))200,201,200
  200 IHU=IHUT+7*((ICOUNT+1)/2)
  203 ICOUNT=ICOUNT +1
      IF(IHU-ITE)52,240,240
  201 IHU=IHUT-7*(ICOUNT/2)
      ICOUNT=ICOUNT+1
      IF(IHU-IZT)250,250,52
  240 LOUT=1
      GO TO 17
  250 ILOUT=1
      IF(LOUT-ILOUT)17,3,17
C
C.....IF ONE INTERSECTION FOUND IN INTERVAL, SELECT IT
C
   24 DO26I=1,IDO
      IF(INE(I))25,26,25
   26 CONTINUE
   25 INZ=INE(I)
      R1=R(INZ)
      GOTO28
C
C.....SIMPLE CASE, TRANSFORMED LINE IS VERTICAL
C
   27 R1=XD
C
C.....CALCULATE THE SECOND COORDINATE AND ROTATE AND TRANSLATE BACK
C.....TO THE ORIGINAL COORDINATE FRAME.
C
   28 RY=D(IHU+2)*(R1**3)+D(IHU+3)*(R1**2)-(D(IHU+2)*D(IHU+4)+D(IHU+3))
     1*(D(IHU+4)*R1)
C
C.....IS TABPNT BEING USED AS A SUBROUTINE OF TABCIR
C
      IF(ID(2)-27)36,152,36
C
C.....YES
C
  152 D(1)=R1
      D(2)=RY
      ID(6)=IHU
      GOTO29
C
C.....NO, PUT POINT COORDINATES IN DEFANS BLOCK
C
   36 IZ=-1
      ASSIGN 1007 TO IT
      GO TO 1000
 1007 CALL ATRNRO(R1,RY,XA,YA,RA,IZ)
 1010 DEFANS(1)=D(IHU)+XA
      DEFANS(2)=D(IHU+1)+YA
      DEFANS(3)=0.0D0
C
C.....TEST DEBUG FLAG
C
 1167  IF(KDBUG)165,29,165
  165  WRITE(IOUTAP,100)R1,RY,DEFANS(1),DEFANS(2),XA,YA,TEMP
C
C.....RESTORE SENSE LIGHT 1 CONDITION
C
   29 IF(ISENSE)162,163,162
  162 ISENSE=0
      CALL SLITE (1)
  163 RETURN
      END

