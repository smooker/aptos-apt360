      SUBROUTINE ATLSEG
C     *** THIS PROGRAM LAST MODIFIED FOR VERSION 4, MODIFICATION 2 ***
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*4  AB
      COMMON/A2CMMN/ADUM(720),TE(3) ,TEK(3) ,TEL(3) ,TES(3) ,TA(3) ,
     1TAK(3)    ,TAL(3)    ,PMOVE(3)  ,TI(3)     ,TIK(3)    ,TIL(3)    ,
     2U2(3)     ,UVEC(3)   ,VTEM(3)   ,CMOVE(3)  ,EX(3)     ,EY(3)     ,
     3EZ(3)     ,VNUL(3)   ,TM(3)     ,DIR(3)    ,AXIS(3)   ,AXIS1(3)  ,
     4AXIS2(3)  ,AXIS3(3)  ,REFPNT(3) ,RGT(3)    ,FWD(3)    ,UP(3)     ,
     5ZLNORM(3) ,ZLPNT(3)  ,TNDIR(3)  ,VA(3)     ,TMVCMP(3) ,P1(3)     ,
     6P2(3)     ,PNT(3)    ,PNT1(3)   ,OLDU1(3)  ,OGLE(3)   ,RZERO(3)  ,
     7TANMOT(3) ,TLEND1(3) ,V(3)      ,CEND(3)   ,DELMOT(3) ,D2(3)     ,
     8DNMOT(3)  ,AX4(3)    ,A         ,B         ,C         ,RA        ,
     9HI        ,ALPHA     ,GAMMA     ,CAGL      ,SAGL      ,COM1
      COMMON/A2CMMN/COM4 ,COSTH ,CTOCL ,DIAM , DIF ,
     1DIFOUT    ,DINC      ,DP        ,DPE       ,DPI       ,DPL       ,
     2DPMAX     ,DP1       ,DPCNT     ,DSMOV     ,D1        ,D2A       ,
     3EL1       ,EL2       ,FIPNT     ,FLIPCK    ,HAFDIA    ,HCHORD    ,
     4OFFSET    ,PROD1     ,PROD2     ,PSI       ,RADNO     ,RC1       ,
     5RDRM      ,RDRN      ,RONE      ,RZEROL    ,SAVE1     ,SIUTH     ,
     6TANGL     ,THETA     ,ALP       ,EPS7      ,VAMAX     ,VL        ,
     7ZDOTC     ,ZGAMMA    ,ZIGN      ,ZL        ,ZL1       ,ZL2       ,
     8ZNPTS     ,TOLBND    ,CENDIS    ,CENLEN    ,CHORD     ,
     9           ABCD(2)   ,ACARD(2)  ,SAVE(6)   ,CUTDAT(7) ,TEM(10)
      COMMON/A2CMMN/ TEMP(20) ,TCDAT(260) ,QEQUIV(20)
      COMMON/A2CMMN/ IS ,IIS ,IT ,IIT ,IPS ,
     1IIPS      ,IDS       ,IIDS      ,ICS       ,IICS      ,IGS       ,
     2IIGS      ,ICDEFL    ,ICDEFS    ,IAUTPS    ,IGO       ,ICRDCT    ,
     3ICUT      ,IGTFLG    ,INOPS     ,ISRCH     ,IOFSET    ,ISTRUP    ,
     4I3DFLG    ,MULOUT    ,MULTAX    ,NUMAX     ,NUMSFS    ,NUMSUR    ,
     5IGOUG     ,IPDPL     ,NUMDIM    ,IRSTRT    ,ICSCNT    ,I3        ,
     6I31       ,J         ,JA        ,JL        ,JS        ,JT        ,
     7KC        ,KND       ,KR        ,L         ,INCFS     ,NP        ,
     8IBEGIN    ,           IFAR1     ,IK        ,INS1      ,ITNFLG    ,
     9IVAMAX    ,IWS       ,IIWS      ,IZ        ,NEXT1     ,NEXT2
      COMMON/A2CMMN/ NPTS ,NUMPT1 ,JAM ,JAP ,JTUSED ,
     1IFRL      ,N         ,M         ,MDIC      ,JBR       ,JCKR      ,
     2JCPR      ,JCR       ,JDR       ,JGR       ,JMIN      ,JMINR     ,
     3JPR       ,JPXR      ,JTR       ,JCNT1     ,JCNT2     ,JCNT3     ,
     4JSW       ,JTKF      ,LISV      ,LSV       ,IPT       ,JFIND     ,
     5IC        ,ICC       ,IL        ,K         ,NUMPTS    ,IAMDCT    ,
     6IFL2      ,J5        ,J6        ,JW6       ,J10       ,J12       ,
     7J13       ,J40       ,J43       ,J54       ,J103
      COMMON/A2DYDP/ KDYNFQ(12), NKFQ
      COMMON/A2CTDF/        TLHITE(1) ,TANHI(1)  ,TANLO(1)  ,UMAX(1)   ,
     1R1(1)     ,CORRAD(1) ,TCONT(1)  ,TLINC(65)
      DIMENSION  SINL(1), COSL(1), TLLDAT(1)
      EQUIVALENCE(SINL(1),TANHI(1)), (COSL(1),TANLO(1)), (TLLDAT(1),
     1TCONT(1))
      COMMON/A2FPC / Q15X01,QP9X01    ,QP6X01    ,QP5X01    ,QP4X01    ,
     1QP0001    ,QP001     ,QP01      ,QP1       ,Q1P       ,Q10P      ,
     2Q1000P    ,Q1PE5     ,Q1PE6     ,Q1PE10    ,Q1PE20    ,Q1PE30    ,
     3Q1PE36    ,Q1PE38    ,QP8X01    ,QP7X01    ,
     4QP4X09    ,QP9       ,QP99      ,QP995     ,QP997     ,QP999     ,
     5QP9999    ,QP4X95    ,QP5X95    ,QP6X9     ,QP7X9     ,
     6QP6X05    ,QP5X05    ,QP4X05    ,QP0005    ,QP005     ,QP05      ,
     7QP5       ,Q5P       ,                                 Q4X045    ,
     8QP0002    ,QP0047    ,QP017     ,Q1RAD     ,QP0349    ,QP125     ,
     9QP6       ,QP2       ,QP2499    ,QP25      ,QP3
      COMMON/A2FPC / QP7   ,QP75      ,QP8       ,QP866     ,Q1P01     ,
     1Q1P1      ,Q1P2      ,Q1P25     ,Q1P5      ,Q2P       ,Q2P5      ,
     2Q3P       ,Q3P5      ,Q4P       ,Q8P       ,Q11P      ,Q45P      ,
     3Q90P      ,Q130P     ,Q4500P    ,Q9000P    ,QP02      ,QNUL      ,
     4QPIE       ,QFIL(9)
      DIMENSION AB(2)
      DATA AB(1),AB(2)/4HATLS,4HEG  /
      ICDEFL = 0
       CALL ADYNDP (AB(1),1,000011)
C      TEST FOR BAD DEFINITION IF E AND F GIVEN
      IF(CUTDAT(3) + CUTDAT(4)) 101,101,100
  100 TLLDAT(1) = CUTDAT(1) * QP5
      TLLDAT(5) = CUTDAT(5) * Q1RAD
      TLLDAT(6) = DSIN(CUTDAT(5))/DCOS(CUTDAT(5))
      TLLDAT(2) = TLLDAT(1) * TLLDAT(6)
      TLLDAT(3) = DSQRT((CUTDAT(3)-TLLDAT(1))**2 +(CUTDAT(4)-TLLDAT(2))
     1 **2)
      IF((TLLDAT(3)-CUTDAT(2)).LT.-QP7X01)CALL AERR(417)
  101 CONTINUE
      DO 1I=3,58
    1 TLLDAT(I) = QNUL
C  MAKE SURE TOOL DIAMETER NOT LESS THAN ZERO
      IF(CUTDAT(1))2,92,3
    2 CALL AERR(401)
C  EXAMINE TOOL HEIGHT. IF LESS THAN ZERO ERROR. SET TO 5 IF = ZERO.
C  OKAY OTHERWISE
    3 IF(CUTDAT(7))4,5,6
    4 CALL AERR (402)
    5 CUTDAT(7)=DMAX1(Q5P,CUTDAT(2))
C  SUM OF ANGLES A AND B MUST BE LESS THAN 90 DEGREES
    6 IF(Q90P - CUTDAT(5) - CUTDAT(6)) 7,7,8
    7 CALL AERR(403)
    8 TLLDAT(47) = QP5*CUTDAT(1)
      CUTDAT(1)=TLLDAT(47)
C  ERROR IF ANGLE A NEGATIVE
      IF(CUTDAT(5))9,10,11
    9 CALL AERR(404)
   10 TLLDAT(13) = Q1P
      TLLDAT(4) = Q1PE38
      GO TO 12
C  COMPUTE PARAMETERS FOR CERTAIN TOOL SEGMENTS FOR A GREATER THAN ZERO
   11 TLLDAT(59) = Q1RAD*CUTDAT(5)
      TLLDAT(12) = DSIN(TLLDAT(59))
      TLLDAT(13) = DCOS(TLLDAT(59))
      TLLDAT(9)=TLLDAT(12)/TLLDAT(13)
      TLLDAT(43)=TLLDAT(9)*TLLDAT(47)
      TLLDAT(4) = Q1P/TLLDAT(9)
C  MAKE SURE HEIGHT OF BOTTOM LINE SEGMENT DOES NOT EXCEED TOOL HEIGHT
   12 IF(QP4X01 - DABS(CUTDAT(7) - TLLDAT(43)))13,13,15
   13 IF(CUTDAT(7)-TLLDAT(43))14,14,16
   14 CALL AERR(405)
   15 TLLDAT(43)=CUTDAT(7)
C  ERROR IF ANGLE B NEGATIVE
   16 IPT = 1
      IF(CUTDAT(6))17,18,19
   17 CALL AERR(406)
   18 TLLDAT(44) = Q1P
      GO TO 20
C  COMPUTE PARAMETERS FOR CERTAIN TOOL SEGMENTS FOR B GREATER THAN ZERO
   19 TLLDAT(60) = Q1RAD*CUTDAT(6)
      TLLDAT(44) = DCOS(TLLDAT(60))
      TLLDAT(45) = DSIN(TLLDAT(60))
      TLLDAT(53)=TLLDAT(45)/TLLDAT(44)
C  FURTHER CALCULATIONS
   20 TLLDAT(14)=TLLDAT(47)/TLLDAT(13)
      TLLDAT(46)=(CUTDAT(7)-TLLDAT(43))/TLLDAT(44)
      TLLDAT(55)=TLLDAT(47)+TLLDAT(45)*TLLDAT(46)
      TLLDAT(17) = Q1P
      TLLDAT(49) = Q1P
C  EXAMINE TOOL RADIUS. IF GREATER THAN ZERO, CORNER CIRCLE WILL BE PART
C  OF TOOL CONFIGURATION. IF = ZERO, TOOL WILL CONSIST ONLY OF LINE AND
C  POINT CIRCLE SEGMENTS. ERROR IF NEGATIVE.
      IF(CUTDAT(2))21,22,25
   21 CALL AERR(407)
C  COMPARE LENGTH OF UPPER LINE SEGMENT TO ZERO. SET VALUES IN TLLDAT
C  BLOCK ACCORDINGLY
   22 IF(TLLDAT(46))23,23,24
   23 TLLDAT(53)=TLLDAT(4)
      TLLDAT(49) = QNUL
      GO TO 87
   24 TLLDAT(27)=TLLDAT(43)
      TLLDAT(31)=TLLDAT(47)
      TLLDAT(28)=TLLDAT(53)
      TLLDAT(29)=TLLDAT(4)
      GO TO 86
C  COMPUTE CENTER OF CORNER CIRCLE
   27 CUTDAT(3)=TLLDAT(47)-TLLDAT(32)
      CUTDAT(4)=TLLDAT(32)
      GO TO 26
C  STORE RADIUS OF CORNER CIRCLE AND COMPUTE DISTANCE FROM CENTER OF
C  CIRCLE TO BOTTOM LINE (TLLDAT(22))
   25 TLLDAT(32)=CUTDAT(2)
   26 TLLDAT(22)=CUTDAT(4)*TLLDAT(13)-CUTDAT(3)*TLLDAT(12)
      TLLDAT(5)=CUTDAT(3)*CUTDAT(3)+CUTDAT(4)*CUTDAT(4)
C  IF = 0, CENTER OF CORNER CIRCLE HAS TO BE CALCULATED
      IF(TLLDAT(5)+CUTDAT(5)+CUTDAT(6))28,27,28
C  DISTANCE FROM CENTER OF CIRCLE TO INTERSECTION OF LINE SEGMENTS
   28 TLLDAT(6) = DSQRT((CUTDAT(3)-TLLDAT(47))*(CUTDAT(3)
     1-TLLDAT(47))+(CUTDAT(4)-TLLDAT(43))*(CUTDAT(4)-
     2TLLDAT(43)))
      TLLDAT(54)=TLLDAT(53)*(CUTDAT(7)-TLLDAT(43))
C  DISTANCE FROM CENTER OF CIRCLE TO UPPER END OF UPPER LINE SEGMENT
      TLLDAT(30)=DSQRT((CUTDAT(4)-CUTDAT(7))*(CUTDAT(4)-
     1CUTDAT(7))+(CUTDAT(3)-TLLDAT(55))*(CUTDAT(3)-TLLDAT(55)))
C  IF THE Y COORD. (F) OF THE CENTER OF THE CORNER CIRCLE IS LESS THAN
C  THE Y COORD. OF THE INTERSECTION OF THE LINES, THEN ERROR
      IF(CUTDAT(4) + QP4X01 - TLLDAT(43))29,29,30
   29 CALL AERR(408)
C  IF THE RADIUS IS BOTH LARGER THAN THE DISTANCE TO THE INTERSECTION
C  OF THE LINES AND DIFFERENT THAN THE DISTANCE TO THE ORIGIN OF THE
C  BOTTOM LINE SEGMENT, WE HAVE AN INVALID TOOL CONFIGURATION
   33 IF(QP4X01 - DABS(TLLDAT(5) - TLLDAT(32)*TLLDAT(32))) 34,34,35
   34 CALL AERR(409)
C  IF E GREATER THAN ZERO, WE HAVE AN INVALID TOOL CONFIGURATION
   35 IF(CUTDAT(3))53,37,34
   53 CALL AERR(-415)
      TLLDAT(4)=CUTDAT(4)/CUTDAT(3)
      TLLDAT(9)=CUTDAT(3)/CUTDAT(4)
C  NO LOWER LINE SEGMENT
   54 TLLDAT(17) = QNUL
C  FURTHER TLLDAT VARIABLES
   55 TLLDAT(29)=TLLDAT(4)
   56 TLLDAT(38)=(TLLDAT(47)-CUTDAT(3))*TLLDAT(44)+
     1TLLDAT(45)*(CUTDAT(4)-TLLDAT(43))
C  IF = 0, THERE IS NO UPPER LINE SEGMENT AND IN THIS CASE TOOL NO GOOD
      IF(TLLDAT(46))67,57,67
C  IF GREATER THAN ZERO, RADIUS AND DISTANCE FROM CENTER OF CORNER
C  CIRCLE TO INTERSECTION OF LINES EQUAL.
   67 IF(TLLDAT(32)-TLLDAT(6))68,68,62
   68 TLLDAT(57)=TLLDAT(32)*TLLDAT(32)-TLLDAT(38)*TLLDAT(38)
C  LENGTH OF UPPER LINE SEGMENT
      TLLDAT(46) = TLLDAT(46) + DSQRT(DABS(TLLDAT(57))) -
     1 DSQRT(DABS(TLLDAT(6)**2 - TLLDAT(38)**2))
      TLLDAT(62)=CUTDAT(4)-CUTDAT(7)-TLLDAT(53)*(TLLDAT(54)
     1+TLLDAT(47)-CUTDAT(3))
      IF(QP4X01 - DABS(TLLDAT(62))) 72,72,69
   72 IF(TLLDAT(62))73,73,77
C  IF GREATER THAN ZERO, UPPER LINE SEGMENT WITH CORNER CIRCLE TANGENT.
C  OTHERWISE CORNER CIRCLE, PT. CIRCLE, UPPER LINE, AND THEN PT. CIRCLE
   73 IF(QP4X01 - DABS(TLLDAT(57))) 75,75,74
   75 IF(TLLDAT(57))76,76,83
   76 GO TO 41
   57 CALL AERR(413)
C  WE MUST CHANGE PARAMETERS FOR BOTTOM POINT CIRCLE DUE TO NATURE OF
C  CORNER CIRCLE
   37 CALL AERR(-415)
      TLLDAT(9) = QNUL
      TLLDAT(4) = Q1PE38
      GO TO 54
C  IF GREATER THAN OR EQUAL TO ZERO, CORNER CIRCLE IS A POINT CIRCLE
   30 IF(QP4X01 - DABS(TLLDAT(32) - TLLDAT(6))) 31,22,22
C  IF NOT GREATER THAN ZERO, CONTINUE CALCULATIONS FOR CORNER CIRCLE
   31 IF(TLLDAT(32)-TLLDAT(6))38,38,33
   38 IF(TLLDAT(47) + TLLDAT(9)*(TLLDAT(43) - CUTDAT(4)) -
     1   CUTDAT(3) + QP4X01)39,39,40
C  CORNER CIRCLE INTERSECTS LOWER LINE SEGMENT AT AN UNACCEPTABLE ANGLE
   39 CALL AERR(410)
   40 IF(CUTDAT(4) + QP4X01 - TLLDAT(43) - TLLDAT(53)*(TLLDAT(47) -
     1   CUTDAT(3)))41,41,42
C  CORNER CIRCLE INTERSECTS UPPER LINE SEGMENT AT AN UNACCEPTABLE ANGLE
   41 CALL AERR(411)
   42 TLLDAT(21)=TLLDAT(32)*TLLDAT(32)-TLLDAT(22)*TLLDAT(22)
C  LENGTH OF LOWER LINE SEGMENT
      TLLDAT(14) = TLLDAT(14) + DSQRT(DABS(TLLDAT(21)))
     1 - DSQRT(DABS(TLLDAT(6)**2 - TLLDAT(22)**2))
      TLLDAT(61)=CUTDAT(3)+TLLDAT(9)*CUTDAT(4)
      IF(DABS(TLLDAT(61)) - QP4X01) 43,46,46
C  IF GREATER THAN ZERO, PT. CIRCLE FOLLOWED BY CORNER CIRCLE OR JUST
C  CORNER CIRCLE. OTHERWISE PT. CIRCLE (MAYBE), LOWER LINE SEGMENT, PT.
C  CIRCLE, AND THEN CORNER CIRCLE
   43 IF(QP4X01 - DABS(TLLDAT(21))) 44,44,54
   44 IF(TLLDAT(21))45,45,50
   45 GO TO 39
   46 IF(TLLDAT(61))51,47,47
C  IF GREATER THAN ZERO,PT. CIRCLE (MAYBE), LOWER LINE SEGMENT, PT. CIR-
C  CLE, AND THEN CORNER CIRCLE. IF = 0, PT. CIRCLE AND CORNER CIRCLE.
C  ERROR LESS THAN ZERO
   51 IF(TLLDAT(32)*TLLDAT(32)-TLLDAT(5))52,53,50
   52 GO TO 39
C  IF GREATER THAN ZERO, CORNER CIRCLE TANGENT TO LOWER LINE SEGMENT
   47 IF(QP4X01 - DABS(TLLDAT(21))) 48,48,55
   48 IF(TLLDAT(21))49,49,50
   49 GO TO 39
C  LOWER LINE SEGMENT, PT. CIRCLE, AND CORNER CIRCLE PARAMETER CALC.
   50 TLLDAT(25) = DSQRT(DABS(TLLDAT(21)))/TLLDAT(22)
      TLLDAT(20) = (Q1P - TLLDAT(9)*TLLDAT(25))/(TLLDAT(9)+TLLDAT(25))
      TLLDAT(19)=TLLDAT(12)*TLLDAT(14)
      TLLDAT(23)=TLLDAT(13)*TLLDAT(14)
      TLLDAT(21)=TLLDAT(4)
      TLLDAT(29)=TLLDAT(20)
      GO TO 56
   62 IF(QP4X01 - DABS(TLLDAT(30) - TLLDAT(32))) 63,63,64
   63 CALL AERR(412)
C  IF GREATER THAN ZERO, CORNER CIRCLE MEETS UPPER PT. CIRCLE AT UNAC-
C  CEPTABLE ANGLE. IF = 0 WE MUST CHANGE PARAMETERS FOR UPPER PT. CIRCLE
   64 IF(CUTDAT(7)-CUTDAT(4))78,66,63
   78 CALL AERR(-416)
      TLLDAT(53)=(CUTDAT(4)-CUTDAT(7))/(TLLDAT(47)+TLLDAT(54)
     1-CUTDAT(3))
   79 TLLDAT(49) = QNUL
   80 TLLDAT(28) = QNUL
      GO TO 85
C  NO UPPER LINE SEGMENT. CHANGE IN PARAMETERS FOR UPPER POINT CIRCLE
C  NECESSARY DUE TO NATURE OF CORNER CIRCLE
   66 CALL AERR(-416)
      TLLDAT(53) = QNUL
      GO TO 79
C  IF GREATER THAN ZERO,CORNER CIRCLE AND THEN UPPER PT. CIRCLE. OTHER-
C  WISE CORNER CIRCLE, PT. CIRCLE, UPPER LINE, AND THEN UPPER PT. CIRCLE
   69 IF(QP4X01 - DABS(TLLDAT(57))) 70,70,79
   70 IF(TLLDAT(57))71,71,83
   71 GO TO 41
   74 TLLDAT(28)=TLLDAT(53)
      GO TO 84
   77 IF(QP4X01 - DABS(TLLDAT(32) - TLLDAT(30))) 81,81,78
   81 IF(TLLDAT(32)-TLLDAT(30))82,82,83
   82 GO TO 41
C  FURTHER CALCULATIONS FOR TLLDAT BLOCK PARAMETERS
   83 TLLDAT(41) = DSQRT(DABS(TLLDAT(57)))/TLLDAT(38)
      TLLDAT(28) = (TLLDAT(41)+TLLDAT(53))/(Q1P - TLLDAT(41)*TLLDAT(53))
      TLLDAT(37)=TLLDAT(28)
      TLLDAT(36)=TLLDAT(53)
   84 TLLDAT(39)=TLLDAT(55)-TLLDAT(45)*TLLDAT(46)
      TLLDAT(35)=CUTDAT(7)-TLLDAT(44)*TLLDAT(46)
      TLLDAT(43)=TLLDAT(35)
      TLLDAT(47)=TLLDAT(39)
   85 TLLDAT(27)=CUTDAT(4)
      TLLDAT(31)=CUTDAT(3)
   86 TLLDAT(33) = Q1P
   87 TLLDAT(5) = Q1PE38
      TLLDAT(18) = Q1P
      TLLDAT(50) = Q1P
      TLLDAT(51)=CUTDAT(7)
      IBEGIN=9
C  WE NOW SEARCH EACH OF THE 7 POSSIBLE SEGMENTS TO DETERMINE FIRST ONE
   91 IF(TCONT(IBEGIN))90,88,90
   90 TLLDAT(IBEGIN - 8) = -Q1P
      TLLDAT(65) = -Q1P
      TLLDAT(57) = Q1P
      TLLDAT(52) = - Q1PE38
      TLLDAT(60) = - Q1PE38
      TLLDAT(61) =  Q1PE38
      TLLDAT(66) = QNUL
      TLLDAT(64) = QNUL
C...
C...
   99 RETURN
   88 IBEGIN=IBEGIN+8
      IF(57-IBEGIN)89,91,91
   89 CALL AERR(414)
   92 IF(CUTDAT(7))4,93,10
   93 IPT = 0
      TLLDAT(53) = Q1PE38
      IBEGIN=57
      GO TO 90
       END

