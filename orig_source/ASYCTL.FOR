      SUBROUTINE ASYCTL
C     *** THIS PROGRAM LAST MODIFIED FOR VERSION 4,MODIFICATION 4 ***
C
C*    THIS SUBPROGRAM IS THE PASS 2 CONTROL FOR THE LANGUAGE TRANSLATOR
C*    IT PROCESSES THE PTPP META-LANGUAGE FILE OUTPUT OF PASS 1
C*    PTPP CLASSES 0,1,2,7,8,10, AND 11 ARE PROCESSED DIRECTLY
C*    FOR ALL CLASSES, KLASTP=CLASS TYPE
C*    FOR ALL CLASSES EXCEPT 0,1,7, AND 8,KLASCT=PTPP WORDS IN CLASS
C*    FOR CLASSES 1 AND 7,KLASCT=ISN,FOR CLASS 8,FINI,DEBUG,PRINT FLAGS
C*    ASYCTL MAY BE RE-ENTERED BY RETURN CALL FROM SPECIAL PROGRAM
C*    IN THIS CASE ISPPRG FLAG MUST BE SET NON-ZERO
C*    THIS ROUTINE MAY SET JSUBER TO ERROR NUMBERS 402 AND 408
C
      IMPLICIT REAL*8(A-H,O-Z)
       REAL*8 PROTAP,CANTAP,CLTAPE,POCTAP,PLOTAP,SRFTAP,TAPES1,TAPES2,
     1TAPES3,TAPES4,PPNAME,ID
      INTEGER*2 NHALF2(2),KVST(28800),ISEQ(8),IFLUSH,JDSAV
      INTEGER*4 PUNTAP,VST4(14400)
       COMMON/ATAPTB/PROTAP,DUMTAP,CLTAPE,POCTAP,PLOTAP,SRFTAP,
     1 TAPES1,TAPES2,TAPES3,TAPES4,INTAPE,IOUTAP,PUNTAP
       EQUIVALENCE (CANTAP,SRFTAP)
       COMMON/ASISTM/IPTNLY,ITRCUT,IWAVEN,KFLAG1,LTVMIT,NCLREC,NOPOST,
     1 NOPLOT,NUMPST,NUMPTR,ICLPRT,INDEXX,IPLOTR,KFLAGS(9)
       DIMENSION TVEC(3),SVEC(3),XYNOR(3),C3(3),TNOR(3),PUVEC(3),V(3),
     1 V1(3),PUNOR(3),AMBDA(3),ANS(3),SVECN(3),XO(3),XLAR(3),XSML(3),
     2 YLAR(3),YSML(3)
       DIMENSION DEFANS(82)
       DIMENSION PTPP(7200),CANON(7200),IPTPP(14400)
       COMMON/A1COM/REFSYS,NAME,NAME1,JSUBER,JSV,NAMSUB,KDBUG,INDXPT,
     1 LOOP,IFINI
       COMMON /ATMATY/XMAT4(16),XMAT3(16),XMAT2(16),XMAT1(16),TMATX(16)
       COMMON/APOSTP/PPNAME(20)
      EQUIVALENCE(TAPES4,ERRTAP),(POCTAP,PTPTAP)
      COMMON/AMXTAB/MAXTAB,MAXVS1,MAXVS2,MAXPTP,MAXSCL,MAXVS,
     1MAXVST,MXPTPP,MXCAN,MXSRCN,MAXSLR,MAXELM,MAXPOT
      COMMON/AVST/VST(7200)
      DIMENSION DEFTAB(1000)
      EQUIVALENCE(VST(1),PTPP(1),CANON(1),IPTPP(1))
       EQUIVALENCE (VST(1),VST4(1))
       EQUIVALENCE (VST(1),KVST(1))
      EQUIVALENCE(VST(7200),DEFTAB(1000))
      COMMON/ASCALR/SCALR(180),ISCWS,NSURF,LOCTEM,IARGTP
      COMMON/A2CLS7/PPSEQ1,PPSEQ2,ENAME,EINAME,IEREC,ISN
      COMMON/A1PAS2/I,J,K,L,MOVLGE,KANMAX,ICANST,IOVREC,KANPTR,MDFTAB,
     1KANCNT,KAUX,KDFCNT,IDEFP,KPRCNT,MDFPRE,IPREP,KOVFLP,KSRFCT,KOVCNT,
     2LSCAN,IOVFLO,MAXCAN,IREF,ICANSC,NAMSTA,KANGO,LASPTP,ISUB,
     3LCOMP,LGEREC,IRECN,JREC,JNUM,KANCUR,KANCOT,KDFENT,KANPAR,LGELOC,
     4IDTMOV,ISPPRG,INDEXS,KPTP,KPTPCT,KLASTP,KLASCT,KPRNT
      COMMON/ADFSTO/DEFSTO(85),PARTNO(11)
      EQUIVALENCE(DEFSTO(4),DEFANS(1))
      COMMON/ADFPRL/DEFLST(1)
      COMMON/ADFPRG/DEFPRG(16)
      EQUIVALENCE(DEFPRG(16),TVEC(16),SVEC(16),XYNOR(16),C3(16),
     1TNOR(13),PUVEC(13),V(13),V1(13),PUNOR(10),AMBDA(10),ANS(10),
     2SVECN(7),XO(7),XLAR(4),XSML(4),YLAR(4),YSML(4))
      COMMON/AZURF/ZSUR(4)
       COMMON/APROTP/PROTP(102),PROSAV(102),NOWCLT,LSTPSV,INCORE
     1 ,JGORIT,SAVMOT
       COMMON/ADEBUG/IDEBUG(3),KCANDF
       DIMENSION JPROTP(200)
       DIMENSION ISCALR(60)
       EQUIVALENCE (PROTP(1),JPROTP(1))
       EQUIVALENCE (NHALF,NHALF2(1))
       EQUIVALENCE (SCALR(1),ISCALR(1))
C
      DIMENSION SEQ(2)
      DATA ID/8H    ID  /
      EQUIVALENCE(SEQ(1),ISEQ(1))
C
C...
      DIMENSION   PRATNO(11)
      DATA PRATNO/'REMARK  .. THI  S IS T  HE HEA  DING Y  OU GET   WHEN
     1   NO PAR  TNO HA  S BEEN   GIVEN  '/
      DO 9876 I = 1,11
 9876 PARTNO(I) = PRATNO(I)
C
C     CHECK ISPPRG TO SEE IF RE-ENTRY FROM SPECIAL PROGRAM
      IF(ISPPRG.NE.0) GOTO 35
C     NO - FIRST TIME IN - INITIALIZE TABLE INDICES FOR PASS 2
       MAXTAB = 6200
      MAXVS=MAXVS1+MAXVS2
C..                                                                  D39
      IFLUSH = IWAVEN
      IF (IFLUSH.EQ.0) GOTO 2
      WRITE (IOUTAP,1) IFLUSH
    1 FORMAT (62H0* * * PROCESSING DELETED -- REFER TO ERROR DIAGNOSTIC
     1AT ISN  1I4,9H * * * * ///)
      IWAVEN = 1
C..                                                                  D39
    2 ICANSC = MAXVS + MAXPTP + 1
      ICANST=ICANSC+MAXSCL
       KANPTR = ICANST + 50
      LOOPS = 0
       MAXCAN = 0
       KANCNT = 0
      KANGO = 0
       KANMAX = MAXTAB - KANPTR - 200
C     INITIALIZE PASS 2 FLAGS
       JGORIT = 0
      NOWCLT = 0
      IOVREC = 0
      LSTPSV = 0
      NPARTS = 0
      INCORE = 0
      REFSYS = 0.0D0
      ENAME = 0.0D0
       NSURF = 0
C     FOR DEBUG/ON AND DEBUG/OFF
      KDBUG=0
C     FOR PRINT/ON AND PRINT/OFF
      KPRNT=0
C...     FOR CANON/ON AND CANON/OFF
       KCANDF = 0
      ISN=0
       IRECN = 1
      IEREC = 0
      LGEREC=0
C     SET NORMAL ZSURF PLANE
      ZSUR(1) = 0.0D0
      ZSUR(2) = 0.0D0
      ZSUR(3) = 1.0D0
      ZSUR(4) = 0.0D0
C     SET UP MATRIX AREAS
       DO 4  I = 1,15
      XMAT4(I)=0.0D0
      XMAT3(I)=0.0D0
      XMAT2(I)=0.0D0
      XMAT1(I)=0.0D0
    4 TMATX(I)=0.0D0
      XMAT4(16)=1.0D0
      XMAT3(16)=1.0D0
      XMAT2(16)=1.0D0
      XMAT1(16)=1.0D0
      TMATX(16)=1.0D0
C
C     INITIALIZE INDXPT,INDEXS,AND KLASCT
    5  INDXPT = MAXVS + 1
       KINDXP = 2*INDXPT - 1
      INDEXS=INDXPT
      KPTPCT=0
      KLASCT=0
C...  RESET LOOP ERROR FLAG IF THERE IS NOT A CURRENT LOOP IN PROCESS
      IF(LOOPS.EQ.0)  LOOP = 0
C     READ RECORD FROM PTPP FILE
       CALL ATAPRD(PTPTAP,IOFLAG,NWRDS,4,KPTP,1,IPTPP(KINDXP),1
     1 ,IPTPP(KINDXP+1),1,PTPP(INDXPT+1),0)
C     CHECK I/O OPERATION
      IF(IOFLAG)10,810,1800
C
C     SHOULD HAVE TYPE 0 RECORD
   10       IF(IPTPP(KINDXP).NE.0) GO TO 1800
C..                                                                  D39
C..   GET BLOCK LENGTH  -- CONTAINED IN LOW ORDER 4 BYTES
   20  KPTPCT = IPTPP(KINDXP+1)
C...  SET ADDRESS OF LAST 8 BYTE ENTRY FOR THIS BLOCK
      KPTPCT=INDXPT+KPTPCT
C
C..   PRINT PTPP BLOCK IF DEBUG IS ON
      IF(KDBUG.EQ.0) GOTO 35
      WRITE(IOUTAP,65) KPTP
      WRITE(IOUTAP,66) INDXPT,(PTPP(I),I=INDXPT,KPTPCT)
C
C     ENTRY POINT TO PROCESS PTPP CLASS - SET INDXPT TO NEXT CLASS ENTRY
 35   INDXPT=INDEXS+KLASCT
C
C     IS THIS PTPP BLOCK EXHAUSTED
 40   IF(INDXPT.GE.KPTPCT) GOTO 5
C
C     NO - PROCESS NEXT PTPP CLASS IN BLOCK
       INDXPT = INDXPT + 1
C...     CHECK FOR PTPP SEGMENTATION
            IF(NPARTS.NE.0) GO TO 1020
   50  KINDXP = 2*INDXPT - 1
C     OBTAIN NO. OF WORDS IN PTPP CLASS (OR ISN FOR CLASSES 1 AND 7)
C...                                   (MODE FLAG FOR CLASS 8)       D39
       KLASCT = IPTPP(KINDXP+1)
C     OBTAIN PTPP CLASS AND BRANCH
       KLASTP = IPTPP(KINDXP)
C     SAVE CURRENT VALUE OF INDXPT
      INDEXS=INDXPT
C...     CLEAR ARGUMENT LIST CONTROL FLAGS
       IARGTP = 0
C     SET INDXPT TO ITEM 2 OF PTPP CLASS FOR ALL ROUTINES
       INDXPT = INDXPT + 1
       KINDXP = KINDXP + 2
C...  BRANCH IF FLUSH MODE PREVAILS                                  D39
      IF(IFLUSH.NE.0) GO TO 2400
C..   CHECK VALIDITY OF CLASS TYPE
      IF(KLASTP.LE.0) GOTO 60
            IF(KLASTP.GT.20) GO TO 60
      GOTO(100,200,300,400,500,600,700,800,900,1000,1100,1200,1300,300,
     1 300, 1600,1700,2000,2250,2300),KLASTP
C
   60 JSUBER = 6201
      CALL ADIAGM
      WRITE (IOUTAP,65) INDXPT
      WRITE(IOUTAP,66) MAXVS,(PTPP(I),I=MAXVS,KPTPCT)
   65  FORMAT (1H0,I12)
 66   FORMAT(I7,5Z18/(7X,5Z18))
      GOTO 5
C
C     CLASS 1 - ORIGINAL INPUT STATEMENT WITH ISN - PRINT THEM OUT
 100  INDEXS=INDXPT
      INDXPT=INDXPT+13
C     IS ISN SAME AS LAST
      IF(ISN.EQ.KLASCT) GOTO 120
C...    SAVE ISN AND CARD NO.
      ISN=KLASCT
      PPSEQ1 = PTPP(INDXPT-1)
      PPSEQ2 = PTPP(INDXPT)
      WRITE(IOUTAP,110)ISN,(PTPP(I),I=INDEXS,INDXPT)
 110  FORMAT(1X,I5,2X,13A6,A2)
C     PROCESS NEXT PTPP CLASS
      GOTO 40
C     ISN SAME AS LAST - DO NOT PRINT
 120  WRITE(IOUTAP,130)(PTPP(I),I=INDEXS,INDXPT)
 130  FORMAT(8X,13A6,A2)
      GOTO 40
C
C     CLASS 2 - ERROR DIAGNOSTICS FROM PASS 1
C     CHECK FOR DIAGNOSTIC MESSAGE ONLY
  200       IF(IPTPP(KINDXP+1).EQ.1) GO TO 220
C     YES - PRINT MESSAGE WITH ASSOCIATED ISN AND CARD SEQUENCE NUMBER
       INDEXS = INDEXS + 2
       INDXPT = INDXPT + IPTPP(KINDXP)
      WRITE(IOUTAP,210)PPSEQ1,PPSEQ2,ISN,(PTPP(I),I=INDEXS,INDXPT)
  210 FORMAT(15H0***** CARD NO.2X,A6,A2,4H,ISNI5/(' **** ',10A8,' **** '
     1))
      WRITE(IOUTAP,215)
  215 FORMAT(1H )
      GOTO 40
C
C     SET JSUBER EQUAL TO ERROR NUMBER
  220  JSUBER = IPTPP(KINDXP)
       ISN = IABS(IPTPP(KINDXP+3))
       PPSEQ1 = PTPP(INDXPT+2)
       PPSEQ2 = PTPP(INDXPT+3)
C     IS A VARIABLE SYMBOL INVOLVED
            IF(KLASCT.EQ.4) GO TO 230
C     YES - SET ENAME
       INDXPT = INDXPT + 4
      ENAME=PTPP(INDXPT)
C....  DO WE HAVE A SUBSCRIPT TO PRINT....BR TO 225 TO PROCESS IT IF SO
      IF (KLASCT.GT.5) GOTO 225
      GOTO 240
C.... SET UP TO OUTPUT THE SUBSCRIPT
 225  INDXPT = INDXPT + 1
      NAMSUB = PTPP(INDXPT)
      GOTO 250
  230 ENAME=0.0D0
 240  NAMSUB=0
C
C     WRITE DIAGNOSTIC MESSAGE
 250  CALL ADIAGM
      GOTO 1900
C
C...     CLASSES 3 AND 14 - SURFACE DEFINITIONS - USE ADFPRE (1204)
 300  CALL ADFPRE
C     GO CHECK FOR ERRORS
      GOTO 1900
C
C...     CLASS 4 - REFSYS - USE ARFSYS (1205)
 400  CALL ARFSYS
      GOTO 1900
C
C...     CLASS 5 - OUTPUT (PRINT, PUNCH, OR TITLES) - USE ACLAS5 (1213)
 500  CALL ACLAS5
      GOTO 1900
C
C...     CLASS 6 - COPY ONTO PROTAP, 2000 THROUGH
C...               9000 AND 11000 TYPE RECORDS - USE ACPYTP (1206)
 600  CALL ACPYTP
      GOTO 1900
C
C     CLASS 7 - INPUT CARD SEQUENCE WITH STATEMENT ID AND ISN
C     IF NO PROTAP RECORD TO BE OUTPUT,SAVE SEQ. NO. AND ISN FOR DIAG.
  700 ISN = IABS(KLASCT)
      IISN = KLASCT
       KLASCT = 4
C     EXTRACT PROTAP RECORD FLAG(=1,NO REC. OUTPUT =2,OUTPUT PROTAP REC.
       I = IPTPP(KINDXP+1)
C     EXTRACT VST INDEX OF STATEMENT ID(0 IF NONE)
       NAME = IPTPP(KINDXP)
       INDXPT = INDXPT + 1
C     SET CARD SEQUENCE NUMBER
      PPSEQ1=PTPP(INDXPT)
       INDXPT = INDXPT + 1
      PPSEQ2=PTPP(INDXPT)
C     SET STATEMENT ID (0 IF NONE)
       INDXPT = INDXPT + 1
      PROTP(3)=PTPP(INDXPT)
C...     RESET STORING INDEX FOR PARAMETER LIST DATA BLOCKS
       LOCTEM = ICANST + 10
C...     DO WE OUTPUT PROTAP RECORD
            IF(I.NE.2) GO TO 40
C     YES - CHECK FOR VALID STATEMENT ID
            IF(NAME.EQ.0) GO TO 740
C     PUT CURRENT PROTAP RECORD NUMBER IN VST SLOT
  720  NAME4 = 4*NAME - 3
       KVST(NAME4+4) = IRECN
C     SET UP REMAINDER OF PROTAP RECORD
  740  JPROTP(1) = 0
       JPROTP(2) = 3
       JPROTP(3) = 1000
       JPROTP(4) = IISN
      SEQ(1)=PPSEQ1
      SEQ(2)=PPSEQ2
      ISEQ(4)=ISEQ(5)
      PROTP(4)=SEQ(1)
C     OUTPUT PROTAP RECORD
      CALL ARITAP
      GOTO 1900
C
C     CLASS 8 - FINI,DEBUG/ON OR OFF,PRINT/ON OR OFF -- CHECK FOR FINI
 800  IF(KLASCT.NE.0) GOTO 820
C
C     YES-WRAP UP
  810  IFINI = 1
C     WRITE FINI RECORD
       JPROTP(1) = 0
       JPROTP(2) = 1
       JPROTP(3) = 14000
       JPROTP(4) = 0
      CALL ARITAP
C...     IF LAST MOTION STATEMENT CONTAINED AN IMPLIED CHECK SURFACE,
C...     OUTPUT DIAGNOSTIC
            IF(JGORIT.EQ.0) GO TO 812
       JSUBER = 650
      ENAME=0.0D0
       NAMSUB = 0
       CALL ADIAGM
C
  812  CALL ATAPOP(PROTAP,2,IOFLAG)
       CALL ATAPOP(PROTAP,1,IOFLAG)
       CALL ATAPOP(PTPTAP,1,IOFLAG)
            IF(IWAVEN.EQ.0) GO TO 814
       CALL ATAPOP(ERRTAP,2,IOFLAG)
  814  CALL ATAPOP(CANTAP,1,IOFLAG)
       CALL ATAPOP(ERRTAP,1,IOFLAG)
  815  CALL ASCNTL
C
C...     SET INDXPT FOR NEXT CLASS
  820  INDXPT = INDXPT - 1
C...     KLASCT =1,DEBUG/ON, =2,OFF, =3,PRINT/ON, =4,OFF,
C...     =5,CANON/ON, =6,OFF
       GO TO (830,835,840,845,850,855),KLASCT
C
  830  KDBUG = 1
       GO TO 40
  835  KDBUG = 0
       GO TO 40
  840  KPRNT = 1
       GO TO 40
  845  KPRNT = 0
       GO TO 40
  850  KCANDF = 1
       GO TO 40
  855  KCANDF = 0
      GOTO 40
C
C...     CLASS 9 - OBTAIN - USE ASEQAL (1207)
 900  CALL ASEQAL
      GOTO 1900
C
C     CLASS 10 - JUMPTO/ID - SET PTPP INDEX AND CHECK RANGE
C     IF AN ERROR HAS OCURRED,DO NOT BRANCH
 1000 IF( LOOP .NE.0) GOTO 35
C
 1010       IF(PTPP(INDXPT))  1030, 1030, 1015
 1015  KINDXP = 2*INDXPT - 1
C...  PICK UP VST LOCATION OF ID
       NEWREC = IPTPP(KINDXP+1)*2 - 1
            IF(KVST(2*NEWREC+4).NE.8) GO TO 1035
C...  GET INDEX POINTER
       NHALF = VST4(NEWREC+3)
      IF (NHALF.LE.0) GO TO 1035
       NPARTS = NHALF2(2) + MAXVS
C...  GET RECORD NUMBER
       NEWREC = NHALF2(1)
C...  IS PROPER RECORD NUMBER IN CORE
      IF(NEWREC.NE.KPTP) GO TO 1040
C...  RECORD IN CORE - SET POINTER
 1020 INDXPT = NPARTS
      NPARTS = 0
      IF(INDXPT.LE.0) GO TO 1030
            IF(INDXPT.LE.KPTPCT) GO TO 50
C..   PTPP INDEX IS OUT OF ALLOWABLE RANGE                           D49
 1030 JSUBER = 408
      GO TO 230
C..                                                                  D49
C..   STMT I.D. GIVEN IS UNDEFINED - DELETE THIS STATEMENT
 1035 JSUBER = 403
      IF (KLASTP.NE.11) GO TO 230
C..   OUTPUT A POINTER TO THE STMT.I.D. IN ERROR
      ENAME = ID
      NAMSUB = INDXPT-JDSAV+1
      GO TO 250
C..                                                                  D49
C...  GO GET PROPER PTPP RECORD
 1040 CALL ASERCH(PTPTAP,NEWREC,IOFLAG)
C...  NOW GO READ IT IN CORE
            IF(IOFLAG)  5, 1800, 1800
C
C...     CLASS 11 - IF(V)  ID1, ID2, ID3
C...                SET PTPP INDEX AS V IS LT, EQ, OR GT 0
C     IF AN ERROR HAS OCURRED,DO NOT BRANCH
 1100 IF( LOOP .NE.0) GOTO 35
C     OBTAIN PARAMETER VALUE - TEST FOR SCALAR
      CALL AGTARG(VALUE,1,KRET)
C.. DIAGNOSTICS PROCESSED IN AGTARG -- IF KRET=7 THEN GET NEXT STMT
      IF (KRET.EQ.7) GO TO 35
            IF(KRET.NE.1) GO TO 1130
      JDSAV = INDXPT
C
C     TEST SCALAR VALUE - SET INDXPT ACCORDINGLY
            IF(DABS(VALUE).LT..00001) GO TO 1110
      IF(VALUE)1010,1110,1120
 1110  INDXPT = INDXPT + 1
      GOTO 1010
 1120  INDXPT = INDXPT + 2
       GO TO 1010
C
C...     PARAMETER WITHIN IF PARENTHESES NOT A SCALAR
 1130 JSUBER = 402
       GO TO 250
C
C...     CLASS 12 - COMPUTING EXPRESSION - USE ACLS12 (1214)
C...     TEST FOR UNARY MINUS RECORD
 1200       IF(IPTPP(KINDXP+1).NE.1) GO TO 1210
C...     RECORD SHOULD BE UNARY MINUS - CHECK OUT 'OPERATOR'
       KTM1 = KINDXP + 2*KLASCT
            IF(IPTPP(KTM1-1).EQ.15) GO TO 1220
C
 1210  CALL ACLS12
       GO TO 1900
C
C...     UNARY MINUS RECORD FOUND - PICK UP INDEX TO RESULT STORAGE
 1220  ISTORE = IPTPP(KINDXP)
C...     MOVE PTPP SCAN INDEX TO PARAMETER TO BE NEGATED
       INDXPT = INDXPT + 1
C...     GET SCALAR VALUE OF SYMBOL
       CALL AGTARG(SCALR(ISTORE),1,J)
C...     IF NO ERROR IN AGTSRF, MAKE SURE WE FOUND SCALAR
            IF(JSUBER.NE.0) GO TO 1250
            IF(J.NE.1) GO TO 1230
C...     NEGATE VALUE OF SCALAR
       SCALR(ISTORE) = -SCALR(ISTORE)
       GO TO 1900
C
C...     SCALAR NOT FOUND - DISTINGUISH BETWEEN UNDEFINED SYMBOL
C...     AND OTHER TYPES OF DATA
 1230       IF(J.NE.3) GO TO 1240
       JSUBER = 101
       GO TO 1250
 1240  JSUBER = 139
C...     PUT ERROR CODE INTO SCALAR TABLE ENTRY
 1250  KTM1 = 2*ISTORE - 1
       ISCALR(KTM1) = 0
       ISCALR(KTM1+1) = 9
      GOTO 1900
C
C...     CLASS 13 - SCALAR EQUALS EXPRESSION
C...     GET SCALAR INDEX OF NUMERIC VALUE TO BE ASSIGNED
C...     TO THE SCALAR VARIABLE
 1300  KTM1 = IPTPP(KINDXP+1)
C...     TEST FOR PRESENCE IN PTPP RECORD OF VALUE TO BE ASSIGNED
            IF(KTM1.NE.0) GO TO 1310
C
C...     YES - PICK IT UP, AND MOVE SCAN INDICES PAST IT
       FNUM = PTPP(INDXPT+1)
       INDXPT = INDXPT + 1
       KINDXP = KINDXP + 2
       GO TO 1320
C
C...     GET VALUE FROM SCALAR STORAGE
 1310  FNUM = SCALR(KTM1)
C
C...     GET SUBSCRIPT TYPE, VST INDEX, AND SYMBOL NAME
 1320  NAMSUB = IPTPP(KINDXP+3)
       NAME = IPTPP(KINDXP+5)
       ENAME = VST(NAME)
C...     GET SUBSCRIPT
       INDXPT = INDXPT + 2
       CALL AGTSUB
C...     IF NO ERROR, PLACE SCALAR IN CANON
            IF(JSUBER.NE.0) GO TO 250
       CALL ASCLPT(FNUM)
      GOTO 1900
C
C...     CLASS 16 - ZSURF - USE AZSURF (1211)
 1600 CALL AZSURF
      GOTO 1900
C
C...     CLASS 17 - SPECIAL PROGRAM CALL - USE ACALSP (1212)
 1700 CALL ACALSP
      GOTO 1900
C
C     RECORD FORMAT INCORRECT
 1800 WRITE(IOUTAP,1810)KPTPCT,NWRDS,IOFLAG
 1810 FORMAT(35H0******PTPP RECORD FORMAT INCORRECT3I6/1H )
       IWAVEN = 1
      GOTO 5
C
C     CHECK FOR ERRORS
 1900 IF(IOFLAG.LT.0) GOTO 1920
C     SYSTEM TAPE ERROR - PRINT IOFLAG
      WRITE(IOUTAP,1910)IOFLAG
 1910 FORMAT(32H0******SYSTEM TAPE ERROR,IOFLAG=I6/1H )
       IWAVEN = 1
      IOFLAG=0
C
C     CHECK FOR SUBROUTINE ERROR
 1920 IF(JSUBER.EQ.0) GOTO 35
      GOTO 250
C
C...     CLASS 18 - CODES REQUIRED FOR IMPLIED CHECK SURFACE LOGIC
 2000       IF(KLASCT.NE.0) GO TO 2010
C...     IMPLIED CHECK SURFACE FOUND - SET FLAGS TO SAVE PROTAP
C...     RECORDS UNTIL A USABLE DRIVE SURFACE APPEARS
       JGORIT = 1
       INCORE = 0
       NOWCLT = 0
       GO TO 35
C
C...     SAVE MOTION COMMAND CODES IN CASE NEEDED FOR COMPUTATION
C...     OF POSITION MODIFIER FOR FOLLOWING DS AS AN IMPLIED CS
 2010  SAVMOT = PTPP(INDXPT)
       GO TO 35
C
C...     CLASS 19
C...  SET UP LOOPS FLAG TO INDICATE LOOP MODE FOR SEGMENTATION
 2250  IGOTIT = IPTPP(KINDXP+1)
      LOOPS = 0
      IF(IGOTIT.EQ.1)  LOOPS = 1
      GO TO 35
C
C...     CLASS 20 - NESTED PARAMETER LIST - USE ARGLST (1208)
 2300  CALL ARGLST
       GO TO 1900
C..                                                                  D39
C..
C..   VST IS IN AN UNRECOVERABLE MESS  -- FLUSH THE PTPP
C..       PRINT ONLY CLASS 1 AND CLASS 2 RECORDS
C..   THAT IS, CARD IMAGE AND ERROR DIAGNOSTICS
C..
C...  KLASCT = 14 FOR CLASS 1,=4 FOR 7,=0 FOR 8                      D39
C..
 2400 KDBUG = 0
      IF (KLASTP.EQ.1) GO TO 100
      IF (KLASTP.EQ.2) GO TO 200
      IF (KLASTP.EQ.7) KLASCT = 4
      IF (KLASTP.EQ.8) KLASCT = 0
      GO TO 35
C...                                                                 D39
      END

