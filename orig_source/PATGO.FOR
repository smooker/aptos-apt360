C     *** THIS PROGRAM LAST MODIFIED FOR VERSION 4,MODIFICATION 4 ***
C
       SUBROUTINE PATGO
C
       IMPLICIT REAL*8(A-H,O-Z)
       INTEGER JPRCOD(8)/5000,5,2000,1054,0,71,0,53/
       INTEGER PUNTAP
       INTEGER*2 KDFANS(12)
       DIMENSION DEFANS(82),IDFSTO(170)
       DIMENSION PTPP(7200),CANON(7200)
       DIMENSION DEFTAB(1000)
       DIMENSION JPROTP(200)
       COMMON/A1COM/REFSYS,NAME,NAME1,JSUBER,JSV,NAMSUB,
     1 KDBUG,INDXPT,LOOP,IFINI
       COMMON/ATAPTB/PROTAP,CANTAP,CLTAPE,POCTAP,PLOTAP,SRFTAP
     1, TAPES1,TAPES2,TAPES3,TAPES4,INTAPE,IOUTAP,PUNTAP
       COMMON/AVST/VST(7200)
       COMMON/A2CLS7/PPSEQ1,PPSEQ2,ENAME,EINAME,IEREC,ISN
       COMMON/A1PAS2/I,J,K,L,MOVLGE,KANMAX,ICANST,IOVREC,KANPTR,
     1 MDFTAB,KANCNT,KAUX,KDFCNT,IDEFP,KPRCNT,MDFPRE,IPREP,KOVFLP,
     2 KSRFCT,KOVCNT,LSCAN,IOVFLO,MAXCAN,IREF,ICANSC,NAMSTA,KANGO,
     3 LASPTP,ISUB,LCOMP,LGEREC,IRECN,JREC,JNUM,KANCUR,KANCOT,
     4 KDFENT,KANPAR,LGELOC,IDTMOV,ISPPRG,INDEXS,KPTP,KPTPCT,
     5 KLASTP,KLASCT,KPRNT
      COMMON/ADFSTO/DEFSTO(85),PARTNO(11)
      COMMON/APROTP/PROTP(102),PROSAV(102),NOWCLT,LSTPSV,INCORE
     1,JGORIT,SAVMOT
       EQUIVALENCE(VST(1),CANON(1),PTPP(1))
       EQUIVALENCE(VST(7200),DEFTAB(1000))
       EQUIVALENCE (DEFSTO(4),DEFANS(1)),(DEFSTO(1),IDFSTO(1))
       EQUIVALENCE (DEFANS(1),KDFANS(1))
       EQUIVALENCE (PROTP(1),JPROTP(1))
C
       DIMENSION IPTDAT(15),IPTFLG(15)
       DIMENSION NUM(2),NOPFLG(3)
       EQUIVALENCE (FNUM,NUM(1)),(KRESLT,NUM(2))
       EQUIVALENCE (IPTDAT(1),IPATYP),(IPTDAT(2),NUMPTS)
     1 ,           (IPTDAT(3),NOCOLS),(IPTDAT(4),NPTCOL)
     2 ,           (IPTDAT(5),IPTLIM),(IPTDAT(6),NEXTYP)
     3 ,           (IPTDAT(7),INCRPT) ,(IPTDAT(8),JTEMP1)
       EQUIVALENCE (IPTDAT(9),NTAIN2)
       EQUIVALENCE (IPTDAT(11),NEXTPT),(IPTDAT(12),JENDPT)
       EQUIVALENCE (IPTDAT(13),ICOORD),(IPTDAT(14),INCORD)
       EQUIVALENCE (IPTDAT(15),INCOUT)
       EQUIVALENCE (IPTFLG(1),INVERS),(IPTFLG(2),IZGZAG)
     1 ,           (IPTFLG(3),IAVOID),(IPTFLG(4),LISTYP)
       EQUIVALENCE (IPTFLG( 5),LOPTYP),(IPTFLG(6),IREFLG)
     1 ,           (IPTFLG( 7),NOPFLG(1))
       EQUIVALENCE (IPTFLG(10),NUMB1), (IPTFLG(11),NUMB2)
     1 ,           (IPTFLG(12),JMITHR),(IPTFLG(13),ITRFLG)
     2 ,           (IPTFLG(14),NVOID2)
       EQUIVALENCE (NOPFLG(1),NTAIN1),(NOPFLG(2),NOMIT)
     1 ,           (NOPFLG(3),NVOID1)
       EQUIVALENCE (JPRCOD(1),GOTYPE),(JPRCOD(3),CYCTYP)
     1 ,           (JPRCOD(5),CYCLON),(JPRCOD(7),CYCOFF)
C
C...     PUT LENGTH OF GOTO/...-TYPE RECORDS TO BE CREATED
C...     INTO FIRST WORD OF PROTP AREA
       JPROTP(1) = 0
       JPROTP(2) = 6
C...     PUT PATTERN NAME AND SUBSCRIPT INTO OUTPUT AREA FOR
C...     POINTS TO BE WRITTEN ON THE PROTAP
       PROTP(3) = ENAME
       PROTP(4) = NAMSUB
C...     ALSO SAVE NAME FOR POSSIBLE RESTORATION AFTER 'AVOID'
       PATNAM = ENAME
C
C...     COMPUTE INDEX TO END OF STATEMENT IN PTPP
       IPTLIM = INDEXS + KLASCT
C...     DETERMINE PATTERN TYPE AND NUMBER OF POINTS
       IPATYP = KDFANS(9)
C...     IF PARALLEL PATTERN, EXTRACT NUMBER OF COLUMNS
            IF(IPATYP.NE.4) GO TO 70
       NOCOLS = KDFANS(12)
C...     COMPUTE NUMBER OF POINTS IN PATTERN
   70  NUMPTS = (KDFANS(11)-1)/3
C...     INITIALIZE END POINT NUMBER OF PATTERN
       JENDPT = NUMPTS
C
C...     MOVE PATTERN TO DEFTAB AREA
       DO 75  JK = 1,3
   75  DEFSTO(JK+39) = DEFANS(JK)
C
C...     INITIALIZE ALL FLAGS IN IPTFLG ARRAY TO ZERO
   80  DO 90  JTEMP1 = 1,15
   90  IPTFLG(JTEMP1) = 0
C...     CLEAR FLAG INDICATING AN 'AVOID' CONDITION STILL INCOMPLETE
       VOIDLS = 0.0D0
C
C...     TEST FOR PATTERN DEFINED IN ANOTHER REFERENCE SYSTEM
            IF(DEFSTO(2).EQ.REFSYS) GO TO 95
C...     YES - SET FLAG TO INDICATE OUTPUT TO BE TRANSFORMED
       ITRFLG = 1
C
C...     INITIALIZE INVERS FLAG FOR FORWARD DIRECTION (NO INVERS)
   95  INVERS = 1
C...     INITIALIZE NEXT OUTPUT POINT NUMBER TO START OF PATTERN
       NEXTPT = 1
C...     INITIALIZE PARLEL PATTERN COLUMN NUMBER FOR FORWARD DIRECTION
       ICOLNO = 1
C...     INITIALIZE POINT NUMBER INCREMENT FOR FORWARD DIRECTION
       INCRPT = 1
C...     INITIALIZE OUTPUT SEQUENCE DIRECTION FLAG FOR FORWARD
       INCOUT = 1
C
C...     TEST FOR END OF PATTERN MODIFIER LIST
  100       IF(INDXPT.LT.IPTLIM) GO TO 105
C...     YES - SET NEXT MODIFIER TYPE FLAG TO SO INDICATE
       NEXTYP = 0
       GO TO 300
C
C...     NOT END OF LIST - GET NEXT PARAMETER
  105  CALL AGTARG(FNUM,1,NEXTYP)
C
C...     SEE IF NEXT PARAMETER IS A SCALAR
  108       IF(NEXTYP.NE.1) GO TO 110
C...     YES - MUST HAVE ALREADY READ A MODIFIER TO ESTABLISH
C...     USE FOR SCALAR
            IF(LOPTYP.NE.0) GO TO 215
C...     HAVE NOT HAD A MODIFIER REQUIRING A SCALAR YET - ERROR
       JSUBER = 830
       GO TO 2000
C
C...     NO - MUST THEN BE A VOCABULARY WORD, OR ERROR
  110       IF(NEXTYP.EQ.5) GO TO 115
C...     INCORRECT PARAMETER TYPE - ERROR
  112  JSUBER = 831
       GO TO 2000
C
C...     VOCABULARY WORD FOUND - IS IT 'OMIT'
  115       IF(KRESLT.EQ.172) GO TO 160
C...     NO - TRY 'RETAIN'
            IF(KRESLT.EQ.171) GO TO 160
C...     SEE IF IT IS 'AVOID'
            IF(KRESLT.EQ.173) GO TO 180
C...     IF IT IS NOT 'INVERS', 'ZIGZAG', OR 'CONST' THEN, ERROR
            IF(KRESLT.EQ.6) GO TO 130
C...     NOT INVERS...
            IF(KRESLT.EQ.64) GO TO 125
C...     ...OR CONST...
            IF(KRESLT.EQ.170) GO TO 120
C...     ...AND NOT ZIGZAG - ERROR
  118  JSUBER = 832
       GO TO 2000
C
C...     ZIGZAG RECOGNIZED - HAVE WE ALREADY FOUND ONE
  120       IF(IZGZAG.NE.0) GO TO 150
C...     NO - ARE WE OUTPUTTING A PARALLEL PATTERN
            IF(IPATYP.LT.4) GO TO 155
C...     YES - SET FLAG FOR ZIGZAG
       IZGZAG = 1
C...     COMPUTE NUMBER OF POINTS/COLUMN
       NPTCOL = NUMPTS/NOCOLS
C...     SET INITIAL OUTPUT SEQUENCE DIRECTION FLAG FOR ZIGZAG
       INIDIR = 1
C...     GO TO SEE WHETHER ANY OMIT/RETAIN OR AVOID MODIFIERS
C...     HAVE ALREADY BEEN FOUND
       GO TO 118
C
C...     CONST RECOGNIZED - HAVE WE ALREADY FOUND ONE
  125       IF(IREFLG.NE.0) GO TO 150
C...     NO - SET FLAG FOR IT
       IREFLG = 1
C...     IF INVERS FLAG SET, ADJUST REFERENCE POINT LIMITS FOR
C...     REVERSED ORDER
            IF(INVERS.LE.0) GO TO 135
C...     GO TO SEE WHETHER ANY OMIT/RETAIN OR AVOID MODIFIERS
C...     HAVE ALREADY BEEN FOUND
       GO TO 140
C
C...     INVERS RECOGNIZED - HAVE WE ALREADY FOUND ONE
  130       IF(INVERS.LT.0) GO TO 150
C...     NO - SET FLAG FOR IT
       INVERS = -1
C...     ADJUST PARLEL PATTERN COLUMN NUMBER FOR INVERS DIRECTION
       ICOLNO = NOCOLS
C...     SET INITIAL OUTPUT SEQUENCE DIRECTION FLAG FOR INVERS OR
C...     ZIGZAG, INVERS - THIS FLAG USED ONLY IN ZIGZAG OUTPUT
       INIDIR = -1
C...     SET WORKING OUTPUT SEQUENCE DIRECTION FLAG FOR INVERS
       INCOUT = -1
C...     IF POINT NUMBERS FOR OPERATIONS REFERENCED TO ORIGINAL
C...     DEFINITION ORDER, ADJUST REFERENCE POINT LIMITS FOR INVERS
            IF(IREFLG.EQ.0) GO TO 140
  135  NEXTPT = NUMPTS
       JENDPT = 1
C...     SET POINT NUMBER INCREMENT DIRECTION FOR INVERS
       INCRPT = -1
C
C...     ZIGZAG AND INVERS MODIFIERS MUST PRECEDE ANY OMIT/RETAIN
C...     OR AVOID MODIFIERS USED - SEE IF ANY OF THE LATTER HAVE
C...     ALREADY BEEN FOUND
  140       IF(LOPTYP.EQ.0) GO TO 100
C
C...     OMIT/RETAIN OR AVOID MODIFIERS USED BEFORE ZIGZAG OR
C...     INVERS - ERROR
  145  JSUBER = 833
       GO TO 2000
C
C...     MORE THAN ONE ZIGZAG OR INVERS MODIFIER FOUND - ERROR
  150  JSUBER = 834
       GO TO 2000
C
C...     ZIGZAG MODIFIER FOUND FOR NON-PARALLEL PATTERN - ERROR
  155  JSUBER = 835
       GO TO 2000
C
C...     OMIT OR RETAIN FOUND - HAS TYPE OF OPERATION ALREADY
C...     BEEN ESTABLISHED FOR OUTPUT OF THIS PATTERN
  160       IF(LISTYP.NE.0) GO TO 165
C...     NO - THIS MODIFIER ESTABLISHES IT
       LISTYP = KRESLT - 170
       GO TO 175
C
C...     OPERATION TYPE ALREADY SET - DOES THIS MODIFIER AGREE WITH IT
  165       IF(LISTYP.EQ.KRESLT-170) GO TO 170
C...     OMIT/RETAIN MODIFIER FOUND DOES NOT AGREE WITH PREVIOUS ONES
       JSUBER = 811
       GO TO 2000
C
C...     OMIT OR RETAIN OPERATION - DO WE ALREADY HAVE ONE IN HOLD -
C...     IF SO, GO TO OUTPUT POINTS ACCORDING TO ONE IN HOLD
  170       IF(NTAIN1.NE.0) GO TO 300
      IF (NOMIT.NE.0) GO TO 300
C...     NONE IN HOLD - SET FLAG TO INDICATE OPERATION TYPE
  175  LOPTYP = LISTYP
C...     CLEAR STORAGE FOR NUMBER OF OMIT POINT
       NOMIT = 0
       GO TO 200
C
C...     AVOID FOUND - DO WE ALREADY HAVE ONE IN HOLD
  180       IF(NVOID1.EQ.0) GO TO 190
C...     YES - IF A SPECIFIED RETAIN LIST IS BEING USED FOR OUTPUT,
C...     MAKE SURE A RETAIN SEQUENCE IS IN PROCESS OR AVAILABLE
            IF(LISTYP.NE.1) GO TO 300
            IF(NTAIN2)  300, 450, 300
C
C...     NONE IN HOLD - SET FLAG TO INDICATE OPERATION TYPE
  190  LOPTYP = 3
C...     SET FLAG TO INDICATE AN AVOID MODIFIER HAS BEEN FOUND
       IAVOID = 1
C...     GET Z-INCREMENT FOR AVOID OPERATION - CHECK FOR END
C...     OF MODIFIER LIST FIRST - ERROR IF FOUND HERE
            IF(INDXPT.GE.IPTLIM) GO TO 210
       CALL AGTARG(AVOIDZ,1,NEXTYP)
C...     MAKE SURE IT IS A SCALAR
            IF(NEXTYP.NE.1) GO TO 210
C
C...     GET FIRST SCALAR FOLLOWING AN 'OMIT', 'RETAIN', OR 'AVOID,Z' -
C...     CHECK FOR END OF MODIFIER LIST FIRST - ERROR IF FOUND HERE
  200       IF(INDXPT.GE.IPTLIM) GO TO 210
C...     GET POINT NUMBER FOR OPERATION
  205  CALL AGTARG(FNUM,1,NEXTYP)
C...     MAKE SURE IT IS A SCALAR
            IF(NEXTYP.EQ.1) GO TO 220
C...     INSUFFICIENT OR INCORRECT DATA FOUND FOLLOWING 'OMIT',
C...     'RETAIN', OR 'AVOID'
  210  JSUBER = 836
       GO TO 2000
C
C...     SCALAR FOUND, NOT FIRST ONE FOLLOWING A MODIFIER - IF AN
C...     OPERATION OF TYPE INDICATED BY LAST MODIFIER ALREADY IN
C...     HOLD, IGNORE THIS SCALAR FOR NOW, GO TO OUTPUT POINTS
  215       IF(NOPFLG(LOPTYP).NE.0) GO TO 300
C
C...     CONVERT POINT NUMBER TO INTEGER, AND SAVE IT WHILE
C...     TESTING FOR A 'THRU' SEQUENCE
  220  NUMB1 = FNUM
C...     MAKE SURE POINT NUMBER IS WITHIN RANGE OF PATTERN
            IF(NUMB1.LE.0) GO TO 240
            IF(NUMB1.GT.NUMPTS) GO TO 240
C
C...     TEST FOR END OF MODIFIER LIST
            IF(INDXPT.LE.IPTLIM) GO TO 230
C...     YES - CLEAR PARAMETER TYPE FLAG TO INDICATE IT
       NEXTYP = 0
       GO TO 275
C
C...     NOT END OF MODIFIER LIST - GET NEXT ENTRY
  230  CALL AGTARG(FNUM,1,NEXTYP)
C...     IF SCALAR, NO 'THRU' SEQUENCE - GO TO OUTPUT POINTS
            IF(NEXTYP.EQ.1) GO TO 275
C...     NOT SCALAR - MUST BE VOCABULARY, OR ERROR
            IF(NEXTYP.NE.5) GO TO 112
C...     IT IS - IF NOT 'THRU', GO TO OUTPUT POINTS
            IF(KRESLT.NE.152) GO TO 275
C
C...     'THRU' FOUND - MUST BE FOLLOWED BY SCALAR - TEST FOR
C...     END OF MODIFIER LIST FIRST
            IF(INDXPT.GT.IPTLIM) GO TO 210
C...     GET PARAMETER, AND TEST FOR SCALAR
       CALL AGTARG(FNUM,1,NEXTYP)
            IF(NEXTYP.NE.1) GO TO 210
C...     CONVERT POINT NUMBER TO INTEGER
       NUMB2 = FNUM
C...     MAKE SURE IT IS WITHIN RANGE OF PATTERN
            IF(NUMB2.LE.0) GO TO 240
            IF(NUMB2.LE.NUMPTS) GO TO 250
C
C...     POINT NUMBER IS ZERO - ERROR
  240  JSUBER = 812
       GO TO 2000
C
C...     ORDER END POINT NUMBERS OF 'THRU' SEQUENCE ACCORDING TO
C...     WHETHER OR NOT ORDER OF OUTPUT IS INVERTED FROM ORDER
C...     OF REFERENCE NUMBER SEQUENCE
  250       IF((NUMB1-NUMB2)*INCRPT)  270, 210, 260
C...     POINT NUMBER ORDER MUST BE REVERSED
  260  JTEMP1 = NUMB2
       NUMB2 = NUMB1
       NUMB1 = JTEMP1
C
C...     SEE WHETHER OUTPUT IS TO BE IN ZIGZAG ORDER - IF SO, AND IF
C...     'CONST' HAS BEEN READ, POINT NUMBERS MUST BE IN SAME COLUMN
  270       IF(IZGZAG.EQ.0) GO TO 280
            IF(IREFLG.EQ.0) GO TO 280
            IF(NUMB2/NPTCOL.EQ.NUMB1/NPTCOL) GO TO 280
C...     LIMITS OF 'THRU' SEQUENCE NOT IN SAME COLUMN OF PARALLEL
C...     PATTERN FOR 'ZIGZAG' OUTPUT
       JSUBER = 837
       GO TO 2000
C
C...     OPERATION JUST READ DOES NOT USE 'THRU' SEQUENCE - SET
C...     2ND POINT NUMBER NEGATIVE
  275  NUMB2 = -1
C
C...     BRANCH TO PUT POINT NUMBER(S) IN WORKING STORAGES FOR OUTPUT
  280       IF(LOPTYP-2)  285, 290, 295
C
C...     RETAIN OPERATION
  285  NTAIN1 = NUMB1
       NTAIN2 = NUMB2
       GO TO 298
C
C...     OMIT OPERATION
  290  NOMIT = NUMB1
       JMITHR = NUMB2
       GO TO 298
C
C...     AVOID OPERATION
  295  NVOID1 = NUMB1
       NVOID2 = NUMB2
C
C...     IF END OF MODIFIER LIST HAS BEEN FOUND, GO TO OUTPUT POINTS
  298       IF(NEXTYP.EQ.0) GO TO 300
C...     END OF LIST NOT FOUND YET - DETERMINE WHETHER OR NOT NEXT
C...     ITEM OF LIST TO BE ANALYZED IS YET TO BE READ (HAS ALREADY
C...     BEEN READ IF OPERATION JUST SET UP DOES NOT USE 'THRU' SEQ.)
            IF(NUMB2)  108, 108, 100
C
C...     OUTPUT OR SKIP POINTS AS INDICATED BY MODIFIERS READ
C
C...     INITIALIZE FOR COMPARISON OF OPERATION POINT TO PRESENT
C...     POINT ON ASSUMPTION THAT OPERATION POINT NUMBERS ARE
C...     REFERENCED TO ORDER OF OUTPUT
  300  JTEMP1 = INCRPT
C...     SEE IF OUTPUT IS IN ZIGZAG ORDER
            IF(IZGZAG.EQ.0) GO TO 305
C...     YES - SEE IF OPERATION POINT NUMBERS REFERENCED TO
C...     ORIGINAL DEFINITION
            IF(IREFLG.EQ.0) GO TO 305
C...     YES - COMPUTE COLUMN NUMBER FOR FIRST POINT SPECIFIED TO
C...     BE OMITTED OR RETAINED
       ICOLTM = (NOPFLG(LISTYP)-1)/NPTCOL + 1
C...     IF FIRST POINT NOT IN SAME COLUMN AS NEXT POINT AVAILABLE
C...     FOR OUTPUT, USE OVERALL DIRECTION SENSE (INVERS FLAG) FOR
C...     COMPARISON OF SPECIFIED POINT WITH NEXT AVAILABLE POINT
            IF(ICOLTM.EQ.ICOLNO) GO TO 305
C...     POINTS ARE NOT IN SAME COLUMN
       JTEMP1 = INVERS
C
C...     TEST FOR RETAIN OPERATION, EITHER SPECIFIED (LISTYP = 1)
C...     OR IMPLIED (LISTYP = 0 WHEN NO OMIT OR RETAIN MODIFIERS
C...     HAVE BEEN FOUND YET)
  305       IF(LISTYP-1)  380, 310, 330
C
C...     RETAIN HAS BEEN SPECIFIED - ARE WE STARTING A SEQUENCE
  310       IF(NTAIN2.EQ.0) GO TO 390
C...     YES - DETERMINE WHETHER FIRST (OR ONLY) POINT TO BE RETAINED
C...     IS, IS BEYOND, OR IS BEFORE (ERROR), NEXT POINT OF PATTERN
            IF((NEXTPT-NTAIN1)*JTEMP1)  320, 325, 450
C
C...     POINT TO BE RETAINED IS BEYOND NEXT POINT - SET NEXT POINT
C...     NUMBER TO POINT TO BE RETAINED
  320  NEXTPT = NTAIN1
C...     IF MORE THAN ONE POINT TO BE RETAINED, MOVE LAST NUMBER
C...     OF SEQUENCE TO NTAIN1 FOR LIMIT TEST
  325       IF(NTAIN2.LE.0) GO TO 390
       NTAIN1 = NTAIN2
C...     GO TO COMPUTE COORDINATE PICK-UP INDEX FROM POINT NUMBER
       GO TO 390
C
C...     OMIT LIST BEING USED FOR OUTPUT - HAS NEXT POINT BEEN GIVEN -
C...     IF NOT, TREAT AS IMPLIED RETAIN
  330       IF(NOMIT.EQ.0) GO TO 380
C...     NEXT POINT OR SEQUENCE TO BE OMITTED GIVEN - DETERMINE
C...     WHETHER IT IS, IS BEYOND, OR IS BEFORE (ERROR) NEXT POINT
C...     OF PATTERN
            IF((NEXTPT-NOMIT)*JTEMP1)  350, 340, 450
C
C...     A POINT TO BE OMITTED IS NEXT POINT OF PATTERN
  340  NEXTPT = NEXTPT + INCRPT
C...     IS IT FIRST ONE OF A 'THRU' SEQUENCE
            IF(JMITHR.LE.0) GO TO 490
C...     YES - SET NEXT OUTPUT POINT INDEX TO FIRST POINT
C...     BEYOND SEQUENCE
       NEXTPT = JMITHR + INCRPT
C...     GO TO CLEAR 'OMIT' POINT STORAGES, AND RETURN TO PICK
C...     UP ANY FURTHER MODIFIER DATA
       GO TO 485
C
C...     POINT TO BE OMITTED IS BEYOND NEXT POINT OF PATTERN -
C...     SET TO OUTPUT POINTS UP TO POINT TO BE OMITTED
  350  NTAIN1 = NOMIT - INCRPT
C...     SEE IF THIS IS AN OMIT 'THRU' SEQUENCE
            IF(JMITHR.LE.0) GO TO 390
C...     YES - PUT NUMBER OF LAST POINT TO BE OMITTED INTO OMIT STORAGE
       NOMIT = JMITHR
       GO TO 390
C
C...     IMPLIED RETAIN - SET UP END POINT NUMBER OF PATTERN AS
C...     END OF 'RETAIN' SEQUENCE
  380  NTAIN1 = JENDPT
C
C...     SEE IF POINT NUMBERS FOR OPERATIONS REFERENCED TO
C...     ORIGINAL DEFINITION ORDER
  390       IF(IREFLG.NE.0) GO TO 392
C
C...     NO - SEE IF OUTPUT TO BE INVERSED, WITH OR WITHOUT ZIGZAG
            IF(INVERS.LE.0) GO TO 394
C...     NO - SEE IF OUTPUT IS IN ZIGZAG ORDER
            IF(IZGZAG.NE.0) GO TO 450
C...     NO - OUTPUT ORDER AGREES WITH ORIGINAL DEFINITION...
C
C...     COMPUTE STARTING COORDINATE PICK-UP INDEX FROM POINT NUMBER
  392  ICOORD = 3*NEXTPT - 1
       GO TO 398
C
C...     OUTPUT ORDER IS INVERTED - IS IT ALSO IN ZIGZAG
  394       IF(IZGZAG.NE.0) GO TO 450
C...     NO - COMPUTE STARTING COORDINATE PICK-UP INDEX FROM
C...     INVERTED POINT NUMBER
       ICOORD = 3*(NUMPTS+1-NEXTPT) - 1
C
C...     COMPUTE COORDINATE PICK-UP INCREMENT FROM POINT NO. INCREMENT
  398  INCORD = 3*INCOUT
C...     CLEAR FLAG TO INDICATE OMIT/RETAIN SEQUENCE HAS BEEN STARTED
       NTAIN2 = 0
C
C...     TEST FOR END OF IMMEDIATE SEQUENCE OF POINTS BEING OUTPUT
  400       IF((NEXTPT-NTAIN1)*INCRPT)  410, 410, 480
C
C...     NO - SEE WHETHER OR NOT PATTERN HAS BEEN READ FROM FILE YET
  410       IF(IDFSTO(79).NE.0) GO TO 412
C...     NO - LOCATE PATTERN DEFINITION ON LARGE SURFACE FILE
       CALL ASERCH(SRFTAP,IDFSTO(80),IOFLAG)
C...     TEST FOR ERROR IN FILE SEARCH OPERATION
            IF(IOFLAG.GE.0) GO TO 2050
C...     READ IN PATTERN DEFINITION
       CALL ATAPRD(SRFTAP,IOFLAG,JTEMP1,3,JPROTP(40),3,PROTP(42),2
     1, DEFTAB(2),0)
C...     TEST FOR ERROR WHEN READING IN PATTERN
            IF(IOFLAG.GE.0) GO TO 2060
C...     SET FLAG TO INDICATE THAT THIS RECORD IS IN CORE
       IDFSTO(79) = 1
C
C...     PUT NEXT POINT TO BE OUTPUT INTO DEFSTO
  412  IDFSTO(1) = 1
       DEFSTO(4) = DEFTAB(ICOORD)
       DEFSTO(5) = DEFTAB(ICOORD+1)
       DEFSTO(6) = DEFTAB(ICOORD+2)
C...     TEST FOR TRANSFORMATION OF OUTPUT
            IF(ITRFLG.EQ.0) GO TO 415
C...     YES - DO IT
       CALL ATRFRM
C
C...     TEST FOR ENTRY FROM PREVIOUS 'AVOID' AT THIS POINT
  415       IF(VOIDLS.EQ.0) GO TO 430
C
C...     YES - OUTPUT POINT COORDINATES AT PREVIOUS 'AVOID'
C...     HEIGHT INCREMENT
  420  PROTP(5) = DEFSTO(4)
       PROTP(6) = DEFSTO(5)
       PROTP(7) = DEFSTO(6) + VOIDLS
       CALL ARITAP
C...     OUTPUT A 'CYCLE/ON' RECORD
       JPROTP(2) = 2
       PROTP(2) = CYCTYP
       PROTP(3) = CYCLON
       CALL ARITAP
C...     RESTORE 'GOTO/' RECORD DATA
       JPROTP(2) = 6
       PROTP(2) = GOTYPE
       PROTP(3) = PATNAM
C...     CLEAR FLAG INDICATING AN 'AVOID' TO BE TERMINATED
       VOIDLS = 0.0D0
C
C...     OUTPUT THIS POINT
  430  PROTP(5) = DEFSTO(4)
       PROTP(6) = DEFSTO(5)
       PROTP(7) = DEFSTO(6)
       CALL ARITAP
C...     INCREMENT POINT NUMBER AND COORDINATE PICK-UP INDEX
       NEXTPT = NEXTPT + INCRPT
       ICOORD = ICOORD + INCORD
C
C...     TEST FOR AN 'AVOID' OPERATION
            IF(NVOID1.EQ.0) GO TO 400
C
C...     YES - DETERMINE WHETHER FIRST (OR ONLY) POINT TO BE 'AVOIDED'
C...     IS, IS BEYOND, OR IS BEFORE POINT JUST OUTPUT
            IF((NEXTPT-INCRPT-NVOID1)*INCRPT)  400, 460, 450
C
C...     POINT NUMBER FOR OPERATION HAS ALREADY BEEN PASSED - ERROR
  450  JSUBER = 838
       GO TO 2000
C
C...     POINT JUST OUTPUT REQUIRES AN 'AVOID' OPERATION - OUTPUT
C...     A 'CYCLE/NOMORE' RECORD
  460  JPROTP(2) = 2
       PROTP(2) = CYCTYP
       PROTP(3) = CYCOFF
       CALL ARITAP
C...     RESTORE 'GOTO/' RECORD DATA
       JPROTP(2) = 6
       PROTP(2) = GOTYPE
       PROTP(3) = PATNAM
C...     OUTPUT POINT AGAIN AT 'AVOID' HEIGHT INCREMENT
       PROTP(7) = PROTP(7) + AVOIDZ
       CALL ARITAP
C...     SET FLAG TO INDICATE 'AVOID' CONDITION TO BE TERMINATED
       VOIDLS = AVOIDZ
C
C...     TEST FOR AN AVOID 'THRU' SEQUENCE
            IF(NVOID2.LE.0) GO TO 470
C...     YES - IS POINT JUST OUTPUT LAST ONE OF SEQUENCE
            IF(NEXTPT-INCRPT.EQ.NVOID2) GO TO 470
C...     NO - INCREMENT INITIAL POINT NUMBER OF 'AVOID' SEQUENCE
       NVOID1 = NVOID1 + INCRPT
       GO TO 400
C
C...     ONLY ONE POINT OR END OF SEQUENCE FOR 'AVOID' OPERATION -
C...     CLEAR FLAG, AND GO TO TEST FOR FURTHER MODIFIER DATA
  470  NVOID1 = 0
       GO TO 500
C
C...     END OF PRESENT SEQUENCE OF POINTS FOR OUTPUT - TEST FOR
C...     AN 'OMIT' POINT OR SEQUENCE FOLLOWING
  480       IF(NOMIT.EQ.0) GO TO 495
C...     YES - SET NEXT OUTPUT POINT INDEX TO FIRST POINT BEYOND
C...     OMITTED POINT OR SEQUENCE
       NEXTPT = NOMIT + INCRPT
C
C...     CLEAR 'OMIT' SEQUENCE STORAGES
  485  JMITHR = 0
  490  NOMIT = 0
C
C...     CLEAR OUTPUT LIMIT STORAGE
  495  NTAIN1 = 0
C
C...     TEST FOR FURTHER MODIFIER DATA FOR OUTPUT OF PATTERN
  500       IF(NEXTYP-1) 510, 515, 110
C...     NEXT PARAMETER IS SCALAR - SEE IF OPERATION OF SAME TYPE
C...     ALREADY IN HOLD
  515       IF(NOPFLG(LOPTYP).EQ.0) GO TO 220
C...     YES - SEE IF IT IS AVOID OPERATION
            IF(LOPTYP.NE.3) GO TO 300
C
C...     NO MORE MODIFIER DATA, OR TWO AVOIDS PENDING -
C...     OMIT/RETAIN LIST NOT YET COMPLETED
  510       IF(NTAIN1.NE.0) GO TO 400
C...     NO - TEST FOR END OF PATTERN
            IF((NEXTPT-JENDPT)*INCRPT)  520, 520, 550
C...     NOT END OF PATTERN YET - IF EXPLICIT 'RETAIN' LIST GIVEN,
C...     CONSIDER PATTERN FINISHED - OTHERWISE, SET UP 'RETAIN'
C...     SEQUENCE TO COMPLETE PATTERN
  520       IF(LISTYP.NE.1) GO TO 380
C
C...     OUTPUT OF PATTERN COMPLETED - MAKE SURE NO 'AVOID' POINTS
C...     WERE SPECIFIED BEYOND THE RANGE OF ANY 'RETAIN'
  550       IF(NVOID1.NE.0) GO TO 450
C
 1000  RETURN
C
C...     ERROR FOUND - IF DEBUG FLAG ON, PRINT OUT WORKING
C...     STORAGES BEFORE EXITING
 2000       IF(KDBUG.EQ.0) GO TO 1000
 2010  WRITE (6     ,2020) FNUM,AVOIDZ,VOIDLS,(IPTDAT(JK),JK=1,15)
     1 ,(IPTFLG(JK),JK=1,15)
 2020  FORMAT (11H0    FNUM =,F12.4,11H,  AVOIDZ =,F12.4,
     1 11H,  VOIDLS =,F12.4/11H0    IPTDAT,4X,5Z12,2(/15X,5Z12)/
     2 11H0    IPTFLG,4X,5Z12,2(/15X,5Z12)//)
       GO TO 1000
C
C...     ERROR IN SEARCH OF LARGE SURFACE FILE FOR PATTERN
 2050  JSUBER = 840
       GO TO 2000
C...     ERROR IN READING OF PATTERN FROM LARGE SURFACE FILE
 2060  JSUBER = 841
       GO TO 2000
C
       END

