      SUBROUTINE FP1P3
C...  *** THIS PROGRAM CREATED FOR VERSION 4, MODIFICATION 0 ***
C********************************************************************
C
C...    FP1P3 IS CALLED FROM VTLAXS WHEN A WCORN HAS BEEN
C...    ENCOUNTERED, TO PROCESS MOTION RECORDS THROUGH
C...    CORNER TRANSITION, INSPECT THEM FOR PERMISSIBLE
C...    WCORN CONDITIONS, AND SET UP CORNERING PARAMETERS
C...    FOR LATER USE IN COMPU2.
      IMPLICIT REAL*8 (A-H,O-Z)
C***********************************************************************
C***********************************************************************
       DOUBLE PRECISION   APOSTP,ATAPTB
       REAL*8 PROTAP,CANTAP,CLTAPE,POCTAP,PLOTAP,SRFTAP,TAPES1,TAPES2,
     1 TAPES3,TAPES4,PPNAME
       INTEGER PUNTAP
       COMMON/A0CON/K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11,K12,IBLANK
       COMMON/ATAPTB/PROTAP,CANTAP,CLTAPE,POCTAP,PLOTAP,SRFTAP,
     1 TAPES1,TAPES2,TAPES3,TAPES4,INTAPE,IOUTAP,PUNTAP
       COMMON/ASISTM/IPTNLY,ITRCUT,IWAVEN,KFLAG1,LTVMIT,NCLREC,NOPOST,
     1 NOPLOT,NUMPST,NUMPTR,ICLPRT,INDEXX,IPLOTR,KFLAGS(9)
       COMMON/APOSTP/PPNAME(20)
      COMMON/A3FXD1/AMATI1(4,4),AMATI2(4,4),AMATI3(4,4),AMATRX(3,4),
     1AMTR(36),AN1,AN2,ANAME,AX,AX0,AXVEC(3),AY,AY0,CNTM(36),CNTMAT(3,4)
     2,CONT(3),COUNT(3),CSEQNO(1),DELX,DELY,DX,DY,F0,ORIGIN(3),PARRAY
     3(20),PARTNO(12),PNT(3),PPRINT(12),PPT(6),PT0(3),PTT(6),PTU(3),
     4SEQNO(1),SUB(5),SUB4(6),TAPSTO(250),TITL(8),TL,TMATRX(3,4),
     5TNTM(36),TOOLNG,TRAMAT(3,4),VEC(3),WORD,X0,X1,X2,X3,XNEW,
     6Y0,Y1,Y2,Y3,YNEW
       DIMENSION  IRR(1),ARR(1)
       EQUIVALENCE(IARROW,IRR(1))
       EQUIVALENCE(AMATI1(1,1),ARR(1))
      REAL*8 MOTION
      COMMON/A3FXD2/MOTION(8)
      COMMON/A3FXI1/IARROW,I1,I2,ICLWAS,ICOPY,IDPLOT,IDPLSQ,IFIRST,
     1IGODLT,INDN,INSTR1,INSTR2,IND2TB(160),INDOFF,INDTAB(160),
     2INDXNO(3),IPERSP,IPL5AX,IPLOTI,IPLOTX,IPLWAS,IPX,IPY,IRECNI(3),
     3IRECNO,IRECTP,IRET,IRETVR,ISUBSC,ISWMAC,ISWNOC,IT,
     4ITHPNT,ITRAFL,ITRUNC,JARROW,JCLPRT,JCOPY,JPTSW,
     5JSW,JTYPSW,JVECTR,KCLPRT,KCOPY,MAXCOP,MULTAX,
     6NCAMRA,NK,NNTAB,NRECNO,NTAB,NUMWDS,NURCNO,NX,NX0,
     7NX1,NX2,NX4,NX5,NXP,NY,NY0,NY1,NY2,NY4,NY5,NYP,
     8IFALMS,IWARMS,INTSEQ
       REAL*8 NUCLTP
      EQUIVALENCE   (NUCLTP,TAPES2)
       EQUIVALENCE(ITRCUT,LCLPRT)
      REAL*8 A5AXIS
      COMMON/A5AXIS/
     1ZP1   ,YP1   ,XP1   ,ZP2   ,YP2   ,XP2   ,ZP3   ,YP3   ,
     2XP3   ,ZP1B  ,YP1B  ,XP1B  ,ZP1F  ,YP1F  ,XP1F  ,ZP3F  ,
     3YP3F  ,XP3F  ,ZP3B  ,YP3B  ,XP3B  ,ZLM   ,YLM   ,XLM   ,
     4ZTA1  ,YTA1  ,XTA1  ,ZTA2  ,YTA2  ,XTA2  ,ZTA3  ,YTA3  ,
     5XTA3  ,ZDTA  ,YDTA  ,XDTA  ,ZTA2I ,YTA2I ,XTA2I ,ZCV1  ,
     6YCV1  ,XCV1  ,ZCV3  ,YCV3  ,XCV3  ,ZCV1P ,YCV1P ,XCV1P ,
     7ZCV3P ,YCV3P ,XCV3P ,ZCV1I ,YCV1I ,XCV1I ,ZCV3I ,YCV3I ,
     8XCV3I ,ZDCV  ,YDCV  ,XDCV  ,ZCP   ,YCP   ,XCP   ,ZCP1B ,
     9YCP1B ,XCP1B ,ZCP1F ,YCP1F ,XCP1F ,ZCP3B ,YCP3B ,XCP3B
      REAL*8 B5AXIS
      COMMON/B5AXIS/
     1ZCP3F ,YCP3F ,XCP3F ,ZDP   ,YDP   ,XDP   ,ZD01  ,YD01  ,
     2XD01  ,ZD03  ,YD03  ,XD03  ,ZPL1  ,YPL1  ,XPL1  ,ZPL3  ,
     3YPL3  ,XPL3  ,WCORN5,WCORN7,WCORN8,WTLXS6,TLNTH1,TLNTH2,
     4AI    ,ALPHA ,CSIGMA,CPHI  ,SH    ,CLAMDA,S1    ,S2    ,
     5S3    ,TS    ,GAMMA ,BETA  ,DELTA ,WCORN9,THETA ,S     ,
     6ZP2I  ,YP2I  ,XP2I
      REAL*4 A5FXIS
      COMMON/A5FXIS/
     1IP1   ,IP1I  ,IP2   ,IP2I  ,IP3   ,IP3I  ,IP1B  ,IP1BI ,
     2IP1F  ,IP1FI ,IP3F  ,IP3FI ,IP3B  ,IP3BI ,ILM   ,ILMI  ,IPS   ,
     3ICORN1,ICORN9,IFLAG ,IFLAG1,ICM   ,ICMI  ,II    ,IIII  ,IFG   ,
     4ITCONT,ITC1
      REAL*8 C5AXIS
      COMMON/C5AXIS/
     1Z1                  ,Z2                  ,ZSTART,YSTART,
     2XSTART,ZD    ,YD    ,XD    ,ZCV   ,YCV   ,XCV   ,ZDO   ,
     3YDO   ,XDO   ,ZCC   ,YCC   ,XCC   ,ZUN   ,YUN   ,XUN   ,
     4ZTR   ,YTR   ,XTR   ,ZTA   ,YTA   ,XTA   ,Z     ,STANG ,
     5ENDANG,DANG  ,CANG  ,DLNGTH,TLNGTH,CUTTER,TEST  ,CRADUS
      REAL*4 C5FXIS
      COMMON/C5FXIS/
     1IS    ,IR    ,IL    ,IE    ,JSUBER,IABOVE
C********************************************************************
C...
C...
C...    INITIALIZE FP1P3 VARIABLES
C...    P1=CLTAPE POINT 2 PRIOR TO WCORN COMMAND
C...    P2=CLTAPE POINT JUST PRIOR TO WCORN COMMAND (CORNER POINT)
C...    P3=CLTAPE POINT JUST AFTER WCORN COMMAND
C...    IP1,2,3=TAPSTO INDEX FOR P1,P2,P3
C...    IP1,2,3I= IRECNO FOR P1,P2,P3
      IFG   = 1
      IPS   = 1
      ITCONT= 0
      ITC1  = 0
      XP1B  = XP1
      YP1B  = YP1
      ZP1B  = ZP1
      XP1F  = XP2
      YP1F  = YP2
      ZP1F  = ZP2
      XP3B  = XP3
      YP3B  = YP3
      ZP3B  = ZP3
      XP3F  = XP2
      YP3F  = YP2
      ZP3F  = ZP2
      IP1B  = IP1
      IP1F  = IP2
      IP3B  = IP3
      IP3F  = IP2
      IP1BI = IP1I
      IP1FI = IP2I
      IP3BI = IP3I
      IP3FI = IP2I
C...    GET INCOMING AND OUTGOING CUT VECTORS
   10 XCV1  = XP2 - XP1
      YCV1  = YP2 - YP1
      ZCV1  = ZP2 - ZP1
      XCV3  = XP3 - XP2
      YCV3  = YP3 - YP2
      ZCV3  = ZP3 - ZP2
C...    NORMALIZE THEM
   15 CALL AVNORM(ZCV1,ZCV1,IER)
      IF(IER) 16,17,16
   16 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 1200
   17 CONTINUE
      CALL AVNORM(ZCV3,ZCV3,IER)
      IF(IER) 18,19,18
   18 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 1200
   19 CONTINUE
C...    CROSS INCOMING VECTOR WITH VERTICAL TLAXIS VECTOR
C...    AND NORMALIZE
      CALL AVCROS(ZUN,ZCV1,ZTR)
      CALL AVNORM(ZTR,ZTR,IER)
      IF(IER) 21,22,21
   21 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 1200
   22 CONTINUE
      CALL AVDOT (ZTR,ZCV3,TEST)
      IF(TEST-.01) 20, 20, 30
   20 JSUBER = 25
C...    ERROR 25 - THE CORNER TO BE CLEANED OUT IS GREATER
C...               THAN 180 DEGREES.
      GOTO  1200
   30 XLM = -XCV1
      YLM = -YCV1
      ZLM = -ZCV1
      CALL AVDOT (ZLM,ZCV3,TEST)
      ALPHA = .5*ACOS(TEST)
      XTR =-ZUN*XTR
      YTR =-ZUN*YTR
      ZTR =-ZUN*ZTR
      XDO = 0.0
      YDO = 0.0
      ZDO = 1.0
C...    WCORN5=INCOMING ANGLE
      CCORN =DCOS(WCORN5)
      SCORN =DSIN(WCORN5)
      XTA1 =             SCORN*XTR
      YTA1 =             SCORN*YTR
      ZTA1 = CCORN
C       TR = DO X CV3
      CALL AVCROS(ZCV3,ZDO,ZTR)
      CALL AVNORM(ZTR,ZTR,IER)
      IF(IER) 31,32,31
   31 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 1200
   32 CONTINUE
C...    WCORN7=OUTGOING ANGLE
      CCORN =DCOS(WCORN7)
      SCORN =DSIN(WCORN7)
      XTA3 =             SCORN*XTR
      YTA3 =             SCORN*YTR
      ZTA3 = CCORN
C      PL1 =  CV1 X TA1
      CALL AVCROS(ZTA1,ZCV1,ZPL1)
      CALL AVNORM(ZPL1,ZPL1,IER)
      IF(IER) 33,34,33
   33 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 1200
   34 CONTINUE
C      PL3 = CV3 X TA3
      CALL AVCROS(ZTA3,ZCV3,ZPL3)
      CALL AVNORM(ZPL3,ZPL3,IER)
      IF(IER) 35,36,35
   35 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 1200
   36 CONTINUE
C      TA2 = PL1 X PL3
      CALL AVCROS(ZPL3,ZPL1,ZTA2)
      CALL AVNORM(ZTA2,ZTA2,IER)
      IF(IER) 37,38,37
   37 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 1200
   38 CONTINUE
      IF(ZTA2)    40, 50, 50
C...    TA2 = CORNER TLAXIS VECTOR. MAKE POSZ.
   40 XTA2 = -XTA2
      YTA2 = -YTA2
      ZTA2 = -ZTA2
 50    CALL AVDOT (ZTA2,ZDO,CSIGMA)
C...    WCORN8=FLANGE HEIGHT
      SH = WCORN8/CSIGMA
      IF(IFG - 1)   60, 60, 220
C...    CHECK LEAN OF EXIT STIFFENER FOR BEGIN POINT CALC
   60 IFG = 2
      XLM = -XCV1
      YLM = -YCV1
      ZLM = -ZCV1
      CALL AVDOT (ZLM,ZTA2,CPHI)
      IF(CPHI-.002 ) 70, 70, 90
   70 IF(IPS)     85, 80, 85
   80 IS1 = 1
      GOTO  1130
   85 IS1 = 1
      IPS = 0
      GOTO 220
C...    EXIT STIFFENER LEANS TOWARD ENTRANCE PATH.
C...    FIND STARTING POSITION FOR CORNER CLEANOUT
   90 S1 = SH*CPHI
      IS1 = 0
      CALL AVDOT (ZTA1,ZCV3,CLAMDA)
      XCV3P = XCV3 - CLAMDA*XTA1
      YCV3P = YCV3 - CLAMDA*YTA1
      ZCV3P = ZCV3 - CLAMDA*ZTA1
      CALL AVNORM(ZCV3P,ZCV3P,IER)
      IF(IER) 91,92,91
   91 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 1200
   92 CONTINUE
      CALL AVDOT (ZCV3P,ZLM,TEST)
  100 THETA = .5*ACOS(TEST)
  120 S2 = CUTTER*DCOS(THETA)/DSIN(THETA)
      S3 = CUTTER*DCOS(ALPHA)/DSIN(ALPHA)
      S  = S1 + S2 - S3 + .1
      TEST =DSQRT((XP2-XP1)**2+(YP2-YP1)**2+(ZP2-ZP1)**2)
      TS = S - TEST
      IF(TS)      130, 200, 140
  130 IF(TS+.1)   170, 200, 200
  140 IFG = 1
      IPS = 1
      ITC1 = ITC1 + 1
      IF(ITC1-25)   370, 160,160
  160 JSUBER = 26
C...    ERROR 26 - A SATISFACTORY STARTING POSITION FOR THE
C...               CORNER CLEANOUT COULD NOT BE FOUND.
      GOTO 1200
  170 IFG = 1
      IPS = 1
      ITC1 = ITC1 + 1
      IF(ITC1-25)     560,190,190
  190 JSUBER = 26
C...    ERROR 26 - A SATISFACTORY STARTING POSITION FOR THE
C...               CORNER CLEANOUT COULD NOT BE FOUND.
      GOTO  1200
C...    BEGIN OR END POINT FOUND.
  200 IF(IPS)   210,1130,210
  210 IPS = 0
      ITC1 = 0
C...    CHECK LEAN OF ENTRANCE STIFFENER FOR ENDING POINT CALC
  220 ITCONT = ITCONT + 1
      IF(ITCONT-50)     240,230,230
  230 JSUBER = 27
C...    ERROR 27 - A SATISFACTORY STARTING AND ENDING POSITION
C...               FOR THE CORNER CLEANOUT COULD NOT BE FOUND.
      GOTO  1200
  240 IFG = 1
      CALL AVDOT (ZCV3 ,ZTA2,CPHI)
      IF(CPHI-.002 ) 242,242,250
  242 IS3 = 1
      GOTO 1130
C...    ENTRANCE STIFFENER LEANS TOWARD EXIT PATH.
C...    FIND ENDING POSITION FOR CORNER CLEANOUT
  250 S1 = SH*CPHI
      IS3 = 0
      CALL AVDOT (ZTA3 ,ZCV1,CLAMDA)
      XCV1P =-XCV1 + CLAMDA*XTA3
      YCV1P =-YCV1 + CLAMDA*YTA3
      ZCV1P =-ZCV1 + CLAMDA*ZTA3
      CALL AVNORM(ZCV1P,ZCV1P,IER)
      IF(IER) 251,252,251
  251 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 1200
  252 CONTINUE
      CALL AVDOT (ZCV1P,ZCV3,TEST)
      THETA = .5*ACOS(TEST)
  270 S2 = CUTTER*DCOS(THETA)/DSIN(THETA)
      S3 = CUTTER*DCOS(ALPHA)/DSIN(ALPHA)
      S = S1 + S2 - S3 + .1
      TEST =DSQRT((XP2-XP3)**2+(YP2-YP3)**2+(ZP2-ZP3)**2)
      TS = S - TEST
      IF(TS)    280, 290, 310
  280 IF(TS+.1) 340, 290, 290
  290 IF(IPS)   300,1130, 300
  300 IPS = 0
      ITC1 = 0
      GOTO  60
  310 IPS = 1
      IFG = 2
      ITC1 = ITC1 + 1
      ITCONT = ITCONT - 1
      IF(ITC1-25)    750, 330, 330
  330 JSUBER = 28
C...    ERROR 28 - A SATISFACTORY ENDING POSITION FOR THE
C...               CORNER CLEANOUT COULD NOT BE FOUND.
      GOTO  1200
  340 IPS = 1
      IFG = 2
      ITC1 = ITC1+1
      ITCONT = ITCONT - 1
      IF(ITC1-25)    940, 360, 360
  360 JSUBER = 28
C...    ERROR 28 - A SATISFACTORY ENDING POSITION FOR THE
C...               CORNER CLEANOUT COULD NOT BE FOUND.
      GOTO  1200
C...
C...
C...    TEST FOR SUFFICIENT MOVE BETWEEN VTLAXS/ON AND
C...    CORNER TO ACCOMPLISH CLEANOUT
C...    FROM 140   (TS .GT. 0). ALTER AND REITERATE.
  370 XCP1B = XP1-XP1B
      YCP1B = YP1-YP1B
      ZCP1B = ZP1-ZP1B
      TEST = TEST +DSQRT((XCP1B)**2+(YCP1B)**2+(ZCP1B)**2)
      TS = S - TEST
      IF(TS)   380, 390, 410
  380 IF(TS+.1)   400, 390, 390
  390 XP1 = XP1B
      YP1 = YP1B
      ZP1 = ZP1B
      GOTO 10
  400 CALL AVNORM(ZCP1B,ZCP1B,IER)
      IF(IER) 401,402,401
  401 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 1200
  402 CONTINUE
      TS = TS + .05
      XP1 = XP1B - TS*XCP1B
      YP1 = YP1B - TS*YCP1B
      ZP1 = ZP1B - TS*ZCP1B
      GOTO 10
C...    FROM 370   (TS .LT. -.1) LOOK AT PRIOR CLTAPE POINT
  410 TLNTH1 =TLNTH1-DSQRT((XP1F-XP1B)**2+(YP1F-YP1B)**2+(ZP1F-ZP1B)**2)
      XP1 = XP1B
      YP1 = YP1B
      ZP1 = ZP1B
      IL  = IP1B
      XP1F = XP1B
      YP1F = YP1B
      ZP1F = ZP1B
      IP1F = IP1B
      IP1FI = IP1BI
      IF(IP1BI-6)    420, 420, 440
  420 IL = IL - 1
      IF(IS-IL)      440, 440, 430
  430 JSUBER = 29
C...    ERROR 29 - INSUFFICIENT MOTION BETWEEN THE VTLAXS/ON
C...               AND THE WCORN TO COMPLETE THE CORNER
C...               CLEANOUT PROCESS.
      GOTO  1200
C...    NOT ENOUGH MOVE. BACK CLTAPE ONE RECORD AT A TIME,
C...    CHECKING FOR SUFFICIENT MOVEMENT.
 440   CALL ASERCH(CLTAPE,IL,IRETVR)
      IF(IRETVR)    460, 450, 450
  450 JSUBER = 38
C...    ERROR 38  - MACHINE ERROR.
      GOTO   1200
 460  CALL TAPERD(CLTAPE,IRETVR,NUMWDS,4,IRECNO,1,INSTR1,1,INSTR2,1,TAPS
     1TO,0)
      CALL ASTORE(TAPSTO(1),8,I1,4)
      CALL ASTORE(TAPSTO(2),8,I2,4)
      IF(IRETVR)    480, 470, 470
  470 JSUBER = 35
C...    ERROR 35  - MACHINE ERROR.
      GOTO   1200
480   IF(IP1BI-3) 510,510,490
  490 IP1BI = IP1BI - 6
  500 XP1B = TAPSTO(IP1BI)
      YP1B = TAPSTO(IP1BI+1)
      ZP1B = TAPSTO(IP1BI+2)
      GOTO 370
  510 IF(INSTR1-5000)    420, 520, 420
C...    MOTION RECORD
  520 I = IABS(INSTR2)
      IF(I - 6)   530,540,420
  530 GOTO ( 420,420,540,550,540),I
C...    FROM, GOTO
  540 IP1B = IRECNO
      IP1BI = NUMWDS - 5
      GOTO 500
C...    GODLTA
  550 IP1B = IRECNO
      IP1BI = 3
      XP1B  = XP1B - TAPSTO(3)
      YP1B  = YP1B - TAPSTO(4)
      ZP1B  = ZP1B - TAPSTO(5)
      GOTO 370
C...    FROM 170 (TS .LT. 0). ALTER AND REITERATE.
  560 XCP1F = XP1-XP1F
      YCP1F = YP1-YP1F
      ZCP1F = ZP1-ZP1F
      TEST = TEST-DSQRT((XCP1F)**2+(YCP1F)**2+(ZCP1F)**2)
      TS = S - TEST
      IF(TS+.1)    600, 580, 570
  570 IF(TS)       580, 580, 590
  580 XP1 = XP1F
      YP1 = YP1F
      ZP1 = ZP1F
      GOTO 591
  590 CALL AVNORM(ZCP1F,ZCP1F,IER)
      IF(IER) 595,596,595
  595 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 1200
  596 CONTINUE
      TS = TS + .05
      XP1 = XP1F + TS*XCP1F
      YP1 = YP1F + TS*YCP1F
      ZP1 = ZP1F + TS*ZCP1F
  591 IF(DABS(XP1-XP2)-.0001) 592, 592, 10
  592 IF(DABS(YP1-YP2)-.0001) 593, 593, 10
  593 IF(DABS(ZP1-ZP2)-.0001) 594, 594, 10
  594 XCV1 = XP2-XP1B
      YCV1 = YP2-YP1B
      ZCV1 = ZP2-ZP1B
      GOTO 15
C...    FROM 560 (TS .LT. -.1) LOOK AT CLTAPE POINTS
  600 TLNTH1=TLNTH1+DSQRT((XP1F-XP1B)**2+(YP1F-YP1B)**2+(ZP1F-ZP1B)**2)
      XP1 = XP1F
      YP1 = YP1F
      ZP1 = ZP1F
      IL = IP1F
      XP1B = XP1F
      YP1B = YP1F
      ZP1B = ZP1F
      IP1B = IP1F
      IP1BI = IP1FI
       CALL ASERCH(CLTAPE,IL,IRETVR)
      IF(IRETVR)   620, 610, 610
  610 JSUBER = 38
C...    ERROR 38  - MACHINE ERROR.
      GOTO   1200
 620  CALL TAPERD(CLTAPE,IRETVR,NUMWDS,4,IRECNO,1,INSTR1,1,INSTR2,1,TAPS
     1TO,0)
      CALL ASTORE(TAPSTO(1),8,I1,4)
      CALL ASTORE(TAPSTO(2),8,I2,4)
      IF(IRETVR)   640, 630, 630
  630 JSUBER = 35
C...    ERROR 35  - MACHINE ERROR.
      GOTO   1200
  640 IP1FI = IP1FI + 6
      IF(IP1FI-NUMWDS)    650, 660, 660
  650 XP1F = TAPSTO(IP1FI)
      YP1F = TAPSTO(IP1FI+1)
      ZP1F = TAPSTO(IP1FI+2)
      GOTO 560
  660 IL = IL + 1
      IF(IL-ICORN1)   680, 670, 670
  670 JSUBER = 29
C...    ERROR 29  - MACHINE ERROR.
      GOTO   1200
 680  CALL TAPERD(CLTAPE,IRETVR,NUMWDS,4,IRECNO,1,INSTR1,1,INSTR2,1,TAPS
     1TO,0)
      CALL ASTORE(TAPSTO(1),8,I1,4)
      CALL ASTORE(TAPSTO(2),8,I2,4)
      IF(IRETVR)      700, 690, 690
  690 JSUBER = 35
C...    ERROR 35  - MACHINE ERROR.
      GOTO    1200
  700 IF(INSTR1-5000)   660, 710, 660
  710 I= IABS(INSTR2)
      IF(I-6)     720, 730, 660
  720 GOTO( 660,660,730,740,730),I
  730 IP1F = IRECNO
      IP1FI=3
      GOTO 650
  740 IP1F = IRECNO
      IP1FI=3
      XP1F  = XP1F + TAPSTO(3)
      YP1F  = YP1F + TAPSTO(4)
      ZP1F  = ZP1F + TAPSTO(5)
      GOTO 560
C...    FROM 310 (TS .GT. 0)  ENDING POINT CALCS.  ALTER
C...    AND REITERATE
  750 XCP3B =  XP3 - XP3B
      YCP3B =  YP3 - YP3B
      ZCP3B =  ZP3 - ZP3B
      TEST = TEST +DSQRT((XCP3B)**2+(YCP3B)**2+(ZCP3B)**2)
      TS = S - TEST
      IF(TS)    760, 770, 790
  760 IF(TS+.1) 780, 770, 770
  770 XP3 = XP3B
      YP3 = YP3B
      ZP3 = ZP3B
      GOTO 10
  780 CALL AVNORM(ZCP3B,ZCP3B,IER)
      IF(IER) 781,782,781
  781 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 1200
  782 CONTINUE
      TS = TS + .05
      XP3 = XP3B - TS*XCP3B
      YP3 = YP3B - TS*YCP3B
      ZP3 = ZP3B - TS*ZCP3B
      GOTO 10
C...    FROM 750 (TS .GT. 0) LOOK AT CLTAPE POINTS AFTER WCORN
  790 TLNTH2=TLNTH2-DSQRT((XP3F-XP3B)**2+(YP3F-YP3B)**2+(ZP3F-ZP3B)**2)
      XP3 = XP3B
      YP3 = YP3B
      ZP3 = ZP3B
      XP3F = XP3B
      YP3F = YP3F
      ZP3F = ZP3F
      IP3F = IP3B
      IP3FI = IP3BI
      IL = IP3B
       CALL ASERCH(CLTAPE,IL,IRETVR)
      IF(IRETVR)    810, 800, 800
  800 JSUBER = 38
C...    ERROR 38  - MACHINE ERROR.
      GOTO    1200
 810  CALL TAPERD(CLTAPE,IRETVR,NUMWDS,4,IRECNO,1,INSTR1,1,INSTR2,1,TAPS
     1TO,0)
      CALL ASTORE(TAPSTO(1),8,I1,4)
      CALL ASTORE(TAPSTO(2),8,I2,4)
      IF(IRETVR)    830, 820, 820
  820 JSUBER = 35
C...    ERROR 35  - MACHINE ERROR.
      GOTO   1200
  830 IP3BI = IP3BI + 6
      IF(IP3BI-NUMWDS)   840, 850, 850
  840 XP3B = TAPSTO(IP3BI)
      YP3B = TAPSTO(IP3BI+1)
      ZP3B = TAPSTO(IP3BI+2)
      GOTO 750
  850 IL = IL + 1
      IF(IL-IE)    870, 860, 860
  860 JSUBER = 30
C...    ERROR 30 - INSUFFICIENT MOTION BETWEEN THE WCORN
C...               COMMAND AND THE VTLAXS/OFF TO COMPLETE
C...               THE CORNER CLEANOUT PROCESS.
      GOTO   1200
 870  CALL TAPERD(CLTAPE,IRETVR,NUMWDS,4,IRECNO,1,INSTR1,1,INSTR2,1,TAPS
     1TO,0)
      CALL ASTORE(TAPSTO(1),8,I1,4)
      CALL ASTORE(TAPSTO(2),8,I2,4)
      IF(IRETVR)  890,880,880
  880 JSUBER = 35
C...    ERROR 35  - MACHINE ERROR.
      GOTO   1200
  890 IF(INSTR1 -5000)   850, 900, 850
  900 I= IABS(INSTR2)
      IF(I-6)   910, 920, 850
  910 GOTO( 850,850,920,930,920),I
 920   IP3B=IRECNO
      IP3BI=3
      GOTO 840
  930 IP3B = IRECNO
      IP3BI=3
      XP3B = XP3B + TAPSTO(3)
      YP3B = YP3B + TAPSTO(4)
      ZP3B = ZP3B + TAPSTO(5)
      GOTO  750
C...    FROM 340 (TS .LT. -1) ALTER AND REITERATE
  940 XCP3F = XP3 - XP3F
      YCP3F = YP3 - YP3F
      ZCP3F = ZP3 - ZP3F
      TEST = TEST-DSQRT((XCP3F)**2+(YCP3F)**2+(ZCP3F)**2)
      TS = S - TEST
      IF(TS+.1)    980, 960, 950
  950 IF(TS)       960, 960, 970
  960 XP3 = XP3F
      YP3 = YP3F
      ZP3 = ZP3F
      GOTO 971
  970 CALL AVNORM(ZCP3F,ZCP3F,IER)
      IF(IER) 975,976,975
  975 JSUBER=37
C...    ERROR 37  - MACHINE ERROR.
      GO TO 1200
  976 CONTINUE
      TS = TS + .05
      XP3 = XP3F + TS*XCP3F
      YP3 = YP3F + TS*YCP3F
      ZP3 = ZP3F + TS*ZCP3F
  971 IF(DABS(XP3-XP2)-.0001) 972, 972, 10
  972 IF(DABS(YP3-YP2)-.0001) 973, 973, 10
  973 IF(DABS(ZP3-ZP2)-.0001) 974, 974, 10
  974 XCV3 = XP3B - XP2
      YCV3 = YP3B - YP2
      ZCV3 = ZP3B - ZP2
      GOTO  15
C...    FROM 940 (TS .LT. -.1) LOOK AT CLTAPE POINTS
  980 TLNTH2=TLNTH2+DSQRT((XP3F-XP3B)**2+(YP3F-YP3B)**2+(ZP3F-ZP3B)**2)
      XP3 = XP3F
      YP3 = YP3F
      ZP3 = ZP3F
      XP3B = XP3F
      YP3B = YP3F
      ZP3B = ZP3F
      IP3B = IP3F
      IP3BI = IP3FI
      IL = IP3F
      IF(IP3FI-3)990,990,1010
  990 IL = IL - 1
      IF(IL-ICORN1)   1000, 1000,1010
 1000 JSUBER = 29
C...    ERROR 29  - MACHINE ERROR.
      GOTO   1200
 1010  CALL ASERCH(CLTAPE,IL,IRETVR)
      IF(IRETVR)      1030,1020,1020
 1020 JSUBER = 38
C...    ERROR 38  - MACHINE ERROR.
      GOTO   1200
 1030 CALL TAPERD(CLTAPE,IRETVR,NUMWDS,4,IRECNO,1,INSTR1,1,INSTR2,1,TAPS
     1TO,0)
      CALL ASTORE(TAPSTO(1),8,I1,4)
      CALL ASTORE(TAPSTO(2),8,I2,4)
      IF(IRETVR)      1050,1040,1040
 1040 JSUBER = 35
C...    ERROR 35  - MACHINE ERROR.
      GOTO   1200
1050  IF(IP3FI-3)1080,1080,1060
 1060 IP3FI = IP3FI - 6
 1070 XP3F  = TAPSTO(IP3FI)
      YP3F  = TAPSTO(IP3FI+1)
      ZP3F  = TAPSTO(IP3FI+2)
      GOTO  940
 1080 IF(INSTR1 -5000)    990,1090,990
 1090 I= IABS(INSTR2)
      IF(I-6)    1100,1110,990
 1100 GOTO( 990,990,1110,1120,1110),I
 1110 IP3F = IRECNO
      IP3FI = NUMWDS - 5
      GOTO 1070
 1120  IP3F=IRECNO
      IP3FI=3
      XP3F = XP3F - TAPSTO(3)
      YP3F = YP3F - TAPSTO(4)
      ZP3F = ZP3F - TAPSTO(5)
      GOTO  940
C...
C...
C...    BEGIN AND END POINTS FOUND.  RESET COMMON VARIABLES
 1130 IF(IS1)   1140, 1160, 1140
 1140 IF(IP1F-IP2)  1145, 1150, 1145
 1145 JSUBER = 27
C...    ERROR 27  - MACHINE ERROR.
      GOTO 1200
 1150 IF(IP1FI-IP2I)  1145, 1155, 1145
 1155 XP1 = XP1F
      YP1 = YP1F
      ZP1 = ZP1F
      IP1 = IP1F
      IP1I = IP1FI
 1160 IF(IS3)       1165, 1190, 1165
 1165 IF(IP3F-IP2)  1170, 1175, 1170
C...    ERROR 27  - MACHINE ERROR.
 1170 JSUBER = 27
      GOTO  1200
 1175 IF(IP3FI-IP2I)  1170, 1180, 1170
 1180 XP3 = XP3F
      YP3 = YP3F
      ZP3 = ZP3F
      IP3 = IP3F
      IP3I = IP3FI
 1190 TLNTH1=TLNTH1-DSQRT((XP1F-XP1)**2+(YP1F-YP1)**2+(ZP1F-ZP1)**2)
      TLNTH2=TLNTH2-DSQRT((XP3F-XP3)**2+(YP3F-YP3)**2+(ZP3F-ZP3)**2)
 1200 RETURN
      END

