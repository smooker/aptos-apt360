      SUBROUTINE AMON7
C     *** THIS PROGRAM LAST MODIFIED FOR VERSION 4,MODIFICATION 4 ***
      IMPLICIT REAL*8(A-H,O-Z)
       REAL*8 INWORD,NAME,IDIS,MACNAM,KRFSYS
       INTEGER DEBUG,SUM
       LOGICAL*1 LCLAS1(2400),GAT(2)
       INTEGER*2 KAT/0/,KK,KTEMP(2)
C...  THIS ROUTINE PROCESSES A MACRO CALL STATEMENT
C...  OF THE FORMAT
C...       CALL/MAC1,A=1,B,C=2,D=ON
C     THE MACRO NAME IS ENTERED IN THE NESTING TABLE. THE LOCATION IN
C     THE CALLING PROGRAM IS NOTED SO PROCESSING CAN BE RESTORED.
C     FINALLY, THE MACRO VARIABLE STATUS IS UPDATED
C          COMMON  STORAGE
C               *          *          *          *          *
      COMMON/A0CON/K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11,K12,IBLANK
      COMMON/A1COM/NAME,KRFSYS,SUM,JSUBER,NAMSUB,DEBUG,INDXPT,LOOP,IFINI
      COMMON/AMXTAB/MAXTAB,MAXVS1,MAXVS2,MAXPTP,MAXSCL,MAXVS,MAXVST,MXPT
     1PP,MXCAN,MXSRCN,MAXSLR,MAXELM,MAXPOT
      COMMON/AILMTB/ELMENT(600),ICLASS(600),JLMENT
       EQUIVALENCE (ICLASS(1),LCLAS1(1))
      COMMON/AINPOT/INWORD(14),MORE,IFIRST
      COMMON/ASCALR/SCALR(180),ISCWS,NSURF,LOCTEM,IARGTP
      COMMON/AVST/VST(7200)
       DIMENSION PTPP(7200),CANON(7200),IVST(14400),ICANON(14400)
       EQUIVALENCE (VST(1),IVST(1),CANON(1),ICANON(1),PTPP(1))
      COMMON/ABREAK/NEXTNW,NRELCN,KANLCN,LOCSEQ,NEXTCN,NWONRD,LPLOCN,
     1 JSW4,ISN,K,MXLOOP,JSW2,JSAV,JSW1,MAXMV,MXNEST,INILL,KF
      COMMON/AMACRO/LIMCAN,LMDW,NITEMS,JWHAT,MACREC,MACVST,MACERR
      COMMON/APTPP/PT(300),INPTP,NW,JMODE,KLASS,KLASTP,IRECN,NPT,NPR
      COMMON/AMCSTF/MACNAM(5),MACCUR,MACLCN(5),MACRD,MACSTR(5),NMACVR
     1,NUMIDS,IDLOCN,MACIDS(5),ISVID
      COMMON/ADATA1/ANODEF,BLANX,BLANKS,SYN,TLAXIS,DUMMY,PLENT,LOOPST
     1 ,LOOPND,MACRO,NTRMAC,NCALL,LAPTH,JAPTH,IPLUS,NCOMMA,IFF,IC(10),
     2 LLASS
      COMMON/AKLAS7/PPSEQ1,PPSEQ2,IDIS,IISN,IDVST,KFK
      COMMON/ALIBRY/AMACVR(50),AMACVL(50),MACICL(50),DEFNAM,SEGNAM
     1 ,IVARCT,ISYSMC,IRDMOD,LUUP,NWUNRD,NOLIBR
       EQUIVALENCE (KAT,GAT(1)),(ITEMP,KTEMP(1)),(KTEMP(2),KK)
C               *          *          *          *          *
      INTEGER*4 IEQUAL/Z00000804/
      IF (ISYSMC.NE.1) GO TO 1365
      ISYSMC = 0
      MACRD = 1
      LOOP = LUUP
      NWONRD = NWUNRD
      NAME = SEGNAM
      CALL AVS1CK(J)
      IF (JSUBER.NE.0) GO TO 1412
      IF (J.EQ.7) GO TO 1505
      GO TO 1420
C
 1365 KFK = 2
      IISN = -IISN
      CALL ACLAS7
 1370       IF(MACCUR.EQ.0) GO TO 1390
C...  UPDATE MACRO NESTING DATA
 1380 MACLCN(MACCUR)=KANLCN
      MACIDS(MACCUR) = IDLOCN
       JTEMP1 = 2*KANLCN - 1
       ICANON(JTEMP1) = NRELCN
      NRELCN = MAXVST + 1
       MACCUR = MACCUR + 1
      GO TO 1395
 1390  MACCUR = 1
      ISVID = IDLOCN
 1395 NAME=ELMENT(K+2)
            IF(ICLASS(K+2).EQ.1) GO TO 1397
      JSUBER = 226
      GO TO 998
 1397 IF(MACCUR.LE.MXNEST)GO TO 1410
C...  MAXIMUM NESTING LEVEL FOR MACROS HAS BEEN EXCEEDED
 1400 JSUBER=231
      SUM = 1
      GO TO 998
 1410 CALL AVS1CK(J)
      IF(JSUBER.EQ.0) GO TO 1415
 1412 JSUBER = 233
      GO TO 998
C...  BRANCH FOR SYSTEM MACROS
 1415 IF (J.EQ.11) GO TO 1430
            IF(J.EQ.7) GO TO 1430
C...  *********************** ENABLE FOR NO LIBRY *********************
C...  IF (NOLIBR.NE.1) GO TO 1420
C...  IF (J.NE.1) GO TO 1420
C...  J = 11
C...  GO TO 1430
C...  INCORRECT MACRO NAME
 1420 JSUBER=233
      SUM = 1
      GO TO 998
C...  *****************************************************************
C...  SET INDEX TO FIRST MACRO VARIABLE NAME IN ELMENT TABLE
 1430 L = K+4
      M = 1
 1440 IF (L.GT.JLMENT) GO TO 1500
C
C...  CHECK FOR COMMA BEFORE MACRO VARIABLE NAME
      IF (ICLASS(L-1).NE.NCOMMA) GO TO 1490
      IF (M.GT.50) GO TO 1488
C...  CHECK FOR MACRO VARIABLE AFTER COMMA
      IF (ICLASS(L).NE.1) GO TO 1494
C...  STORE MACRO VARIABLE NAME
      AMACVR(M) = ELMENT(L)
C...  CHECK FOR EQUAL SIGN AFTER MACRO VARIABLE
      IF (ICLASS(L+1).NE.IEQUAL) GO TO 1492
C...  CHECK FOR PUNCTUATION AFTER EQUAL SIGN
C...     OTHERWISE CAN HAVE ONLY UNSUBSCRIPTED SYMBOL, VOCAB, OR NUMBER
       JTEMP1 = 4*L - 3
       GAT(2) = LCLAS1(JTEMP1+11)
            IF(KAT-4)  1480, 1450, 1445
C...  ILLEGAL EXPRESSION OR SUBSCRIPTED V S IN CALL STATEMENT
 1445  JSUBER = 232
      GO TO 998
C...  PUNCTUATION FOUND
C...  MUST HAVE NUMBER AFTER PUNCTUATION ; OTHERWISE ERROR
 1450  GAT(2) = LCLAS1(JTEMP1+15)
            IF(KAT.NE.3) GO TO 1494
C...  NUMBER FOUND ; TEST IF PUNCTUATION IS OKAY
C...                     PLUS,MINUS,OTHER
       GAT(2) = LCLAS1(JTEMP1+10)
            IF(KAT-2)  1470, 1460, 1496
 1460 ELMENT(L+3) = -ELMENT(L+3)
C...  MOVE ELMENT INDEX PAST ARITHMETIC SIGN
 1470 L = L+1
C...  STORE ASSIGNED VALUE
 1480 AMACVL(M) = ELMENT(L+2)
C...  SAVE ICLASS ENTRY
      MACICL(M) = ICLASS(L+2)
      M = M+1
      L = L+4
      GO TO 1440
C
C...  CALL STATEMENT HAS MORE THAN 50 MACRO VARIABLES
 1488 JSUBER = 205
C...  IMPROPER PUNCTUATION - PROGRAM EXPECTED COMMA
 1490 JSUBER = 234
      GO TO 998
C...  NO EQUAL SIGN AFTER MACRO VARIABLE
 1492 JSUBER = 229
      GO TO 998
C...  FORMAT ERROR IN CALL STARTMENT
 1494 JSUBER = 253
      GO TO 998
C...  ILLEGAL PUNCTUATION WITH ASSIGNED VALUE
 1496 JSUBER =235
      GO TO 998
C
C...  STORE NUMBER OF MACRO VARIABLES FOUND IN CALL STATEMENT
 1500 IVARCT = M-1
C...  CHECK IF SYSTEM MACRO DEFINITION HAS TO BE READ IN FROM APTMAC
      IF (J.EQ.11) GO TO 1590
C
C...  MACRO DEFINITION HAS ALREADY BEEN PROCESSED
 1505  JTEMP1 = 2*NAMSUB - 1
C...  GET I PARAMETER FROM VST ENTRY
       I = IVST(JTEMP1+2)
C...  GET J PARAMETER FROM VST
       ITEMP = IVST(JTEMP1+3)
C...     LAST 2 BYTES OF J APRAMETER ARE IN KK
      IF (I.EQ.10) GO TO 1510
C...  MACRO NAME FOLLOWING CALL IS IMPROPERLY DEFINED
      JSUBER = 233
      SUM = 1
      GO TO 998
 1510 MACVST = NAMSUB
C...  BRANCH IF MACRO IS IN CANON
      IF (KK.GT.0) GO TO 1520
C...  GET MACRO FROM OVERFLOW FILE AND PUT IN CANON
      JWHAT = 3
      CALL AMATMV
      IF (JSUBER.NE.0) GO TO 998
C...  GET CANON INDEX FOR STARTING LOCATION OF THE MACRO
       ITEMP = IVST(JTEMP1+3)
C...  TEST IF IN MACRO EXECUTION OR LOOP EXCUTION MODE
 1520 IF (LOOP.NE.0) GO TO 1530
       JMODE = 6
      CALL APTPUT
      IF (JSUBER.NE.0) GO TO 998
C...  STORE STARTING LOCATION OF CURRENT MACRO
 1530 MACSTR(MACCUR) = KK
C...  STORE CURRENT MACRO NAME
      MACNAM(MACCUR) = NAME
C...  SET MACRO EXECUTION MODE
      LOOP = 1
C...  SET FLAG TO READ FROM CANON TO INWORD
       MACRD = 1
       JTEMP1 = 2*KK - 1
       NMACVR = ICANON(JTEMP1+3)
       IDLOCN = MACVST + 2
       NUMIDS = ICANON(JTEMP1+4)
C...  INITIALIZE IDS FOR THIS MACRO CALL - PUT IN NEW VST LOCATIONS
      IMAXVS = MAXVS1 + 2*NUMIDS
C...  IS THERE ROOM IN THE VST FOR THIS INFORMATION
            IF(IMAXVS+MAXVS2.LT.MAXVST) GO TO 1540
      JSUBER = 15
      GO TO 998
 1540 IR = MAXVS1 + 2
C...  WERE THERE ANY IDS IN THIS MACRO
      IF(NUMIDS.LE.0) GO TO 1550
       JTEMP1 = 2*IR - 1
      DO 1545 II = 1,NUMIDS
      VST(IR) = VST(IDLOCN)
       IVST(JTEMP1+2) = 8
       IVST(JTEMP1+3) = 0
      IDLOCN = IDLOCN + 2
       JTEMP1 = JTEMP1 + 4
 1545  IR = IR + 2
C...  UPDATE ID POINTER AND VST TABLE LIMIT
      IDLOCN = MAXVS1 + 2
      MAXVS1 = IMAXVS
 1550  KANLCN = KK + 3 + 5*NMACVR
      I = KK + 4
      J = KK + 6
C...  MOVE MACRO VAR. STANDARD VALUE TO CURRENT VALUE SPOT
      IF (NMACVR.LE.0) GO TO 1570
      DO 1560 II = 1,NMACVR
      CANON(J) = CANON(I)
      CANON(J+1) = CANON(I+1)
      I = I + 5
 1560 J = J + 5
 1570  CALL APRINT(7)
      GO TO 1600
C
C...  SYSTEM MACRO DEFINITION MUST BE READ IN FROM MACRO LIBRARY
C...  BRANCH IF READ/2 IS NOT IN EFFECT
 1590 IF (IRDMOD.EQ.0) GO TO 1595
C...  A READ/2 CANNOT READ IN THE FIRST CALL TO A SYSTEM MACRO
      JSUBER = 38
      GO TO 998
 1595 MACRD = 0
      LUUP = LOOP
      LOOP = 0
      NWUNRD = NWONRD
      NWONRD = 0
      SEGNAM = NAME
      IRDMOD = -1
C...  INDICATE SYSTEM MACRO MUST BE READ IN
      ISYSMC = 1
C...  *********************** ENABLE FOR NO LIBRY *********************
C...  IF (NOLIBR.EQ.1) GO TO 998
C...  *****************************************************************
      VST(NAMSUB) = BLANKS
      GO TO 998
C...  BRANCH IF CALL STATEMENT HAD NO MACRO VARIABLES
 1600 IF (IVARCT.EQ.0) GO TO 998
      M = 1
C...  CHECK IF MACRO VARIABLE IN MACRO DEFINITION
 1605 I = 1
 1610 IF (I.LE.NMACVR) GO TO 1630
C...  MACRO VARIABLE WAS NOT FOUND IN THE MACRO DEFINITION
 1620 JSUBER = 228
      GO TO 998
C...  SET J TO START OF MACRO VARIABLES IN CANON
 1630 J = KK+5*I-2
      IF (CANON(J).EQ.AMACVR(M)) GO TO 1640
      I = I+1
      GO TO 1610
C...  FOUND MATCHING MACRO VARIABLE NAME IN MACRO DEFINITION
 1640 CANON(J+3) = AMACVL(M)
       JTEMP1 = 2*J - 1
       ICANON(JTEMP1+9) = MACICL(M)
      M = M+1
C...  BRANCH IF ALL MACRO VARIABLES IN CALL STATEMENT MOVED
      IF (M.GT.IVARCT) GO TO 1650
      GO TO 1605
C...  TEST IF ANY MACRO VARIABLES STILL HAVE NO VALUES
 1650 I = 1
 1660 IF (I.LE.NMACVR) GO TO 1670
      GO TO 998
 1670 J = KK+5*I+1
      IF (CANON(J).EQ.ANODEF) GO TO 1680
      I = I+1
      GO TO 1660
C...  UNDEFINED MACRO VARIABLE
 1680 JSUBER = 230
      GO TO 998
  998       IF(JSUBER.EQ.0) GO TO 999
C...  ERROR ON THIS CARD - DELETE THE CALL AND DO NOT EXECUTE THE MACRO
      MACCUR = MACCUR-1
      NRELCN = MAXVST + 1
      IF(MACCUR.EQ.0) GOTO 1000
      IDLOCN = MACIDS(MACCUR)
       KANLCN = MACLCN(MACCUR)
       JTEMP1 = 2*KANLCN - 1
       NRELCN = ICANON(JTEMP1)
  999 RETURN
C..
 1000 IDLOCN = ISVID
       MACRD = 0
      IF(NWONRD.EQ.0) LOOP=0
      GOTO 999
      END

