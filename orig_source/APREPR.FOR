      SUBROUTINE APREPR
C     *** THIS PROGRAM LAST MODIFIED FOR VERSION 4, MODIFICATION 3 ***
C
      IMPLICIT REAL*8(A-H,O-Z)
       INTEGER PUNTAP
       COMMON/ATAPTB/PROTAP,CANTAP,CLTAPE,POCTAP,PLOTAP,SRFTAP,
     1 TAPES1,TAPES2,TAPES3,TAPES4,INTAPE,IOUTAP,PUNTAP
       COMMON/A1COM/REFSYS,NAME,NAME1,JSUBER,JSV,NAMSUB,KDBUG,INDXPT,
     1 LOOP,IFINI
      COMMON/AVST/VST(7200)
      DIMENSION DEFTAB(1000)
      EQUIVALENCE(VST(7200),DEFTAB(1000))
      DIMENSION D(1000)
      EQUIVALENCE (DEFTAB(1),D(1))
C               *          *          *          *          *
      DIMENSION                                  MM(7)
      DIMENSION S(4),T(4),U(4),CB(4),SQ(4),V(4)
      DIMENSION SMAT(12)
      COMMON/APRBRK/SMAT,XXXX1,XXXX2,XXXX3,XXXX4,ANS1,ANS2,ANS3,
     1 KTR,KWORD,JMOD2,JMOD1,INKX,KMOVE,L1,L2,KFRNT,KADD,KADD1
C***********************************************************************
C     DEFINE FUNCTIONS
      CRV(Q000FL)=50.0*(Q000FL-CENTER)/CURVRG+51.50001
      CRVA(Q001FL,Q002FL,Q003FL)=-(4.0*Q001FL+2.0*Q002FL)/(Q003FL*DSQRT(
     1(1.0+Q001FL**2)**3))
      SMAL(Q004FL)=DSIGN( DMAX1(DABS(Q004FL),1.D-9),Q004FL)
      TAN1(Q005FL,Q006FL)=(Q005FL-Q006FL)/(1.0+Q005FL*Q006FL)
      TAN2(Q007FL,Q008FL)=(Q007FL+Q008FL)/SMAL(1.0-Q007FL*Q008FL)
      DERV(Q009FL)=DSQRT((1.0+Q009FL*Q009FL)*(1.0+Q009FL*Q009FL)*(1.0+Q0
     109FL*Q009FL))
      CURV(Q010FL,Q011FL,Q012FL,Q013FL,Q014FL,Q015FL)=-(4.0*Q012FL+2.0*Q
     1013FL)/(Q015FL*                 DERV(Q012FL))-(2.0*Q010FL+4.0*Q011
     2FL)/(Q014FL*DERV(Q011FL))
      SLOPE(Q016FL,Q017FL,Q018FL,Q019FL,Q020FL,Q021FL)=(((Q018FL-Q016FL)
     1**2+(Q019FL-Q017FL)**2)                *(Q021FL-Q017FL)-((Q020FL-Q
     2016FL)**2+(Q021FL-Q017FL)**2)*(Q019FL-Q017FL))/SMAL(((Q018FL-Q016F
     3L)**2+      (Q019FL-Q017FL)**2)*(Q020FL-Q016FL)-((Q020FL-Q016FL)**
     42+(Q021FL-Q017FL)**2)*(Q018FL-Q016FL))
      SQRT(Q050FL) = DSQRT(Q050FL)
      COS(Q050FL) = DCOS(Q050FL)
      SIN(Q050FL) = DSIN(Q050FL)
      ATAN(Q050FL) = DATAN(Q050FL)
      SIGN(Q050FL,Q051FL) = DSIGN(Q050FL,Q051FL)
      ABS(Q) = DABS(Q)
C
C...  DEFINE TANF SO THAT ITS MAXIMUM MAGNITUDE IS 10**9
C
      TAN(Q022FL)=DSIN(Q022FL)/(DSIGN( DMAX1(DABS(DCOS(Q022FL)),1.D-9)
     1 ,DCOS(Q022FL)))
C
C
C
      SOMEPI = 3.1415926535897932
      RDTODG = 57.295779513082321
      ISET=0
      D(1)=AFULL8(0,IDEFTB(1)-1)
      HALFPI=SOMEPI*.5
      IF(IDEFTB(2).EQ.3099)GO TO 10
      KWORD= 2
      KPTCTR=1
      KTR=0
      CALL APREPA (JBR)
      IF(JSUBER .NE. 0)   RETURN
      IF(JBR) 3000,1034,1033
 4001 PP1=ANS1
      PP2=ANS2
      PP3=ANS3
      INKX=6
      XXXX1=0.0
      XXXX2=0.0
      XXXX3=0.0
      XXXX4=1.0
      GOTO3000
 4002 D(8)=PP1-ANS1
      D(9)=PP2-ANS2
      D(10)=PP3-ANS3
 1033 KWORD=KWORD+4
      PIG=SQRT(D(8)*D(8)+D(9)*D(9)+D(10)*D(10))
      D(8)=D(8)/PIG
      D(9)=D(9)/PIG
      D(10)=D(10)/PIG
C
C...  CALCULATE ROTATION MATRIX
C
 1034       IF(DABS(D(10)).GT.0.707) GO TO 1036
 1035 D(7)=-SQRT(1.0-D(10)*D(10))
      D(6)=D(9)*D(10)/(-D(7))
      D(5)=D(8)*D(10)/(-D(7))
      D(4)=0.0
      D(3)=-D(8)/(-D(7))
      D(2)=D(9)/(-D(7))
      GOTO1037
 1036 D(6)=SQRT(1.0-D(9)*D(9))
      D(7)=-D(9)*D(10)/D(6)
      D(5)=-D(8)*D(9)/D(6)
      D(4)=-D(8)/D(6)
      D(3)=0.0
      D(2)=D(10)/D(6)
 1037 KFRNT=IDEFTB(1)-KWORD
      D(12) = AFULL8(0,0)
C
C...  ARE POINTS ALL CONVERTED
C
 2001 IF(KFRNT)2004,2004,1039
C
C...  MOVE POINTS TO CANNONICAL FORM AND
C...  CONVERT TO XYZ IF NECESSARY
C
 1039 KADD= 996-KFRNT
      KADD1=13+KPTCTR*7
      DO1043I3=1,7
      L3=KADD1- 1+I3
      D(L3)=0.
 1043 CONTINUE
      GOTO(1040,1045,1050,1055,1087,22),JMOD1
C
C...  THETAR ROUTINE
C
   22 IF(IDEFTB(KADD)-3001)23,1042,23
   23 SAV1=D(KADD)
      D(KADD)=D(KADD+1)
      D(KADD+1)=SAV1
      GOTO1041
C
C...  RTHETA ROUTINE
C
 1040 IF(IDEFTB(KADD)-3001)1041,1042,1041
 1041 D(KADD1)=D(KADD)*COS(D(KADD+1)/RDTODG )
      D(KADD1+1)=D(KADD)*SIN(D(KADD+1)/RDTODG  )
      KFRNT=KFRNT-2
      GOTO1060
 1042 D(KADD1)=D(KADD+1)
      D(KADD1+1)=D(KADD+2)
      KFRNT=KFRNT-4
      GOTO1060
C
C...  NOZ ROUTINE
C
 1045 IF(IDEFTB(KADD)-3001)1046,1042,1046
 1046 D(KADD1)=D(KADD)
      D(KADD1+1)=D(KADD+1)
      KFRNT=KFRNT-2
      GOTO1060
C
C...  NOY ROUTINE
C
 1050 IF(IDEFTB(KADD)-3001)1046,1051,1046
 1051 D(KADD1)=D(KADD+3)
      D(KADD1+1)=D(KADD+1)
      KFRNT=KFRNT-4
      GOTO1060
C
C...  NOX ROUTINE
C
 1055 IF(IDEFTB(KADD)-3001)1046,1056,1046
 1056 D(KADD1)=D(KADD+2)
      D(KADD1+1)=D(KADD+3)
      KFRNT=KFRNT-4
 1060 KADD= 996-KFRNT
C
C...  MOVE AND CONVERT SLOPES TO CANNONICAL FORMS
C
      GOTO(1075,1061,1070,1071,1061),JMOD2
C
C...  TWOPT AND SPLINE ROUTINE
C
 1061 IF(IDEFTB(KADD)-47)1062,1067,1062
 1062 IF(IDEFTB(KADD)-111)1063,1068,1063
 1063 D(KADD1+2)=AFULL8(0,-1)
      GOTO1075
 1067 D(KADD1+2)=D(KADD+1)
      KFRNT=KFRNT-2
      GOTO1075
 1068 AGEOLD = (D(KADD+1)-90.0)/RDTODG
      D(KADD1+2) = TAN(AGEOLD)
      KFRNT=KFRNT-2
      GOTO1075
C
C...  PTSLOP ROUTINE
C
 1070 D(KADD1+2)=D(KADD)
      KFRNT=KFRNT-1
      GOTO1075
C
C...  PTNORM ROUTINE
C
 1071 AGEOLD = (D(KADD)-90.0)/RDTODG
      D(KADD1 +2) = TAN(AGEOLD)
      KFRNT=KFRNT-1
 1075 JBR = 1
 3001 CALL APREPD(JBR)
      GO TO (2000,4001,4002),JBR
 2000 KPTCTR=KPTCTR+1
C
C...  CHECK POINT COUNTER
C
      IF(KPTCTR-139)2001,3057,2002
 3057 IF(KFRNT)2004,2004,2002
 2002 WRITE (IOUTAP,2003)
 2003 FORMAT('0NUMBER OF TABCYL POINTS IS GREATER THAN 139  ' )
      JSUBER = 1001
      RETURN
 2004 D(11)=AFULL8(0,KPTCTR)
      D(1) = AFULL8(0,12+KPTCTR*7)
C
C...    BRING IN TITLE FROM COMMON
C
 3023 CONTINUE
C
C1962    PREPRO        3/31/66  1Q66
      MM(1)=0
C
C...    GO TO...4PT,2PT,PTNORM,PTSLOPE, OR SPLINE
C
      GO TO (8005,8006,8004,8004,8008),JMOD2
C...  IF TABCYL IS ALREADY IN CANONICAL FORM ,
C...  MOVE BACK ONE LOCATION AND ADD HEADING.
C
   10 N12=IDEFTB(1)-1
      DO12I=1,N12
      D(I+1)=D(I+2)
   12 CONTINUE
      IDUMMY = D(11)
      D(11) = AFULL8(0,IDUMMY)
      GO TO 8129
C
C     PTNORM,PTSLOPE
C...  SLOPES ARE ALL GIVEN
C...  SB=SLOPE AT FIRST PT OF TABCYL
C...  SE2=SLOPE AT END PT
C
 8004 SB=D(22)
      M1=7*IDEFTB(11)+8
      SE2=D(M1)
      IF(JMOD2-5)8020,9986,9986
C
C...  FOR SPLINE FIT ONLY.........
C...  WRITE OUT FIXED INFORMATION ABOUT TABCYL POINTS
C
 9986 CALL APREPC
      GOTO8020
C
C...  FOUR POINT METHOD
C
C...     M1 POINTS TO U-COORD. OF INTERVAL BETWEEN (N-1)TH AND
C...     (N-2)TH INPUT POINTS, WHERE NTH IS LAST INPUT POINT
 8005  M1 = 7*IDEFTB(11) - 8
      D(13)=0.0
      D(14)=0.0
      N=1
      GOTO8007
C
C...  2PT...CHECK FOR SLOPES AT FIRST AND LAST POINTS
C
 8006 IF(IDEFTB(22)+1)8011,8012,8011
 8011 SB=D(22)
      GOTO8014
C
C...  SLOPE PASSES CIRCLE THRU 3 PTS,AND FINDS
C
 8012 SB=SLOPE(D(20),D(21),D(27),D(28),D(34),D(35))
      D(22)=SB
 8014 M1=7*IDEFTB(11)+8
      IF(IDEFTB(M1)+1)8016,8018,8016
 8016 SE2=D(M1)
      GOTO8020
 8018 SE2=SLOPE( D(M1-2),D(M1-1),D(M1-9),D(M1-8),D(M1-16),D(M1-15))
      D(M1)=SE2
 8020 M1=7*IDEFTB(11)-6
      N=2
 8007 DO 9079 I=13,M1,7
      G=D(I+7)
      H=D(I+8)
      IK=I
C
C...    TRANSLATE ORIGIN TO D(I+7),D(I+8)
C
      DO9010 I3=1,4
      S(I3)=D(IK)-G
      T(I3)=D(IK+1)-H
 9010 IK=IK+7
C
C...    ROTATE X AXIS UP TO D(I+14),D(I+15)
C
      RO=SQRT(S(3)**2+T(3)**2)
      SINN=T(3)/RO
      COSS=S(3)/RO
       RO = ATAN(T(3)/SMAL(S(3)))
            IF(S(3))  9012, 9014, 9014
 9012  RO = RO + 3.14159265
 9014  D(I+12) = RO
C
C... PASS THRU ROTATION MATRIX
C
      DO9011 I3=1,4
      U(I3)=S(I3)*COSS+T(I3)*SINN
      V(I3)=-S(I3)*SINN+T(I3)*COSS
      SQ(I3)=U(I3)**2
      CB(I3)=U(I3)*SQ(I3)
 9011 CONTINUE
C
C...  GO TO(4-PT,2-PT-SLOPE)
C
 9015 GOTO(9114,9050),N
C
C...  FOR FIRST AND LAST INTERVALS DEFINE NEW PT.
C
 9114 IF(I-13)9111,9111,9211
 9111 U(1)=(D(41)-G)*COSS+(D(42)-H)*SINN
      SQ(1)=U(1)**2
      CB(1)=SQ(1)*U(1)
      V(1)=(D(41)-G)*(-SINN)+(D(42)-H)*COSS
 9211 IF(I-M1)9025,9311,9311
 9311 N=M1-7
      U(4)=(D(N)-G)*COSS+(D(N+1)-H)*SINN
      SQ(4)=U(4)**2
      CB(4)=SQ(4)*U(4)
      V(4)=(D(N)-G)*(-SINN)+(D(N+1)-H)*COSS
C
C...  CRAMERS RULE USED FOR SOLVING CUBIC THRU 4-PTS.
C
 9025 DEN=(CB(1)-SQ(3)*U(1))*(SQ(4)-U(3)*U(4))-(CB(4)-SQ(3)*U(4))*(SQ(1)
     1-U(3)*U(1))
      AN=V(1)*(SQ(4)-U(3)*U(4))-V(4)*(SQ(1)-U(3)*U(1))
      BN=V(4)*(CB(1)-SQ(3)*U(1))-V(1)*(CB(4)-SQ(3)*U(4))
      D(I+9)=AN/SMAL(DEN)
      D(I+10)=BN/SMAL(DEN)
       D(I+11) = -D(I+9)*SQ(3) - D(I+10)*U(3)
       T(1) = (2.0*D(I+9)*U(3)+D(I+10))*U(3)
C
C...     SET SLOPES AT END POINTS = FIRST DERIVATIVE OF CUBIC
C...     PASSING THROUGH RESPECTIVE END INTERVALS
C
C...     IF CUBIC JUST COMPUTED FOR 1ST INTERVAL BETWEEN INPUT
C...     POINTS, COMPUTE SLOPE AT 1ST INPUT POINT FOR EXTENSION
            IF(I.NE.13) GO TO 9030
       SB = TAN(ATAN(D(24))+D(25))
C
C...     IF CUBIC JUST COMPUTED FOR LAST INTERVAL BEWTEEN INPUT
C...     POINTS, COMPUTE SLOPE AT LAST INPUT POINT FOR EXTENSION
 9030       IF(I.NE.M1) GO TO 9059
       SE2 = TAN(ATAN(3.*D(M1+9)*SQ(3)+2.*D(M1+10)*U(3)+D(M1+11))
     1 + D(M1+12))
       GO TO 9059
C
C...     TWOPT FORMAT - SEE IF SLOPE GIVEN AT ORIGIN OF SEGMENT
 9050 IF(IDEFTB(I+9)+1)9056,9055,9056
C
C...     SLOPE AT ORIGIN POINT OF SEGMENT NOT GIVEN - COMPUTE IT
 9055  S(1) = -U(3)*V(1)/SMAL(SQ(1)+V(1)**2-U(3)*U(1))
       GO TO 250
C
C...     SLOPE GIVEN - ROTATE IT INTO LOCAL SYSTEM
 9056  S(1) = (-T(3)+D(I+9)*S(3))/(S(3)+D(I+9)*T(3))
C
C...     FOR ALL INTERVALS EXCEPT BEGINNING EXTENSION, SET UP
C...     COMPONENTS OF INITIAL SLOPE VECTOR IN UV-SYSTEM, USING
C...     U-COMPONENT OF VECTOR AT END OF PREVIOUS INTERVAL TO INDICATE
C...     PROPER QUADRANT FOR NEW INITIAL VECTOR
  250       IF(I.LE.13) GO TO 9060
       USLOPE = 1.0
       VSLOPE = D(I+9)
            IF(TU.GE.0.0) GO TO 280
       USLOPE = -USLOPE
       VSLOPE = -VSLOPE
C
C...     SEE IF U-COMPONENT OF SLOPE VECTOR ROTATED INTO LOCAL SYSTEM
C...     OF INTERVAL IS NEGATIVE - IF SO, INDICATES TABCYL WILL BE
C...     DISCONTINUOUS AT START OF THIS INTERVAL - ERROR
  280       IF(COSS*USLOPE+SINN*VSLOPE.GE.0.0) GO TO 9060
C
C...     TABCYL IS DISCONTINUOUS - OUTPUT DIAGNOSTIC MESSAGE
       WRITE (IOUTAP,300) G,H
  300  FORMAT (1H0,10X,42HDIRECTIONAL DISCONTINUITY OF TABCYL AT U- ,
     1 17HAND V-COORDINATES,F14.6,1H,,F14.6//)
C
C...     CHECK FOR ENDING SLOPE
 9060       IF(IDEFTB(I+16).NE.-1) GO TO 9058
C...     SLOPE AT END OF INTERVAL NOT GIVEN - COMPUTE IT
 9057 T(1)=U(3)*V(4)/SMAL(SQ(4)+V(4)**2-U(3)*U(4))
      GOTO9075
C
C...  SLOPE GIVEN-ROTATE IT
C
 9058 T(1)=(-T(3)+D(I+16)*S(3))/(S(3)+D(I+16)*T(3))
C
C...  D(I+9)=A,D(I+10)=B,COEFICIENTS OF CUBIC,D(I+11)=SEGMENT LENGTH
 9075  D(I+9) = (T(1)+S(1))/SQ(3)
       D(I+10) = (-2.0*S(1)-T(1))/U(3)
 9059  D(I+11) = U(3)
C
C...     COMPUTE A POINT .05 OF THE INTERVAL LENGTH BEFORE ITS FINAL
C...     POINT, FOR COMPUTING A VECTOR TO INDICATE THE PROPER QUADRANT
C...     FOR THE INITIAL SLOPE VECTOR OF THE FOLLOWING INTERVAL
       TLU = .95*D(I+11)
       TLV = D(I+9)*TLU**3 + D(I+10)*TLU**2 - (D(I+9)*D(I+11)+D(I+10))*
     1 (D(I+11)*TLU)
C...     ROTATE THE U-COORDINATE OF THIS POINT FROM THE INTERVAL
C...     REFERENCE SYSTEM TO THE TABCYL UV-SYSTEM, AND COMPUTE THE
C...     U-COMPONENT OF THE VECTOR TO THE INTERVAL END POINT
       TU = S(3) - (COSS*TLU-SINN*TLV)
C
C...     COMPUTE MAXIMUM AND MINIMUM VALUES FOR THE INTERVAL
  907  S(1) = -D(I+11)*(D(I+9)*D(I+11)+D(I+10))
      IF(ABS(D(I+9))-.0000001)9061,9061,9062
 9061 D(I+9)=0.
      IF(ABS(D(I+10))-.0000001)9063,9063,9064
 9063 D(I+10)=0.
      D(I+12)=0.
      D(I+13)=0.
      GO TO 9079
 9064 D(I+12)=(-S(1)**2/D(I+10)*.25)/D(I+11)
C...   IN ST. NO. 9064 DIV'N BY D(I+11)FOR CORRECT MAX-MIN ITTRI NOTIFYD
C
      IF(D(I+12))9065,9065,9066
 9066 D(I+13)=0.
      GO TO 9079
 9065 D(I+13)=D(I+12)
      D(I+12)=0.
      GO TO 9079
 9062 TEMP=D(I+10)**2
      TEM1=3.*D(I+9)*S(1)
      TEM3=(TEMP-TEM1)*SQRT(TEMP-TEM1)*2.0
      TEM2=D(I+10)*(2.*TEMP-3.*TEM1)
      TEM4=TEM2+SIGN(TEM3,TEM2)
      TEM3=S(1)**2*(1.3333333*TEM1-TEMP)
      TEMP = TEM4/((D(I+9)**2)*27.)
      TEM1=TEM3/TEM4
      IF(S(1))9067,9067,9068
 9067 IF(T(1))9068,9069,9069
 9069 D(I+12)=0.
      GO TO 9070
 9068 IF(TEM2)9071,9071,9072
 9072 D(I+12)=TEMP/U(3)
      GO TO 9070
 9071 D(I+12)=TEM1/U(3)
 9070 IF(S(1))9073,9074,9074
 9074 IF(T(1))9076,9076,9073
 9076 D(I+13)=0.
      GO TO 9079
 9073 D(I+12)=-D(I+12)
      IF(TEM2)9077,9077,9078
 9078 D(I+13)=TEM1/U(3)
      GO TO 9079
 9077 D(I+13)=TEMP/U(3)
 9079 CONTINUE
C.....EXTEND TABCYL 10INS.AT BOTH ENDS USE DOT PRDT TO FIND DIRECTION
      EXT=10.0
      L2=7*IDEFTB(11)+6
      X=D(L2-7)
      Y=D(L2-6)
      JSWW=0
 8050 T(1)=1.0/SQRT(1.0+SE2**2)
      DELTA=EXT*T(1)
C
C...  X2,Y2=PT AT END OF EXTENSION
C...  X,Y=PT AT BEGINNING OF EXTENSION
C
      X2=D(L2)+DELTA
      IF(ABS(DELTA)-5.E-6)8052,8052,8054
 8052 X2=D(L2)
      Y2=D(L2+ 1)+10.
      IF((X-D(L2))*(X2-D(L2))+(Y-D(L2+1))*(Y2-D(L2+1)))8046,8046,8053
 8053 Y2=D(L2+1)-10.
      GO TO 8046
 8054 Y2=D(L2+1)+SE2*DELTA
      IF((X-D(L2))*(X2-D(L2))+(Y-D(L2+1))*(Y2-D(L2+1)))8046,8046,8045
 8045 X2=D(L2)-DELTA
      Y2=D(L2+1)-SE2*DELTA
C...  JSWW=0 - LAST INTERVAL
C...  JSWW=1 - FIRST INTERVAL
 8046 IF(JSWW)8047,8047,8049
 8047 D(L2+7)=X2
      D(L2+8)=Y2
C
C...  CUBIC IS DEGENERATE IN EXTENSION INTERVALS
C
      D(L2+6)=0.
      D(L2+5)=0.
      D(L2+3)=0.
      D(L2+2)=0.
 8048 SVSE2=SE2
      SE2=SB
      L2=20
      X=D(27)
      Y=D(28)
      JSWW=1
      GO TO 8050
 8049 SE2=SVSE2
      D(13)=X2
      D(14)=Y2
      D(19)=0.
      D(18)=0.
      D(16)=0.0
      D(15)=0.0
C
C...  WHEN NECESSARY STATEMENTS 8100 TO 8100+8 PROVIDE AUTOMATIC DECREA
C...  SE IN EXTENSION LENGTHS TO AVOID INTERSECTION
C
      L2=7*IDEFTB(11)-1
      IF(ABS(SB-SE2)-.5E-5)8120,8110,8110
C
C...  X,Y=PT OF INTERSECTION OF EXTENSIONS
C...  IS IT BEYOND 10 INCHES AWAY FROM ENDS OF TABCYL
C...  N0,DECREASE EXTENSION LENGTHS
C...  YES,TRANSFER OUT
C
 8110 X=(D(L2+8)-D(14)+SB*D(13)-SE2*D(L2+7))/(SB-SE2)
      Y=SB*(X-D(13))+D(14)
      IF((X-D(20))**2+(Y-D(21))**2-100.)8112,8111,8111
 8111 IF((X-D(L2+7))**2+(Y-D(L2+8))**2-100.)8112,8120,8120
 8112 IF((D(L2)-D(L2+7))*(X-D(L2+7))+(D(L2+1)-D(L2+8))*(Y-D(L2+8)))
     1  8113,8113,8120
 8113 IF((D(27)-D(20))*(X-D(20))+(D(28)-D(21))*(Y-D(21)))
     1  8114,8114,8120
 8114 D(L2+14)=X-.01*(X-D(L2+7))
      D(L2+15)=Y-.01*(Y-D(L2+8))
      D(13)=X-.01*(X-D(20))
      D(14)=Y-.01*(Y-D(21))
 8115 WRITE(IOUTAP,8117)X,Y
 8117 FORMAT(26H0EXTENSION INTERSECTION U=F15.8,5X,2HV=F15.8)
 8120 D(L2+11)=SQRT((D(L2+14)-D(L2+7))**2+(D(L2+15)-D(L2+8))**2)
      D(17)=SQRT((D(20)-D(13))**2+(D(21)-D(14))**2)
      D(11)=AFULL8(0,IDEFTB(11)+1)
      D(1)=AFULL8(0,IDEFTB(1)+2)
 8129 NUMPTS=7*IDEFTB(11)+7
      ICV1 = IDEFTB(1)
      ICV11 = IDEFTB(11)
      WRITE(IOUTAP,8130)ICV1,(D(I),I=2,10),ICV11,(D(I),I=13,NUMPTS)
 8130 FORMAT(14H0DATA STORAGE=I5  /16H0ROTATION MATRIX/
     11H03F15.8/1H03F15.8/1H03F15.8/
     218H0NUMBER OF POINTS=I5  /1X,
     3100H       U               V             A              B
     4   LENGTH           MAX            MIN/(1H 7F15.8))
      GO TO 799
 8008 CALL APREPB
      GO TO 8004
  799 AGEOLD=D(11)
      AJOLD=D(12)
      J=12
      DO 7777 I=1,9
      D(J)=D(J-2)
 7777 J=J-1
      D(2)=AGEOLD
      D(3)=AJOLD
      RETURN
 1087 JBR = 2
      GO TO 3001
 3000 JBR = 3
      GO TO 3001
      END

