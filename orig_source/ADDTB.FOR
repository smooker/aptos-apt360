      SUBROUTINE ADDTB
C     *** THIS PROGRAM LAST MODIFIED FOR VERSION 4,MODIFICATION 4 ***
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION  TEM(10),D(1),TN(3),TP(3),S(1),IOP(1)
C
C..   COMOON AND EQUIVALENCE TO REST OFARITHMETIC ELEMENT
C           ...NOTE...  DIMENSION NUMBERS ARE ARBITRARY
C
C
      COMMON/A2CMMN/SAKA(3413)
      DIMENSION AIBM(600), IBMA(240), BIBM(536), IBMC(104), CANSTO(2000)
     1 , IBMB(10)
      EQUIVALENCE (SAKA(1),AIBM(1))
      EQUIVALENCE(SAKA(601),IBMA(1))
      EQUIVALENCE(SAKA(721),BIBM(1))
      EQUIVALENCE(SAKA(1257),IBMC(1))
      EQUIVALENCE(SAKA(1409),CANSTO(1))
      EQUIVALENCE(SAKA(3409),IBMB(1))
C
C
      EQUIVALENCE (D(1),CANSTO(1))
      EQUIVALENCE (TP(1),AIBM(7))
      EQUIVALENCE (TN(1),AIBM(10))
      EQUIVALENCE (S(1),AIBM(70))
      EQUIVALENCE (IOP(1),IBMA(10))
      EQUIVALENCE (TEM(1),BIBM(227))
      EQUIVALENCE (IER,IBMB(1))
      EQUIVALENCE (IS,IBMC(1))
      EQUIVALENCE (IIS,IBMC(2))
      EQUIVALENCE (IC,IBMC(88))
      COMMON/A2FPC / Q15X01,QP9X01    ,QP6X01    ,QP5X01    ,QP4X01    ,
     1QP0001    ,QP001     ,QP01      ,QP1       ,Q1P       ,Q10P      ,
     2Q1000P    ,Q1PE5     ,Q1PE6     ,Q1PE10    ,Q1PE20    ,Q1PE30    ,
     3Q1PE36    ,Q1PE38    ,QP8X01    ,QP7X01    ,
     4QP4X09    ,QP9       ,QP99      ,QP995     ,QP997     ,QP999     ,
     5QP9999    ,QP4X95    ,QP5X95    ,QP6X9     ,QP7X9     ,
     6QP6X05    ,QP5X05    ,QP4X05    ,QP0005    ,QP005     ,QP05      ,
     7QP5       ,Q5P       ,                                 Q4X045    ,
     8QP0002    ,QP0047    ,QP017     ,Q1RAD     ,QP0349    ,QP125     ,
     9QP6       ,QP2       ,QP2499    ,QP25      ,QP3
      COMMON/A2FPC / QP7   ,QP75      ,QP8       ,QP866     ,Q1P01     ,
     1Q1P1      ,Q1P2      ,Q1P25     ,Q1P5      ,Q2P       ,Q2P5      ,
     2Q3P       ,Q3P5      ,Q4P       ,Q8P       ,Q11P      ,Q45P      ,
     3Q90P      ,Q130P     ,Q4500P    ,Q9000P    ,QP02      ,QNUL      ,
     4QPIE       ,QFIL(9)
C
C...  COMMON,DIMENSION,EQUIVALENCE FOR THIS ROUTINE ONLY
C
      DIMENSION U(3),V(3),X(3),SEG(11),SAVPAR(9)
      EQUIVALENCE (SEG(3),H2), (SEG(4),G2),(SEG(6),SINN),(SEG(7),COSS)
      EQUIVALENCE (SEG(10),UPP), (SEG(11),VPP), (U(1),X(1))
      EQUIVALENCE (SEG(3),ACF),(SEG(4),BCF),(SEG(5),CCF)
      DIMENSION ISEG(11)
      EQUIVALENCE (SEG(1),ISEG(1))
C
C...  DEFINITIONS OF ARITHMETIC STATEMENT FUNCTIONS
C
      CUBICF(XX)=((ACF*XX+BCF)*XX+CCF)*XX
      CUBC1F(XX)=((ACF*XX+BCF)*XX+(CCF-SLOPE))*XX-VINT
C
C...  INITIALIZE DIRECTED DISTANCE
C
      S(IS)=Q1PE38
      ISEG(4)=IOP(IIS)
      IER=0
C
C...  TRANSFORM TOOL POINT AND TOOL NORMAL INTO U-V-W COORD. SYSTEM
C
      CALL AVDOT(D(IC+5),TP(IS),UP)
      CALL AVDOT(D(IC+8),TP(IS),VP)
      CALL AVDOT(D(IC+5),TN(IS),UN)
      CALL AVDOT(D(IC+8),TN(IS),VN)
C
C...  CHECK TO SEE IF TOOL NORMAL IS PARALLEL TO AXIS OF TABCYL
C
      IF(DABS(UN)+DABS(VN)-QP5X01)1002,1002,600
C
C...  SET INDEXES AND BEGIN EXAMINING TABCYL SEGMENTS
C
  600 CALL ASTOR(CANSTO(IC+3),8,NWDS,4)
      NWDS = IC + 14 + 7*(NWDS-2)
      IF(Q1PE5*DABS(UN)-DABS(VN))102,101,101
  102 I1=2
      GO TO 103
  101 I1=1
      P    =VN/UN
      Q=VP-P*UP
  103 CALL ASTOR(CANSTO(IC+4),8,I,4)
      I=I-13
      IF(I-14)104,105,105
  104 I=14
  105 NMBSEG=I+IC
  550 DO 1000 I=NMBSEG,NWDS,7
C
C...  STORE CANONICAL INFORMATION FOR SEGMENT IN SEG(K)
C
      H2=D(I)-D(I+7)
      G2=D(I+8)-D(I+1)
      GO TO (128,129),I1
  128 TEM(1)=P*H2
      IF(D(I+5))111,112,113
  111 U(1)=D(I)+G2*D(I+5)
      V(1)=H2*D(I+5)+D(I+1)
      U(2)=U(1)-H2
      V(2)=V(1)+G2
      TEM(2)=P*U(1)+Q
      IF(TEM(2)-V(1))114,150,117
  114 IF(TEM(2)-TEM(1)-V(2))115,150,150
  115 V(3)=H2*D(I+6)-D(I+1)
      TEM(2)=(G2*D(I+6)-D(I))*P-V(3)-Q
      IF(-TEM(2))116,150,150
  116 IF(G2+TEM(2)+TEM(1))150,150,1000
  117 IF(V(2)-TEM(2)+TEM(1))118,150,150
  118 V(3)=H2*D(I+6)-D(I+1)
      TEM(2)=(G2*D(I+6)-D(I))*P-V(3)-Q
      IF(TEM(2))119,150,150
  119 IF(-TEM(2)-TEM(1)-G2)150,150,1000
  112 IF(P*D(I)+Q-D(I+1))120,150,121
  120 IF(P*D(I+7)-D(I+8)+Q)115,150,150
  121 IF(P*D(I+7)+Q-D(I+8))150,150,118
  113 V(1)=H2*D(I+5)-D(I+1)
      TEM(2)=(G2*D(I+5)-D(I))*P-V(1)-Q
      IF(-TEM(2))122,150,135
  122 IF(-TEM(2)-TEM(1)-G2)123,150,150
  123 IF(P*D(I)+Q-D(I+1)+QP6X01)124,150,150
  124 IF(P*D(I+7)+Q-D(I+8))1000,150,150
  135 IF(G2+TEM(2)+TEM(1))136,150,150
  136 IF(P*D(I)+Q-D(I+1))150,150,137
  137 IF(P*D(I+7)+Q-D(I+8))150,150,1000
  129 U(1)=DABS(D(I+5))*G2-D(I)+UP
      U(3)=G2*D(I+6)-D(I)+UP
      ANS=DMIN1(QP9X01*D(I+4),QP9X01)
      IF(U(1))141,150,144
  141 IF(U(1)+H2)142,150,150
  142 IF(U(3))143,150,150
  143 IF(-U(3)-H2)150,150,1000
  144 IF(-U(1)-H2+ANS)145,150,150
  145 IF(-U(3))146,150,150
  146 IF(U(3)+H2-ANS) 150,150,1000
  150 SINN=G2/D(I+4)
      COSS=-H2/D(I+4)
      H2=UP-D(I)
      G2=VP-D(I+1)
      UPP=H2*COSS+G2*SINN
      VPP=-H2*SINN+G2*COSS
      UNN=UN*COSS+VN*SINN
      VNN=-UN*SINN+VN*COSS
C
C...  TEST FOR INTERSECTION OF DIRECTED LINE WITH RECTANGLE
C...  SURROUNDING TABCYL SEGMENT
C
      IF(Q1PE5*DABS(UNN)-DABS(VNN))603,603,604
  603 J=2
  501 SEG(3)=D(I+2)
      SEG(4)=D(I+3)
      SEG(5)=-D(I+4)*(SEG(3)*D(I+4)+SEG(4))
      GO TO(609,502),J
  502 SEG(8)=CUBICF(UPP)
      TEM(2)=SEG(8)-VPP
      TEM(1)=TEM(2)*TEM(2)
      IF(TEM(1)-S(IS))503,1000,1000
  503 SEG(9)=UPP
      IF(TEM(2)*VNN)504,506,506
  504 IF(IOP(IIS))505,505,1000
  505 GSIGN=-Q1P
      GO TO 507
  506 GSIGN=Q1P
  507 ISEG(2)=I
      S(IS)=TEM(1)
      DO 508 N=1,9
  508 SAVPAR(N)=SEG(N+2)
      ISEG(4)=-1
      GO TO (51,1000),J
  604 SLOPE=VNN/UNN
      IF(DABS(SLOPE)-QP5X01)605,605,4419
  605 SLOPE=QNUL
 4419 SQROOT=D(I+4)
      J=1
      IF(ISEG(4))509,501,509
  509 TEM(1)=QNUL
      V(1)=SQROOT*D(I+6)
      V(2)=SQROOT*DABS(D(I+5))
      IF(-UPP)4429,4420,4420
 4429 IF(UPP-SQROOT)4431,4430,4430
 4431 IF(V(1)-VPP)4434,501,4432
 4434 IF(VPP-V(2))501,501,4435
 4430 TEM(1)=SQROOT
 4420 TEM(2)=VPP+SLOPE*(TEM(1)-UPP)
 4421 IF(V(1)-TEM(2))4426,4424,4432
 4426 IF(V(2)-TEM(2))4435,4424,4424
 4435 J=2
 4432 TEM(1)=(V(J)-VPP)/SLOPE+UPP
 4425 TEM(2)=V(J)
 4424 TEM(3)=(TEM(1)-UPP)**2+(TEM(2)-VPP)**2
C
C...  IF DIRECTED DISTANCE TO RECTANGLE IS LESS THAN DIR. DIST.
C...  TO CUBIC OF LAST SEGMENT,GO AHEAD AND CALC. DIR. DIST.
C...  TO CUBIC FOR THIS SEGMENT
C
      IF(TEM(3)-S(IS))4436,1000,1000
 4436 J=1
      IF(IOP(IIS)) 501,501,4437
 4437 IF(UNN*(UPP-TEM(1))+VNN*(VPP-TEM(2)))501,501,1000
C
C...  CALC. DIRECTED DISTANCE TO CUBIC OF SEGMENT
C
C...  J IS SET TO KEEP A RECORD OF THE NUMBER OF INTERSECTIONS WITH
C...  THE CUBIC
C
  609 VINT=VPP-SLOPE*UPP
      IF(QP5X01-DABS(VINT))612,618,618
C
C...  TEST FOR DEGENERATE CASES OF CUBIC
C
  612 IF(SEG(3))630,613,630
  613 IF(SEG(4))616,617,616
C
C...  DOES DIRECTED LINE CROSS U AXIS WITHIN SEGMENT
C
  614 IF(VINT*SLOPE)615,635,635
  615 IF(VINT / SLOPE + SQROOT + QP5X01 * SQROOT) 635,635,5041
C
C...  DEGENERATE CUBIC ---- QUADRATIC EQUATION
C
  616 C1=-VINT
      A1=SEG(4)
      B1=SEG(5)-SLOPE
  622 J=0
      GO TO 623
C
C...  DEGENERATE CUBIC ---- LINEAR EQUATION
C
  617 X(1)=-VINT/SLOPE
      GO TO 48
C
C...  FACTOR OUT THE ROOT,X=0,AND CREATE THE RESULTING QUADRATIC
C
  618 X(1)=QNUL
      C1=SEG(5)
      B1=SEG(4)
  643 A1=SEG(3)
C
C...  SOLVE THE QUADRATIC EQUATION FOR ROOTS
C
  623 SQ=B1**2-Q4P*A1*C1
      IF(DABS(SQ)-QP6X01)624,624,625
 624  IF(DABS(A1)-QP5X01) 62400,62400,62401
62400 X(2)=Q1PE20
      GO TO 62402
62401 X(2)=-B1/(Q2P*A1)
C
C...  K IS SET TO KEEP A RECORD OF THE NUMBER OF ROOTS
C...  OF THE QUADRATIC, 0=0 ROOTS, 2=1 ROOT, 3=2 ROOTS
C
62402 K=2
      GO TO 629
  625 IF(SQ)621,621,627
  621 K=0
      GO TO 629
  627 SQ=-B1-DSIGN(DSQRT(SQ),B1)
      X(2)=Q2P*C1/SQ
      IF(DABS(A1) - QP5X01) 6271,6271,6272
 6271 X(3) = Q1PE20
      GO TO 6273
 6272 X(3) = SQ/(Q2P*A1)
 6273 K = 3
  629 IF(J)614,631,631
C
C...  REJECT ROOTS NOT IN SEGMENT AND UPDATE RECORDS
C
  631 N=1
  750 N=N+1
      IF(N-K)751,751,752
  751 IF(X(N))750,634,633
  633 IF(X(N)-SQROOT)634,634,750
  634 X(J+1)=X(N)
      J=J+1
      GO TO 750
  752 IF(J)1000,1000,48
C
C...  TRUE CUBIC, PREPARE TO DETERMINE ROOT
C
C...  DIFFERENTIATE CUBIC AND SOLVE FOR MAX AND MIN POINTS
C
  630 J=-1
  620 A1=Q3P*SEG(3)
      B1=Q2P*SEG(4)
      C1=SEG(5)-SLOPE
      GO TO 623
C
C...  ELIMINATE MAX AND MIN POINTS NOT IN THE SEGMENT
C
  635 N=1
  753 N=N+1
      IF(N-K)754,754,1000
  754 IF(X(N))753,753,637
  637 IF(X(N)-SQROOT)638,638,753
C
C...  LOOK FOR TANGENCY AND MULTIPLE INTERSECTION CASES
C
  638 TEM(1)=CUBC1F(X(N))
      IF(DABS(TEM(1))-QP4X01)639,640,640
C
C...  TANGENCY
C
  639 X(1)=X(N)
      J=1
      GO TO 48
  641 J=1
  642 B1=SEG(3)*X(1)+SEG(4)
      C1=B1*X(1)+SEG(5)-SLOPE
      GO TO 643
C
C...  IS THERE A POSSIBLE MULTIPLE INTERSECTION
C
  640 IF(VINT*TEM(1))753,5041,5041
C
C...  CALCULATE VALUE OF X WHICH WILL ASSURE CONVERGENCE TO A ROOT
C
 5041 IF(K-2) 5090,5090,5050
 5090 X(1)=QP5*SQROOT
      GO TO 5100
 5050 DO 5060 J=1,2
 5060 TEM(J)=CUBC1F(X(J+1))
      IF(TEM(1)*TEM(2))5061,5062,5062
 5061 X(1)=(X(2)+X(3))*QP5
      GO TO 5100
 5062 IF(DABS(TEM(1))-DABS(TEM(2)))5063,5064,5064
 5063 X(1)=Q1P2*X(3)-QP2*X(2)
      GOTO 5100
 5064 X(1)=Q1P2*X(2)-QP2*X(3)
C
C...  ITERATE FOR ROOT OF CUBIC
C
 5100 X(1)=DMIN1(DMAX1(X(1),QNUL),SQROOT)
      TEM(1)=Q3P*SEG(3)
      TEM(2)=Q2P*SEG(4)
      TEM(3)=SEG(5)-SLOPE
C... SET SPECIAL END OF INTERVAL SWITCH TO INITIAL(OFF) POSITION
      INTEND = 0
      DO 5200 M=1,100
      TEM(4)=(TEM(1)*X(1)+TEM(2))*X(1)+TEM(3)
      IF(DABS(TEM(4))-1.D-20)4008,4009,4009
 4008 X(1)=X(1)+QP5X01
      GO TO 5200
 4009 TEM(4)=CUBC1F(X(1))/TEM(4)
C
C...  ACCEPT ROOT WHEN CORRECTION TERM IS LESS THAN .000001*X
C
      IF(DABS(TEM(4)) - QP5X01 * DABS(X(1))) 5101,5110,5110
C... TEST TO SEE IF X(1) IS IN RANGE OF INTERVAL
 5101 IF((X(1) .GE. QNUL) .AND. (X(1) .LE. SQROOT)) GO TO 5300
C... NO,  OUT OF RANGE -- SEE IF SPECIAL END SWITCH ON
      IF(INTEND .NE. 0) GO TO 5300
C... TURN ON END SWITCH -- TRY ONE MORE TIME IF OUTNESS IS VERY SMALL
      INTEND = 1
C... SET X(1) JUST INSIDE OF INTERVAL
      IF(X(1)) 5102,5102,5103
C... LOW END
 5102 X(1) = QP9X01
      GO TO 5200
C... HIGH END
 5103 X(1) = SQROOT - QP9X01
      GO TO 5200
 5110 X(1)=X(1)-TEM(4)
 5200 CONTINUE
      CALL AERR(-1501)
      GO TO 1000
C
C...  IF THE ROOT IS WITHIN THE SEGMENT,
C...  FACTOR OUT THE ROOT X,FOUND BY ITERATION, AND SOLVE
C...  THE RESULTING QUADRATIC
C
 5300 IF(X(1))636,641,644
  636 J=0
      GO TO 642
  644 IF(X(1)-SQROOT)641,641,636
   48 L=J
      K=1
C
C...  USING U COORD. OF INTERSECTION POINT,SOLVE CUBIC FOR V COORD.
C
  514 SEG(8)=CUBICF(X(K))
C
C...  CALCULATE DIR. DIST. TO CUBIC AND TEST AGAINST PRESENT VALUE
C
      TEM(1)=(X(K)-UPP)**2+(SEG(8)-VPP)**2
      IF(TEM(1)-S(IS))49,51,51
   49 SEG(9)=X(K)
      J=1
      IF((X(K)-UPP)*UNN+(SEG(8)-VPP)*VNN)50,506,506
   50 IF(IOP(IIS))505,505,51
   51 K=K+1
      IF(L-K)1000,514,514
 1000 CONTINUE
      IF(NMBSEG-IC-14)510,511,510
  510 NWDS=NMBSEG-7
      NMBSEG=IC+14
      GO TO 550
  511 IF(ISEG(4))9000,1002,1002
C...  CALCULATE SURFACE NORMAL IN U-V-W COORD. SYSTEM
C
 9000 TEM(3)=DATAN((Q3P*SAVPAR(1)*SAVPAR(7)+Q2P*SAVPAR(2))*SAVPAR(7)+SAV
     1PAR(3))
  513 TEM(4)=DSIN(TEM(3))
      TEM(5)=DCOS(TEM(3))
      TEM(1)=-SAVPAR(4)*TEM(5)-SAVPAR(5)*TEM(4)
      TEM(2)=SAVPAR(5)*TEM(5)-SAVPAR(4)*TEM(4)
      K=IC
      DO 9001 I=1,3
      TEM(I+7)=D(K+5)*TEM(1)+D(K+8)*TEM(2)
 9001 K=K+1
C
C...  SAVE SEGMENT INDEX
C
      KKK=ISEG(2)-IC-1
      CALL ASTOR(KKK,4,D(IC+4),8)
C
C...  CALCULATE 3D DIRECTED DISTANCE
      S(IS)=DSIGN(DSQRT(((SAVPAR(8)-SAVPAR(7))**2+(SAVPAR(9)-SAVPAR(6))*
     1*2)/(UN**2+VN**2)),GSIGN)
   29 RETURN
C
C...  UNABLE TO FIND DIRECTED DISTANCE
 1002 IER=1
      GO TO 29
      END

